{"version":3,"mappings":"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","names":["startOfDay","date","endOfDay","getUserTimezone","defaultTimezone","_a","getBootstrapData","preferredTimezone","_c","_b","getLocalTimeZone","Now","now","locale","DateRangePresets","message","startOfWeek","endOfWeek","start","startOfMonth","endOfMonth","startOfYear","endOfYear","DateRangeIcon","createSvgIcon","jsx","Input","React","props","ref","children","inputProps","wrapperProps","className","autoFocus","style","onClick","clsx","FocusScope","DatePickerField","inputRef","onBlur","other","fieldClassNames","getInputFieldClassNames","objRef","useObjectRef","fieldProps","useField","Field","mergeProps","e","focusManager","createFocusManager","getDefaultGranularity","CalendarDate","dateIsInvalid","min","max","useBaseDatePickerState","selectedDate","timezone","useUserTimezone","calendarIsOpen","setCalendarIsOpen","useState","closeDialogOnSelection","granularity","toZoned","useCurrentDateTime","useMemo","useDateRangePickerState","isPlaceholder","setIsPlaceholder","setStateValue","internalValue","setInternalValue","useControlledState","completeRange","value","clear","useCallback","anchorDate","setAnchorDate","isHighlighting","setIsHighlighting","highlightedRange","setHighlightedRange","calendarDates","setCalendarDates","rangeToCalendarDates","constrainRange","range","end","maxDate","startMax","minDate","endMin","setSelectedValue","newRange","dayIsActive","day","isSameDay","dayIsHighlighted","dayIsRangeStart","dayIsRangeEnd","getCellProps","isSameMonth","makeRange","finalRange","toCalendarDate","ArrowRightAltIcon","adjustSegment","part","amount","options","hours","isPM","setSegment","segmentValue","wasPM","PAGE_STEP","EditableDateSegment","segment","domProps","onChange","isMobile","useIsMobileMediaQuery","enteredKeys","useRef","localeCode","useSelectedLocale","useFocusManager","formatter","useDateFormatter","parser","NumberParser","setSegmentValue","newValue","adjustSegmentValue","backspace","parsed","today","onKeyDown","onInput","amPmFormatter","am","amDate","pm","pmDate","key","numberValue","allowsZero","shouldSetValue","spinButtonProps","LiteralDateSegment","getSegmentLimits","type","getMinimumMonthInYear","getMinimumDayInMonth","DateSegmentList","segmentProps","state","memoOptions","dateValue","segments","limits","textValue","index","CalendarCell","currentMonth","dayOfWeek","getDayOfWeek","isActive","isHighlighted","isRangeStart","isRangeEnd","dayIsToday","isToday","sameMonth","isDisabled","jsxs","CalendarMonth","startDate","isFirst","isLast","weeksInMonth","getWeeksInMonth","monthStart","CalendarMonthHeader","WeekdayHeader","weekIndex","m","dayIndex","shiftCalendars","direction","count","newDates","monthFormatter","isBackwardDisabled","isForwardDisabled","IconButton","KeyboardArrowLeftIcon","KeyboardArrowRightIcon","dayFormatter","dateDay","weekday","Calendar","visibleMonths","Fragment","FormattedDateTimeRange","memo","preset","dates","useSettings","DateFormatPresets","castToDate","shallowEqual","parseAbsolute","DatePresetList","onPresetSelected","selectedValue","List","ListItem","Trans","DateRangeComparePresets","diffInMinutes","DateRangeComparePresetList","originalRangeValue","DateRangeDialog","compareState","showInlineDatePickerField","compareVisibleDefault","isTablet","useIsTabletMediaQuery","close","useDialogContext","initialStateRef","hasPlaceholder","compareVisible","setCompareVisible","footer","DialogFooter","Button","Dialog","DialogBody","Switch","AnimatePresence","Calendars","InlineDatePickerField","label","DatatableDataQueryKey","endpoint","params","useDatatableData","onLoad","useQuery","signal","paginate","keepPreviousData","resolve","response","apiClient","useNormalizedModels","queryParams","queryOptions","fetchModels","r","useNormalizedModel","fetchModel","NormalizedModelField","background","defaultValue","placeholder","searchPlaceholder","description","errorMessage","invalid","disabled","required","inputValue","setInputValue","query","trans","useTrans","SelectedModelPreview","Select","model","Item","Avatar","modelId","onEditClick","data","isLoading","LoadingSkeleton","opacityAnimation","Tooltip","EditIcon","Skeleton","FormNormalizedModelField","name","clearErrors","useFormContext","error","useController","stringToChipValue","ChipFieldInner","fieldRef","displayWith","v","validateWith","suggestions","onInputValueChange","onItemSelected","onOpenChange","chipSize","openMenuOnFocus","showEmptyMessage","propsValue","propsOnChange","valueKey","isAsync","allowCustomValue","showDropdownArrow","onChipClick","inputFieldProps","useChipFieldValueState","listboxIsOpen","setListboxIsOpen","loadingIndicator","ProgressCircle","dropdownArrow","KeyboardArrowDownIcon","ListWrapper","ChipInput","items","setItems","displayChipUsing","manager","removeItem","i","cr","newItems","ChipList","item","Chip","setChips","chips","inputClassName","addItems","listbox","useListbox","handleItemSelection","activeIndex","setActiveIndex","isOpen","setIsOpen","refs","listboxId","collection","onInputChange","option","useLayoutEffect","handleTriggerKeyDown","handleListboxKeyboardNavigation","useListboxKeyboardNavigation","handleFocusAndClick","createEventHandler","Listbox","Popover","emails","selection","email","input","mixedValueToChipValue","propsDefaultValue","handleChange","ChipField","FormChipField","formProps","useDatePickerState","DatePicker","showCalendarFooter","dialog","DialogTrigger","openOnClick","isHourSegment","FormDatePicker","format","parseAbsoluteToLocal","parsedValue","DragHandleIcon","useStickySentinel","isSticky","setIsSticky","observerRef","sentinelRef","sentinel","observer","CrupdateResourceLayout","onSubmit","form","title","subTitle","actions","backButton","disableSaveWhenNotDirty","wrapInContainer","isDirty","Form","musicImage","useArtistPickerSuggestions","fetchArtists","FormArtistPicker","result","FormNormalizedModelChipField","TAG_MODEL","FileUploadIcon","TrackUploadStatusText","fileUpload","status","bytesUploaded","totalBytes","prettyBytes","uploadedBytes","statusMessage","TrackUploadProgress","onAbort","size","UploadStatusButton","ProgressBar","useFileUploadStore","s","statusButton","errMessage","AnimatedStatus","MixedText","ErrorIcon","WarningIcon","CheckCircleIcon","CloseIcon","useExtractTackFileMetadata","useMutation","payload","extractMeta","err","showHttpErrorToast","metadataToFormValues","values","hydrateAlbumForm","mergeArraysWithoutDuplicates","mergeTrackFormValues","newValues","oldValues","nv","ov","FiftyMB","useTrackUploader","uploads","restrictions","UploadInputType","extractMetadata","optionsRef","uploadMultiple","updateFileUpload","getUpload","updateUpload","uploadId","newMeta","uploadOptions","Disk","entry","file","formValues","toast","validateUploads","files","validFiles","validateUpload","uploadTracks","waveData","generateWaveformData","openUploadWindow","useTrackUpload","upload","isUploading","meta","isProcessing","TrackFormUploadButton","setUploadId","setValue","watch","getValues","openFilePicker","newData","mergedValues","activeUpload","abortUpload","clearInactive","TrackForm","showExternalIdFields","showAlbumField","uploadButton","FormImageSelector","FormTextField","GENRE_MODEL","DurationField","SourceField","SpotifyIdField","spotify_is_setup","FormattedDuration","useCreateTrack","onSuccess","createTrack","queryClient","onFormQueryError","prepareTrackPayload","artist","useCreateTrackForm","onTrackCreated","defaultValues","useForm","CreateTrackPage","navigate","useNavigate","pathname","useLocation","getTrackLink","FileUploadProvider","Endpoint","id","useUpdateTrack","updateChannel","useUpdateTrackForm","track","updateTrack","UpdateTrackPage","useTrack","PageContent","PageStatus","canEdit","useTrackPermissions","Navigate","useCreateAlbum","createAlbum","prepareAlbumPayload","useUpdateAlbum","albumId","updateAlbum","getAlbumLink","UpdateTrackDialog","hideAlbumField","formId","DialogHeader","CreateTrackDialog","AlbumTracksForm","fields","remove","prepend","move","useFieldArray","f","tracks","newTrack","AddIcon","field","TrackItem","oldIndex","newIndex","IllustratedMessage","SvgImage","onRemove","onUpdate","onSort","previewRef","sortableProps","useSortable","updatedTrack","isConfirmed","ConfirmationDialog","RowDragPreview","content","DragPreview","AlbumForm","UpdateAlbumPage","useAlbum","album","useAlbumPermissions","uploadIsInProgress","AlbumUploader","forwardRef","onUploadStart","onCancel","onCreate","userArtist","usePrimaryArtistForCurrentUser","isVisible","setIsVisible","useImperativeHandle","TracksUploader","setTracks","prev","allTracks","TrackUploadItem","createdTrack","t","newTracks","useEffect","uploadProgress","albumBorderImage","UploadedMediaPreview","media","isAlbum","ALBUM_MODEL","absoluteLink","AlbumImage","TrackImage","ArtistLinks","genre","parts","Link","LinkStyle","ShareMediaButtons","TextField","DropTargetMask","mask","resetMinutesLimitQuery","user","useUserMinutesLimit","useAuth","userId","fetchLimit","lightBgImage","darkBgImage","BackstageLayout","isDarkMode","useIsDarkMode","Navbar","Footer","UploadPage","backstageLayout","Content","uploadMode","setUploadMode","modeIsLocked","setModeIsLocked","uploaderRef","Uploader","createdItems","setCreatedItems","isDragOver","setIsDragOver","droppableProps","useDroppable","draggable","Wrapper","DefaultWrapper","UploadPanel","onUpload","onUploadModeChange","CreateAlbumPage","searchParams","useSearchParams","useBackstageRequest","requestId","useParams","fetchBackstageRequest","trackId","DocumentScannerIcon","InfoDialogTriggerIcon","Columns","AlbumLink","FormattedDate","FormattedNumber","RowActions","ArtistAlbumsTable","albums","artistId","sortDescriptor","onSortChange","useSortableTableData","Table","deleteAlbum","useDeleteAlbum","CrupdateArtistForm","showExternalFields","FormSwitch","Tabs","TabList","Tab","TabPanels","TabPanel","DetailsPanel","ProfileLinksForm","BiographyPanel","ImagesPanel","append","useUpdateArtist","getArtistLink","UpdateArtistPage","useArtist","useArtistPermissions","updateArtist","monthDayFormat","ReportDateSelector","compactOnMobile","enableCompare","DateSelectorDialog","compareHasInitialValue","ChartLayout","contentIsFlex","contentClassName","contentRef","minHeight","ChartLoadingIndicator","LazyChart","lazy","BaseChart","Suspense","formatReportData","report","shareFirstDatasetLabels","firstDatasetLabels","dataset","datasetIndex","datasetItem","itemIndex","generateDatasetLabels","datum","generateTimeLabels","isoDate","isoEndDate","endDate","getFormatter","memoize","DateFormatter","a","b","primaryColor","ChartColors","LineChartOptions","LineChart","formattedData","PolarAreaChartOptions","PolarAreaChart","d","c","loaderUrl","useGoogleGeoChart","placeholderRef","country","onCountrySelected","analytics","apiKey","selectedTheme","useThemeSelector","geoChartRef","regionInteractivity","drawGoogleChart","seedData","location","backgroundColor","themeValueToHex","initGoogleGeoChart","lazyLoader","ArrowBackIcon","InfoDialogTrigger","body","dialogSize","FormattedCountryName","countryCode","regionNames","formattedName","GeoChart","metricData","layoutProps","initialData","InfoTrigger","useInsightsReport","fetchReport","InfoIcon","TopModelsChartLayout","dataItems","Image","Name","Description","PlayArrowFilledIcon","link","SmallArtistImage","UserAvatar","ArtistLink","TrackLink","UserProfileLink","InsightsReportCharts","rowClassName","dateRange","AsyncChart","metric","isEnabled","setIsEnabled","chart","el","cloneElement","BackstageInsightsLayout","reportModel","isNested","setDateRange","StaticPageTitle","BackstageInsightsTitle","image","BackstageArtistInsights","BackstageAlbumInsights","BackstageTrackInsights"],"sources":["../../../common/resources/client/utils/date/start-of-day.ts","../../../common/resources/client/utils/date/end-of-day.ts","../../../common/resources/client/i18n/get-user-timezone.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/resources/client/icons/material/DateRange.tsx","../../../common/resources/client/ui/forms/input-field/input.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/resources/client/ui/forms/input-field/date/utils.ts","../../../common/resources/client/ui/forms/input-field/date/use-base-date-picker-state.ts","../../../common/resources/client/i18n/use-current-date-time.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/resources/client/icons/material/ArrowRightAlt.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/set-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/page-step.ts","../../../common/resources/client/ui/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/literal-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/resources/client/ui/forms/input-field/date/segments/date-segment-list.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-month.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar.tsx","../../../common/resources/client/i18n/formatted-date-time-range.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/users/queries/use-normalized-models.ts","../../../common/resources/client/users/queries/use-normalized-model.ts","../../../common/resources/client/ui/forms/normalized-model-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/resources/client/ui/forms/input-field/chip-field/chip-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/form-chip-field.tsx","../../../common/resources/client/ui/forms/input-field/date/date-picker/use-date-picker-state.ts","../../../common/resources/client/ui/forms/input-field/date/date-picker/date-picker.tsx","../../../common/resources/client/icons/material/DragHandle.tsx","../../../common/resources/client/utils/hooks/sticky-sentinel.ts","../../../common/resources/client/admin/crupdate-resource-layout.tsx","../../../resources/client/admin/tracks-datatable-page/music.svg","../../../resources/client/web-player/artists/artist-picker/use-artist-picker-suggestions.ts","../../../resources/client/web-player/artists/artist-picker/form-artist-picker.tsx","../../../common/resources/client/tags/form-normalized-model-chip-field.tsx","../../../common/resources/client/tags/tag.ts","../../../common/resources/client/icons/material/FileUpload.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-status-text.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-progress.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-extract-track-file-metadata.ts","../../../resources/client/web-player/backstage/upload-page/use-track-uploader.ts","../../../resources/client/web-player/backstage/upload-page/use-track-upload.ts","../../../resources/client/admin/tracks-datatable-page/track-form/track-form-upload-button.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-form.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-create-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-create-track-form.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/create-track-page.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-update-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-update-track-form.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/update-track-page.tsx","../../../resources/client/admin/albums-datatable-page/requests/use-create-album.ts","../../../resources/client/admin/albums-datatable-page/requests/use-update-album.ts","../../../resources/client/admin/tracks-datatable-page/track-form/update-track-dialog.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/create-track-dialog.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-tracks-form.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-form.tsx","../../../resources/client/admin/albums-datatable-page/update-album-page.tsx","../../../resources/client/web-player/backstage/upload-page/album-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/tracks-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/album-border.png","../../../resources/client/web-player/backstage/upload-page/uploaded-media-preview.tsx","../../../resources/client/web-player/backstage/upload-page/drop-tarket-mask.tsx","../../../resources/client/web-player/backstage/upload-page/use-user-minutes-limit.ts","../../../resources/client/web-player/backstage/images/light-bg.svg","../../../resources/client/web-player/backstage/images/dark-bg.svg","../../../resources/client/web-player/backstage/backstage-layout.tsx","../../../resources/client/web-player/backstage/upload-page/upload-page.tsx","../../../resources/client/admin/albums-datatable-page/create-album-page.tsx","../../../resources/client/web-player/backstage/requests/use-backstage-request.ts","../../../common/resources/client/icons/material/DocumentScanner.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/artist-albums-table.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/crupdate-artist-form.tsx","../../../resources/client/admin/artist-datatable-page/requests/use-update-artist.ts","../../../resources/client/admin/artist-datatable-page/update-artist-page.tsx","../../../common/resources/client/admin/analytics/report-date-selector.tsx","../../../common/resources/client/charts/chart-layout.tsx","../../../common/resources/client/charts/chart-loading-indicator.tsx","../../../common/resources/client/charts/base-chart.tsx","../../../common/resources/client/charts/data/format-report-data.ts","../../../common/resources/client/charts/chart-colors.tsx","../../../common/resources/client/charts/line-chart.tsx","../../../common/resources/client/charts/polar-area-chart.tsx","../../../common/resources/client/admin/analytics/geo-chart/use-google-geo-chart.ts","../../../common/resources/client/icons/material/ArrowBack.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger.tsx","../../../common/resources/client/i18n/formatted-country-name.tsx","../../../common/resources/client/admin/analytics/geo-chart/geo-chart.tsx","../../../resources/client/admin/reports/requests/use-insights-report.ts","../../../common/resources/client/icons/material/Info.tsx","../../../resources/client/admin/reports/top-models-chart-layout.tsx","../../../resources/client/admin/reports/insights-report-charts.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-layout.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-title.tsx","../../../resources/client/web-player/backstage/insights/backstage-artist-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-album-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-track-insights.tsx"],"sourcesContent":["import {ZonedDateTime} from '@internationalized/date';\n\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({\n    hour: 24 - 1,\n    minute: 60 - 1,\n    second: 60 - 1,\n    millisecond: 1000 - 1,\n  });\n}\n","import {getBootstrapData} from '../core/bootstrap-data/use-backend-bootstrap-data';\nimport {getLocalTimeZone} from '@internationalized/date';\n\nexport function getUserTimezone(): string {\n  const defaultTimezone = getBootstrapData()?.settings.dates.default_timezone;\n  const preferredTimezone =\n    getBootstrapData()?.user?.timezone || defaultTimezone || 'auto';\n\n  if (!preferredTimezone || preferredTimezone === 'auto') {\n    return getLocalTimeZone();\n  }\n  return preferredTimezone;\n}\n","import {DateRangeValue} from '../date-range-value';\nimport {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  now,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n} from '@internationalized/date';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {getUserTimezone} from '@common/i18n/get-user-timezone';\n\nconst Now = startOfDay(now(getUserTimezone()));\nconst locale = getBootstrapData()?.i18n?.language || 'en';\n\nexport interface DateRangePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: () => DateRangeValue;\n}\n\nexport const DateRangePresets: DateRangePreset[] = [\n  {\n    key: 0,\n    label: message('Today'),\n    getRangeValue: () => ({\n      preset: 0,\n      start: Now,\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 1,\n    label: message('Yesterday'),\n    getRangeValue: () => ({\n      preset: 1,\n      start: Now.subtract({days: 1}),\n      end: endOfDay(Now).subtract({days: 1}),\n    }),\n  },\n  {\n    key: 2,\n    label: message('This week'),\n    getRangeValue: () => ({\n      preset: 2,\n      start: startOfWeek(Now, locale),\n      end: endOfWeek(endOfDay(Now), locale),\n    }),\n  },\n  {\n    key: 3,\n    label: message('Last week'),\n    getRangeValue: () => {\n      const start = startOfWeek(Now, locale).subtract({days: 7});\n      return {\n        preset: 3,\n        start,\n        end: start.add({days: 6}),\n      };\n    },\n  },\n  {\n    key: 4,\n    label: message('Last 7 days'),\n    getRangeValue: () => ({\n      preset: 4,\n      start: Now.subtract({days: 7}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 6,\n    label: message('Last 30 days'),\n    getRangeValue: () => ({\n      preset: 6,\n      start: Now.subtract({days: 30}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 7,\n    label: message('Last 3 months'),\n    getRangeValue: () => ({\n      preset: 7,\n      start: Now.subtract({months: 3}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 8,\n    label: message('Last 12 months'),\n    getRangeValue: () => ({\n      preset: 8,\n      start: Now.subtract({months: 12}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 9,\n    label: message('This month'),\n    getRangeValue: () => ({\n      preset: 9,\n      start: startOfMonth(Now),\n      end: endOfMonth(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 10,\n    label: message('This year'),\n    getRangeValue: () => ({\n      preset: 10,\n      start: startOfYear(Now),\n      end: endOfYear(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 11,\n    label: message('Last year'),\n    getRangeValue: () => ({\n      preset: 11,\n      start: startOfYear(Now).subtract({years: 1}),\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\n    }),\n  },\n];\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DateRangeIcon = createSvgIcon(\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\n, 'DateRangeOutlined');\n","import {FocusScope} from '@react-aria/focus';\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InputProps {\n  className?: string;\n  children: ReactNode;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  style?: CSSProperties;\n  inputProps?: ComponentPropsWithoutRef<'div'>;\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\n  (props, ref) => {\n    const {\n      children,\n      inputProps,\n      wrapperProps,\n      className,\n      autoFocus,\n      style,\n      onClick,\n    } = props;\n\n    return (\n      <div {...wrapperProps} onClick={onClick}>\n        <div\n          {...inputProps}\n          role=\"group\"\n          className={clsx(\n            className,\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\n          )}\n          ref={ref}\n          style={style}\n        >\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\n        </div>\n      </div>\n    );\n  }\n);\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\nimport clsx from 'clsx';\nimport {createFocusManager} from '@react-aria/focus';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\nimport {Field, FieldProps} from '../../field';\nimport {Input} from '../../input';\nimport {useField} from '../../use-field';\n\nexport interface DatePickerFieldProps\n  extends Omit<FieldProps, 'fieldClassNames'> {\n  inputRef?: Ref<HTMLDivElement>;\n  onBlur?: FocusEventHandler;\n  showCalendarFooter?: boolean;\n}\nexport const DatePickerField = React.forwardRef<\n  HTMLDivElement,\n  DatePickerFieldProps\n>(({inputRef, wrapperProps, children, onBlur, ...other}, ref) => {\n  const fieldClassNames = getInputFieldClassNames(other);\n  const objRef = useObjectRef(ref);\n\n  const {fieldProps, inputProps} = useField({\n    ...other,\n    focusRef: objRef,\n    labelElementType: 'span',\n  });\n\n  fieldClassNames.wrapper = clsx(\n    fieldClassNames.wrapper,\n    other.disabled && 'pointer-events-none',\n  );\n\n  return (\n    <Field\n      wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\n        wrapperProps!,\n        {\n          onBlur: e => {\n            if (!objRef.current.contains(e.relatedTarget)) {\n              onBlur?.(e);\n            }\n          },\n          onClick: () => {\n            // focus first segment when clicking on label or somewhere else in the field, but no directly on segment\n            const focusManager = createFocusManager(objRef);\n            focusManager?.focusFirst();\n          },\n        },\n      )}\n      fieldClassNames={fieldClassNames}\n      ref={objRef}\n      {...fieldProps}\n    >\n      <Input\n        inputProps={inputProps}\n        className={clsx(fieldClassNames.input, 'gap-10')}\n        ref={inputRef}\n      >\n        {children}\n      </Input>\n    </Field>\n  );\n});\n","import {CalendarDate, DateValue} from '@internationalized/date';\n\nexport function getDefaultGranularity(date: DateValue) {\n  if (date instanceof CalendarDate) {\n    return 'day';\n  }\n  return 'minute';\n}\n\nexport function dateIsInvalid(\n  date: CalendarDate,\n  min?: DateValue,\n  max?: DateValue\n) {\n  return (\n    (min != null && date.compare(min) < 0) ||\n    (max != null && date.compare(max) > 0)\n  );\n}\n","import {useState} from 'react';\nimport {DateValue, toZoned, ZonedDateTime} from '@internationalized/date';\nimport {getDefaultGranularity} from './utils';\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-picker/date-range-value';\nimport {useUserTimezone} from '@common/i18n/use-user-timezone';\n\nexport function useBaseDatePickerState(\n  selectedDate: DateValue,\n  props:\n    | DatePickerValueProps<ZonedDateTime>\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>\n) {\n  const timezone = useUserTimezone();\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\n\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\n  const min = props.min ? toZoned(props.min, timezone) : undefined;\n  const max = props.max ? toZoned(props.max, timezone) : undefined;\n\n  return {\n    timezone,\n    granularity,\n    min,\n    max,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  };\n}\n","import {useMemo} from 'react';\nimport {now} from '@internationalized/date';\nimport {useUserTimezone} from './use-user-timezone';\n\nexport function useCurrentDateTime() {\n  const timezone = useUserTimezone();\n  return useMemo(() => {\n    return now(timezone);\n  }, [timezone]);\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  maxDate,\n  minDate,\n  startOfMonth,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {\n  BaseDatePickerState,\n  DatePickerValueProps,\n} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface IsPlaceholderValue {\n  start: boolean;\n  end: boolean;\n}\n\nexport type DateRangePickerState = BaseDatePickerState<\n  DateRangeValue,\n  IsPlaceholderValue\n>;\n\nexport function useDateRangePickerState(\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n): DateRangePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\n  });\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value ? completeRange(props.value, now) : undefined,\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\n    value => {\n      setIsPlaceholder({start: false, end: false});\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue.start, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder({start: true, end: true});\n    setInternalValue(completeRange(null, now));\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const [highlightedRange, setHighlightedRange] =\n    useState<DateRangeValue>(internalValue);\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return rangeToCalendarDates(internalValue, max);\n  });\n\n  const constrainRange = useCallback(\n    (range: DateRangeValue): DateRangeValue => {\n      let start = range.start;\n      let end = range.end;\n\n      // make sure start date is after min date and before max date/range end\n      if (min) {\n        start = maxDate(start, min);\n      }\n      const startMax = max ? minDate(max, end) : end;\n      start = minDate(start, startMax);\n\n      // make sure end date is after min date/range start and before max date\n      const endMin = min ? maxDate(min, start) : start;\n      end = maxDate(end, endMin);\n\n      if (max) {\n        end = minDate(end, max);\n      }\n\n      return {start: toZoned(start, timezone), end: toZoned(end, timezone)};\n    },\n    [min, max, timezone],\n  );\n\n  const setSelectedValue = useCallback(\n    (newRange: DateRangeValue) => {\n      const value = {\n        ...constrainRange(newRange),\n        preset: newRange.preset,\n      };\n      setInternalValue(value);\n      setHighlightedRange(value);\n      setCalendarDates(rangeToCalendarDates(value, max));\n      setIsPlaceholder({start: false, end: false});\n    },\n    [setInternalValue, constrainRange, max],\n  );\n\n  const dayIsActive = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\n      );\n    },\n    [highlightedRange, isPlaceholder],\n  );\n\n  const dayIsHighlighted = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\n        day.compare(highlightedRange.start) >= 0 &&\n        day.compare(highlightedRange.end) <= 0\n      );\n    },\n    [highlightedRange, isPlaceholder, isHighlighting],\n  );\n\n  const dayIsRangeStart = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\n    [highlightedRange],\n  );\n\n  const dayIsRangeEnd = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\n    [highlightedRange],\n  );\n\n  const getCellProps = useCallback(\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\n      return {\n        onPointerEnter: () => {\n          if (isHighlighting && isSameMonth) {\n            setHighlightedRange(\n              makeRange({start: anchorDate!, end: date, timezone}),\n            );\n          }\n        },\n        onClick: () => {\n          if (!isHighlighting) {\n            setIsHighlighting(true);\n            setAnchorDate(date);\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\n          } else {\n            const finalRange = makeRange({\n              start: anchorDate!,\n              end: date,\n              timezone,\n            });\n            // cast to start and end of day after making range, because \"makeRange\"\n            // will flip start and end dates, if they are out of order\n            finalRange.start = startOfDay(finalRange.start);\n            finalRange.end = endOfDay(finalRange.end);\n            setIsHighlighting(false);\n            setAnchorDate(null);\n            setSelectedValue?.(finalRange);\n            if (closeDialogOnSelection) {\n              setCalendarIsOpen?.(false);\n            }\n          }\n        },\n      };\n    },\n    [\n      anchorDate,\n      isHighlighting,\n      setSelectedValue,\n      setCalendarIsOpen,\n      closeDialogOnSelection,\n      timezone,\n    ],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    calendarDates,\n    setIsPlaceholder,\n    isPlaceholder,\n    clear,\n    setCalendarDates,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n\nfunction rangeToCalendarDates(\n  range: DateRangeValue,\n  max?: DateValue,\n): CalendarDate[] {\n  let start = toCalendarDate(startOfMonth(range.start));\n  let end = toCalendarDate(endOfMonth(range.end));\n\n  // make sure we don't show the same month twice\n  if (isSameMonth(start, end)) {\n    end = endOfMonth(end.add({months: 1}));\n  }\n\n  // if next month is disabled, show previous instead\n  if (max && end.compare(max) > 0) {\n    end = start;\n    start = startOfMonth(start.subtract({months: 1}));\n  }\n  return [start, end];\n}\n\ninterface MakeRangeProps {\n  start: DateValue;\n  end: DateValue;\n  timezone: string;\n}\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\n  const start = toZoned(props.start, props.timezone);\n  const end = toZoned(props.end, props.timezone);\n  if (start.compare(end) > 0) {\n    return {start: end, end: start};\n  }\n  return {start, end};\n}\n\nfunction completeRange(\n  range: Partial<DateRangeValue> | null | undefined,\n  now: ZonedDateTime,\n): DateRangeValue {\n  if (range?.start && range?.end) {\n    return range as DateRangeValue;\n  } else if (!range?.start && range?.end) {\n    range.start = range.end.subtract({months: 1});\n    return range as DateRangeValue;\n  } else if (!range?.end && range?.start) {\n    range.end = range.start.add({months: 1});\n    return range as DateRangeValue;\n  }\n  return {start: now, end: now.add({months: 1})};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowRightAltIcon = createSvgIcon(\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\n, 'ArrowRightAltOutlined');\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function adjustSegment(\n  value: ZonedDateTime,\n  part: string,\n  amount: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24,\n        });\n    }\n  }\n\n  return value;\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function setSegment(\n  value: ZonedDateTime,\n  part: string,\n  segmentValue: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const wasPM = hours >= 12;\n        const isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          const hours = value.hour;\n          const wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n      // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n\n  return value;\n}\n","export const PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15,\n  dayPeriod: 1,\n};\n","import {useFocusManager} from '@react-aria/focus';\nimport React, {\n  ComponentPropsWithoutRef,\n  HTMLAttributes,\n  KeyboardEventHandler,\n  useMemo,\n  useRef,\n} from 'react';\nimport {NumberParser} from '@internationalized/number';\nimport {mergeProps} from '@react-aria/utils';\nimport {today, ZonedDateTime} from '@internationalized/date';\nimport {useSelectedLocale} from '@common/i18n/selected-locale';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {adjustSegment} from './utils/adjust-segment';\nimport {setSegment} from './utils/set-segment';\nimport {PAGE_STEP} from './utils/page-step';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\nexport interface EditableSegment {\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\n  text: string;\n  value: number;\n  minValue: number;\n  maxValue: number;\n  minLength: number;\n}\n\ninterface DatePickerSegmentProps {\n  segment: EditableSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function EditableDateSegment({\n  segment,\n  domProps,\n  value,\n  onChange,\n  isPlaceholder,\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\n}: DatePickerSegmentProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const enteredKeys = useRef('');\n  const {localeCode} = useSelectedLocale();\n  const focusManager = useFocusManager();\n  const formatter = useDateFormatter({timeZone: timezone});\n  const parser = useMemo(\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\n    [localeCode],\n  );\n\n  const setSegmentValue = (newValue: number) => {\n    onChange(\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\n    );\n  };\n\n  const adjustSegmentValue = (amount: number) => {\n    onChange(\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\n    );\n  };\n\n  const backspace = () => {\n    if (parser.isValidPartialNumber(segment.text)) {\n      const newValue = segment.text.slice(0, -1);\n      const parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        const now = today(timezone);\n        if (segment.type in now) {\n          // @ts-ignore\n          setSegmentValue(now[segment.type]);\n        }\n      } else {\n        setSegmentValue(parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      adjustSegmentValue(-1);\n    }\n  };\n\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    // Navigation between date segments and deletion\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusNext();\n        break;\n      case 'Enter':\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\n        setCalendarIsOpen(!calendarIsOpen);\n        break;\n      case 'Tab':\n        break;\n      case 'Backspace':\n      case 'Delete': {\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n\n      // Spinbutton incrementing/decrementing\n      case 'ArrowUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(1);\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-1);\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\n        break;\n      case 'Home':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.maxValue);\n        break;\n      case 'End':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.minValue);\n        break;\n    }\n\n    onInput(e.key);\n  };\n\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  const am = useMemo(() => {\n    const amDate = new Date();\n    amDate.setHours(0);\n    return amPmFormatter\n      .formatToParts(amDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n  const pm = useMemo(() => {\n    const pmDate = new Date();\n    pmDate.setHours(12);\n    return amPmFormatter\n      .formatToParts(pmDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n\n  // Update date values on user keyboard input\n  const onInput = (key: string) => {\n    const newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (am.toLowerCase().startsWith(key)) {\n          setSegmentValue(0);\n        } else if (pm.toLowerCase().startsWith(key)) {\n          setSegmentValue(12);\n        } else {\n          break;\n        }\n        focusManager?.focusNext();\n        break;\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\n          switch (formatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (Number.isNaN(numberValue)) {\n          return;\n        }\n\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          setSegmentValue(segmentValue);\n        }\n\n        if (\n          Number(`${numberValue}0`) > segment.maxValue ||\n          newValue.length >= String(segment.maxValue).length\n        ) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager?.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\n    ? {}\n    : {\n        'aria-label': segment.type,\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\n        'aria-valuemin': segment.minValue,\n        'aria-valuemax': segment.maxValue,\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\n        tabIndex: 0,\n        onKeyDown,\n      };\n\n  return (\n    <div\n      {...mergeProps(domProps!, {\n        ...spinButtonProps,\n        onFocus: e => {\n          enteredKeys.current = '';\n          e.target.scrollIntoView({block: 'nearest'});\n        },\n        onClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n      } as HTMLAttributes<HTMLDivElement>)}\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\n    >\n      {segment.text.padStart(segment.minLength, '0')}\n    </div>\n  );\n}\n","import {useFocusManager} from '@react-aria/focus';\nimport {ComponentPropsWithoutRef} from 'react';\n\nexport interface LiteralSegment {\n  type: 'literal';\n  minLength: 1;\n  text: string;\n}\n\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\n  segment: LiteralSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n}\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\n  const focusManager = useFocusManager();\n  return (\n    <div\n      {...domProps}\n      onPointerDown={e => {\n        if (e.pointerType === 'mouse') {\n          e.preventDefault();\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\n          if (!res) {\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\n          }\n        }\n      }}\n      aria-hidden\n      className=\"min-w-4 cursor-default select-none\"\n    >\n      {segment.text}\n    </div>\n  );\n}\n","import {\n  DateValue,\n  getMinimumDayInMonth,\n  getMinimumMonthInYear,\n} from '@internationalized/date';\n\nexport function getSegmentLimits(\n  date: DateValue,\n  type: string,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (type) {\n    case 'year':\n      return {\n        value: date.year,\n        placeholder: 'yyyy',\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date),\n      };\n    case 'month':\n      return {\n        value: date.month,\n        placeholder: 'mm',\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date),\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date),\n        placeholder: 'dd',\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12,\n          placeholder: '--',\n        };\n      case 'hour':\n        if (options.hour12) {\n          const isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11,\n            placeholder: '--',\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23,\n          placeholder: '--',\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59,\n          placeholder: '--',\n        };\n    }\n  }\n\n  return {};\n}\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\nimport {ZonedDateTime} from '@internationalized/date';\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {getSegmentLimits} from './utils/get-segment-limits';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface DateSegmentListProps {\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function DateSegmentList({\n  segmentProps,\n  state,\n  value,\n  onChange,\n  isPlaceholder,\n}: DateSegmentListProps) {\n  const {granularity} = state;\n  const options = useMemo(() => {\n    const memoOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    if (granularity === 'minute') {\n      memoOptions.hour = 'numeric';\n      memoOptions.minute = 'numeric';\n    }\n    return memoOptions;\n  }, [granularity]);\n\n  const formatter = useDateFormatter(options);\n\n  const dateValue = useMemo(() => value.toDate(), [value]);\n  const segments = useMemo(() => {\n    return formatter.formatToParts(dateValue).map(segment => {\n      const limits = getSegmentLimits(\n        value,\n        segment.type,\n        formatter.resolvedOptions(),\n      );\n      const textValue =\n        isPlaceholder && segment.type !== 'literal'\n          ? limits.placeholder\n          : segment.value;\n      return {\n        type: segment.type,\n        text: segment.value === ', ' ? ' ' : textValue,\n        ...limits,\n        minLength:\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\n      } as LiteralSegment | EditableSegment;\n    });\n  }, [dateValue, formatter, isPlaceholder, value]);\n\n  return (\n    <div className=\"flex items-center\">\n      {segments.map((segment, index) => {\n        if (segment.type === 'literal') {\n          return (\n            <LiteralDateSegment\n              domProps={segmentProps}\n              key={index}\n              segment={segment}\n            />\n          );\n        }\n        return (\n          <EditableDateSegment\n            isPlaceholder={isPlaceholder}\n            domProps={segmentProps}\n            state={state}\n            value={value}\n            onChange={onChange}\n            segment={segment}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  CalendarDate,\n  DateValue,\n  getDayOfWeek,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarCellProps {\n  date: CalendarDate;\n  currentMonth: DateValue;\n  state: DatePickerState | DateRangePickerState;\n}\nexport function CalendarCell({\n  date,\n  currentMonth,\n  state: {\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    timezone,\n    min,\n    max,\n  },\n}: CalendarCellProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayOfWeek = getDayOfWeek(date, localeCode);\n  const isActive = dayIsActive(date);\n  const isHighlighted = dayIsHighlighted(date);\n  const isRangeStart = dayIsRangeStart(date);\n  const isRangeEnd = dayIsRangeEnd(date);\n  const dayIsToday = isToday(date, timezone);\n  const sameMonth = isSameMonth(date, currentMonth);\n  const isDisabled = dateIsInvalid(date, min, max);\n\n  return (\n    <div\n      role=\"button\"\n      aria-disabled={isDisabled}\n      className={clsx(\n        'w-40 h-40 text-sm relative isolate flex-shrink-0',\n        isDisabled && 'text-disabled pointer-events-none',\n        !sameMonth && 'invisible pointer-events-none'\n      )}\n      {...getCellProps(date, sameMonth)}\n    >\n      <span\n        className={clsx(\n          'absolute inset-0 flex items-center justify-center rounded-full w-full h-full select-none z-10 cursor-pointer',\n          !isActive && !dayIsToday && 'hover:bg-hover',\n          isActive && 'bg-primary text-on-primary font-semibold',\n          dayIsToday && !isActive && 'bg-chip'\n        )}\n      >\n        {date.day}\n      </span>\n      {isHighlighted && sameMonth && (\n        <span\n          className={clsx(\n            'absolute w-full h-full inset-0 bg-primary/focus',\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\n              'rounded-l-full',\n            (isRangeEnd ||\n              dayOfWeek === 6 ||\n              date.day ===\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\n              'rounded-r-full'\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {\n  CalendarDate,\n  endOfMonth,\n  getWeeksInMonth,\n  startOfMonth,\n  startOfWeek,\n} from '@internationalized/date';\nimport {KeyboardArrowLeftIcon} from '../../../../../icons/material/KeyboardArrowLeft';\nimport {IconButton} from '../../../../buttons/icon-button';\nimport {KeyboardArrowRightIcon} from '../../../../../icons/material/KeyboardArrowRight';\nimport {CalendarCell} from './calendar-cell';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {useDateFormatter} from '../../../../../i18n/use-date-formatter';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\nexport interface CalendarMonthProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nexport function CalendarMonth({\n  startDate,\n  state,\n  isFirst,\n  isLast,\n}: CalendarMonthProps) {\n  const {localeCode} = useSelectedLocale();\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"w-280 flex-shrink-0\">\n      <CalendarMonthHeader\n        isFirst={isFirst}\n        isLast={isLast}\n        state={state}\n        currentMonth={startDate}\n      />\n      <div className=\"block\" role=\"grid\">\n        <WeekdayHeader state={state} startDate={startDate} />\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\n          <m.div className=\"flex mb-6\" key={weekIndex}>\n            {[...new Array(7).keys()].map(dayIndex => (\n              <CalendarCell\n                key={dayIndex}\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\n                currentMonth={startDate}\n                state={state}\n              />\n            ))}\n          </m.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface CalendarMonthHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  currentMonth: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nfunction CalendarMonthHeader({\n  currentMonth,\n  isFirst,\n  isLast,\n  state: {calendarDates, setCalendarDates, timezone, min, max},\n}: CalendarMonthHeaderProps) {\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\n    const count = calendarDates.length;\n    let newDates: CalendarDate[];\n    if (direction === 'forward') {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.add({months: count}))\n      );\n    } else {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.subtract({months: count}))\n      );\n    }\n    setCalendarDates(newDates);\n  };\n\n  const monthFormatter = useDateFormatter({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\n    calendar: currentMonth.calendar.identifier,\n  });\n\n  const isBackwardDisabled = dateIsInvalid(\n    currentMonth.subtract({days: 1}),\n    min,\n    max\n  );\n  const isForwardDisabled = dateIsInvalid(\n    startOfMonth(currentMonth.add({months: 1})),\n    min,\n    max\n  );\n\n  return (\n    <div className=\"flex items-center justify-between gap-10\">\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isFirst && 'invisible')}\n        disabled={!isFirst || isBackwardDisabled}\n        aria-hidden={!isFirst}\n        onClick={() => {\n          shiftCalendars('backward');\n        }}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"text-sm font-semibold select-none\">\n        {monthFormatter.format(currentMonth.toDate(timezone))}\n      </div>\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isLast && 'invisible')}\n        disabled={!isLast || isForwardDisabled}\n        aria-hidden={!isLast}\n        onClick={() => {\n          shiftCalendars('forward');\n        }}\n      >\n        <KeyboardArrowRightIcon />\n      </IconButton>\n    </div>\n  );\n}\n\ninterface WeekdayHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n}\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayFormatter = useDateFormatter({weekday: 'short'});\n\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"flex\">\n      {[...new Array(7).keys()].map(index => {\n        const date = monthStart.add({days: index});\n        const dateDay = date.toDate(timezone);\n        const weekday = dayFormatter.format(dateDay);\n        return (\n          <div\n            className=\"w-40 h-40 text-sm font-semibold relative flex-shrink-0\"\n            key={index}\n          >\n            <div className=\"absolute flex items-center justify-center w-full h-full select-none\">\n              {weekday}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {CalendarMonth} from './calendar-month';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarProps {\n  state: DatePickerState | DateRangePickerState;\n  visibleMonths?: 1 | 2;\n}\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    visibleMonths = 1;\n  }\n\n  return (\n    <Fragment>\n      {[...new Array(visibleMonths).keys()].map(index => {\n        const startDate = toCalendarDate(\n          startOfMonth(state.calendarDates[index])\n        );\n        const isFirst = index === 0;\n        const isLast = index === visibleMonths - 1;\n        return (\n          <CalendarMonth\n            key={index}\n            state={state}\n            startDate={startDate}\n            isFirst={isFirst}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Fragment>\n  );\n}\n","import {DateValue, parseAbsolute} from '@internationalized/date';\nimport {Fragment, memo} from 'react';\nimport {useDateFormatter} from './use-date-formatter';\nimport {useSettings} from '../core/settings/use-settings';\nimport {shallowEqual} from '../utils/shallow-equal';\nimport {useUserTimezone} from './use-user-timezone';\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\n\ninterface FormattedDateTimeRangeProps {\n  start?: string | DateValue | Date;\n  end?: string | DateValue | Date;\n  options?: Intl.DateTimeFormatOptions;\n  preset?: keyof typeof DateFormatPresets;\n}\nexport const FormattedDateTimeRange = memo(\n  ({start, end, options, preset}: FormattedDateTimeRangeProps) => {\n    const {dates} = useSettings();\n    const timezone = useUserTimezone();\n    const formatter = useDateFormatter(\n      options ||\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\n          preset || dates?.format\n        ]\n    );\n\n    if (!start || !end) {\n      return null;\n    }\n\n    let value: string;\n\n    try {\n      value = formatter.formatRange(\n        castToDate(start, timezone),\n        castToDate(end, timezone)\n      );\n    } catch (e) {\n      value = '';\n    }\n\n    return <Fragment>{value}</Fragment>;\n  },\n  shallowEqual\n);\n\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\n  if (typeof date === 'string') {\n    return parseAbsolute(date, timezone).toDate();\n  }\n  if ('toDate' in date) {\n    return date.toDate(timezone);\n  }\n  return date;\n}\n","import {List, ListItem} from '@common/ui/list/list';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface DateRangePresetList {\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DatePresetList({\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue();\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import {message} from '@common/i18n/message';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport interface DateRangeComparePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\n}\n\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\n  {\n    key: 0,\n    label: message('Preceding period'),\n    getRangeValue: (range: DateRangeValue) => {\n      const startDate = range.start;\n      const endDate = range.end;\n\n      const diffInMilliseconds =\n        endDate.toDate().getTime() - startDate.toDate().getTime();\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\n      const newStart = startDate.subtract({minutes: diffInMinutes});\n      return {\n        preset: 0,\n        start: newStart,\n        end: startDate,\n      };\n    },\n  },\n  {\n    key: 1,\n    label: message('Same period last year'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({years: 1}),\n        end: range.end.subtract({years: 1}),\n        preset: 1,\n      };\n    },\n  },\n  {\n    key: 2,\n    label: message('Custom'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({weeks: 1}),\n        end: range.end.subtract({weeks: 1}),\n        preset: 2,\n      };\n    },\n  },\n];\n","import {List, ListItem} from '@common/ui/list/list';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\n\ninterface DateRangePresetList {\n  originalRangeValue: DateRangeValue;\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DateRangeComparePresetList({\n  originalRangeValue,\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangeComparePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue(originalRangeValue);\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {DatePickerField} from '../date-picker-field';\nimport {DateRangePickerState} from '../use-date-range-picker-state';\nimport {Calendar} from '../../calendar/calendar';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {ArrowRightAltIcon} from '@common/icons/material/ArrowRightAlt';\nimport {DateSegmentList} from '../../segments/date-segment-list';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {DatePresetList} from './date-range-preset-list';\nimport {useIsTabletMediaQuery} from '@common/utils/hooks/is-tablet-media-query';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {DateRangeComparePresetList} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\n\ninterface DateRangeDialogProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  compareVisibleDefault?: boolean;\n  showInlineDatePickerField?: boolean;\n}\nexport function DateRangeDialog({\n  state,\n  compareState,\n  showInlineDatePickerField = false,\n  compareVisibleDefault = false,\n}: DateRangeDialogProps) {\n  const isTablet = useIsTabletMediaQuery();\n  const {close} = useDialogContext();\n  const initialStateRef = useRef<DateRangePickerState>(state);\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\n\n  const footer = (\n    <DialogFooter\n      dividerTop\n      startAction={\n        !hasPlaceholder && !isTablet ? (\n          <div className=\"text-xs\">\n            <FormattedDateTimeRange\n              start={state.selectedValue.start.toDate()}\n              end={state.selectedValue.end.toDate()}\n              options={{dateStyle: 'medium'}}\n            />\n          </div>\n        ) : undefined\n      }\n    >\n      <Button\n        variant=\"text\"\n        size=\"xs\"\n        onClick={() => {\n          state.setSelectedValue(initialStateRef.current.selectedValue);\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\n          close();\n        }}\n      >\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        onClick={() => {\n          const value = state.selectedValue;\n          if (compareState && compareVisible) {\n            value.compareStart = compareState.selectedValue.start;\n            value.compareEnd = compareState.selectedValue.end;\n          }\n          close(value);\n        }}\n      >\n        <Trans message=\"Select\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  return (\n    <Dialog size=\"auto\">\n      <DialogBody className=\"flex\" padding=\"p-0\">\n        {!isTablet && (\n          <div className=\"min-w-192 py-14\">\n            <DatePresetList\n              selectedValue={state.selectedValue}\n              onPresetSelected={preset => {\n                state.setSelectedValue(preset);\n                if (state.closeDialogOnSelection) {\n                  close(preset);\n                }\n              }}\n            />\n            {!!compareState && (\n              <Fragment>\n                <Switch\n                  className=\"mx-20 mb-10 mt-14\"\n                  checked={compareVisible}\n                  onChange={e => setCompareVisible(e.target.checked)}\n                >\n                  <Trans message=\"Compare\" />\n                </Switch>\n                {compareVisible && (\n                  <DateRangeComparePresetList\n                    originalRangeValue={state.selectedValue}\n                    selectedValue={compareState.selectedValue}\n                    onPresetSelected={preset => {\n                      compareState.setSelectedValue(preset);\n                    }}\n                  />\n                )}\n              </Fragment>\n            )}\n          </div>\n        )}\n        <AnimatePresence initial={false}>\n          <Calendars\n            state={state}\n            compareState={compareState}\n            showInlineDatePickerField={showInlineDatePickerField}\n            compareVisible={compareVisible}\n          />\n        </AnimatePresence>\n      </DialogBody>\n      {!state.closeDialogOnSelection && footer}\n    </Dialog>\n  );\n}\n\ninterface CustomRangePanelProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  showInlineDatePickerField?: boolean;\n  compareVisible: boolean;\n}\nfunction Calendars({\n  state,\n  compareState,\n  showInlineDatePickerField,\n  compareVisible,\n}: CustomRangePanelProps) {\n  return (\n    <m.div\n      initial={{width: 0, overflow: 'hidden'}}\n      animate={{width: 'auto'}}\n      exit={{width: 0, overflow: 'hidden'}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"border-l px-20 pb-20 pt-10\"\n    >\n      {showInlineDatePickerField && (\n        <div>\n          <InlineDatePickerField state={state} />\n          {!!compareState && compareVisible && (\n            <InlineDatePickerField\n              state={compareState}\n              label={<Trans message=\"Compare\" />}\n            />\n          )}\n        </div>\n      )}\n      <div className=\"flex items-start gap-36\">\n        <Calendar state={state} visibleMonths={2} />\n      </div>\n    </m.div>\n  );\n}\n\ninterface InlineDatePickerFieldProps {\n  state: DateRangePickerState;\n  label?: ReactNode;\n}\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\n  const {selectedValue, setSelectedValue} = state;\n  return (\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\n      <DateSegmentList\n        state={state}\n        value={selectedValue.start}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, start: newValue});\n        }}\n      />\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\n      <DateSegmentList\n        state={state}\n        value={selectedValue.end}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, end: newValue});\n        }}\n      />\n    </DatePickerField>\n  );\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string;\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  >,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  return useQuery({\n    queryKey: DatatableDataQueryKey(endpoint, params),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n    ...options,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n  with?: string;\n}\n\nexport function useNormalizedModels(\n  endpoint: string,\n  queryParams: Params,\n  queryOptions?: Omit<\n    UseQueryOptions<Response, unknown, Response, [string, Params]>,\n    'queryKey' | 'queryFn'\n  > | null,\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModels(endpoint, queryParams),\n    placeholderData: keepPreviousData,\n    ...queryOptions,\n  });\n}\n\nasync function fetchModels(endpoint: string, params: Params) {\n  return apiClient.get<Response>(endpoint, {params}).then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  model: NormalizedModel;\n}\n\nexport function useNormalizedModel(\n  endpoint: string,\n  queryParams?: Record<string, string>,\n  queryOptions?: {enabled?: boolean},\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModel(endpoint, queryParams),\n    ...queryOptions,\n  });\n}\n\nasync function fetchModel(\n  endpoint: string,\n  params?: Record<string, string>,\n): Promise<Response> {\n  return apiClient.get(endpoint, {params}).then(r => r.data);\n}\n","import React, {ReactNode, useRef, useState} from 'react';\nimport {useTrans} from '../../i18n/use-trans';\nimport {Trans} from '../../i18n/trans';\nimport {Avatar} from '../images/avatar';\nimport {Tooltip} from '../tooltip/tooltip';\nimport {IconButton} from '../buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {message} from '../../i18n/message';\nimport {Item} from './listbox/item';\nimport {useController, useFormContext} from 'react-hook-form';\nimport {useControlledState} from '@react-stately/utils';\nimport {getInputFieldClassNames} from './input-field/get-input-field-class-names';\nimport clsx from 'clsx';\nimport {Skeleton} from '../skeleton/skeleton';\nimport {useNormalizedModels} from '../../users/queries/use-normalized-models';\nimport {useNormalizedModel} from '../../users/queries/use-normalized-model';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '../animation/opacity-animation';\nimport {Select} from '@common/ui/forms/select/select';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {BaseFieldProps} from '@common/ui/forms/input-field/base-field-props';\n\ninterface NormalizedModelFieldProps {\n  label?: ReactNode;\n  className?: string;\n  background?: BaseFieldProps['background'];\n  value?: string | number;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  defaultValue?: string | number;\n  onChange?: (value: string | number) => void;\n  invalid?: boolean;\n  errorMessage?: string;\n  description?: ReactNode;\n  autoFocus?: boolean;\n  queryParams?: Record<string, string>;\n  endpoint: string;\n  disabled?: boolean;\n  required?: boolean;\n}\nexport function NormalizedModelField({\n  label,\n  className,\n  background,\n  value,\n  defaultValue = '',\n  placeholder = message('Select item...'),\n  searchPlaceholder = message('Find an item...'),\n  onChange,\n  description,\n  errorMessage,\n  invalid,\n  autoFocus,\n  queryParams,\n  endpoint,\n  disabled,\n  required,\n}: NormalizedModelFieldProps) {\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useControlledState(\n    value,\n    defaultValue,\n    onChange,\n  );\n  const query = useNormalizedModels(endpoint, {\n    query: inputValue,\n    ...queryParams,\n  });\n  const {trans} = useTrans();\n\n  const fieldClassNames = getInputFieldClassNames({size: 'md'});\n\n  if (selectedValue) {\n    return (\n      <div className={className}>\n        <div className={fieldClassNames.label}>{label}</div>\n        <div\n          className={clsx(\n            'rounded-input border p-8',\n            background,\n            invalid && 'border-danger',\n          )}\n        >\n          <AnimatePresence initial={false} mode=\"wait\">\n            <SelectedModelPreview\n              disabled={disabled}\n              endpoint={endpoint}\n              modelId={selectedValue}\n              queryParams={queryParams}\n              onEditClick={() => {\n                setSelectedValue('');\n                setInputValue('');\n                requestAnimationFrame(() => {\n                  inputRef.current?.focus();\n                  inputRef.current?.click();\n                });\n              }}\n            />\n          </AnimatePresence>\n        </div>\n        {description && !errorMessage && (\n          <div className={fieldClassNames.description}>{description}</div>\n        )}\n        {errorMessage && (\n          <div className={fieldClassNames.error}>{errorMessage}</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Select\n      className={className}\n      showSearchField\n      invalid={invalid}\n      errorMessage={errorMessage}\n      description={description}\n      color=\"white\"\n      isAsync\n      background={background}\n      placeholder={trans(placeholder)}\n      searchPlaceholder={trans(searchPlaceholder)}\n      label={label}\n      isLoading={query.isFetching}\n      items={query.data?.results}\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={setSelectedValue}\n      ref={inputRef}\n      autoFocus={autoFocus}\n      disabled={disabled}\n      required={required}\n    >\n      {model => (\n        <Item\n          value={model.id}\n          key={model.id}\n          description={model.description}\n          startIcon={<Avatar src={model.image} />}\n        >\n          {model.name}\n        </Item>\n      )}\n    </Select>\n  );\n}\n\ninterface SelectedModelPreviewProps {\n  modelId: string | number;\n  selectedValue?: number | string;\n  onEditClick?: () => void;\n  endpoint?: string;\n  disabled?: boolean;\n  queryParams?: NormalizedModelFieldProps['queryParams'];\n}\nfunction SelectedModelPreview({\n  modelId,\n  onEditClick,\n  endpoint,\n  disabled,\n  queryParams,\n}: SelectedModelPreviewProps) {\n  const {data, isLoading} = useNormalizedModel(\n    `${endpoint}/${modelId}`,\n    queryParams,\n  );\n\n  if (isLoading || !data?.model) {\n    return <LoadingSkeleton key=\"skeleton\" />;\n  }\n\n  return (\n    <m.div\n      className={clsx(\n        'flex items-center gap-10',\n        disabled && 'pointer-events-none cursor-not-allowed text-disabled',\n      )}\n      key=\"preview\"\n      {...opacityAnimation}\n    >\n      {data.model.image && <Avatar src={data.model.image} />}\n      <div>\n        <div className=\"text-sm leading-4\">{data.model.name}</div>\n        <div className=\"text-xs text-muted\">{data.model.description}</div>\n      </div>\n      <Tooltip label={<Trans message=\"Change item\" />}>\n        <IconButton\n          className=\"ml-auto text-muted\"\n          size=\"sm\"\n          onClick={onEditClick}\n          disabled={disabled}\n        >\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n    </m.div>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <m.div className=\"flex items-center gap-10\" {...opacityAnimation}>\n      <Skeleton variant=\"rect\" size=\"w-32 h-32\" />\n      <div className=\"max-h-[36px] flex-auto\">\n        <Skeleton className=\"text-xs\" />\n        <Skeleton className=\"max-h-8 text-xs\" />\n      </div>\n      <Skeleton variant=\"icon\" size=\"w-24 h-24\" />\n    </m.div>\n  );\n}\n\ninterface FormNormalizedModelFieldProps extends NormalizedModelFieldProps {\n  name: string;\n}\nexport function FormNormalizedModelField({\n  name,\n  ...fieldProps\n}: FormNormalizedModelFieldProps) {\n  const {clearErrors} = useFormContext();\n  const {\n    field: {onChange, value = ''},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  return (\n    <NormalizedModelField\n      value={value}\n      onChange={value => {\n        onChange(value);\n        clearErrors(name);\n      }}\n      invalid={invalid}\n      errorMessage={error?.message}\n      {...fieldProps}\n    />\n  );\n}\n","import {ChipValue} from './chip-field';\n\nexport function stringToChipValue(value: string | number): ChipValue {\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\n  return {id: value, name: `${value}`, description: `${value}`};\n}\n","import React, {\n  HTMLAttributes,\n  Key,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport clsx from 'clsx';\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {ChipList} from './chip-list';\nimport {Field} from '../field';\nimport {Input} from '../input';\nimport {Chip, ChipProps} from './chip';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\nimport {ProgressCircle} from '../../../progress/progress-circle';\nimport {useField} from '../use-field';\nimport {Avatar} from '../../../images/avatar';\nimport {Listbox} from '../../listbox/listbox';\nimport {useListbox} from '../../listbox/use-listbox';\nimport {BaseFieldPropsWithDom} from '../base-field-props';\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\nimport {stringToChipValue} from './string-to-chip-value';\nimport {Popover} from '../../../overlays/popover';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\n\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\n  invalid?: boolean;\n  errorMessage?: string;\n}\n\nexport type ChipFieldProps<T> = Omit<\n  ListboxProps,\n  'selectionMode' | 'displayWith'\n> &\n  Omit<\n    BaseFieldPropsWithDom<HTMLInputElement>,\n    'value' | 'onChange' | 'defaultValue'\n  > & {\n    value?: (ChipValue | string)[];\n    defaultValue?: (ChipValue | string)[];\n    displayWith?: (value: ChipValue) => ReactNode;\n    validateWith?: (value: ChipValue) => ChipValue;\n    allowCustomValue?: boolean;\n    showDropdownArrow?: boolean;\n    onChange?: (value: ChipValue[]) => void;\n    suggestions?: T[];\n    children?: ListBoxChildren<T>['children'];\n    placeholder?: string;\n    chipSize?: ChipProps['size'];\n    openMenuOnFocus?: boolean;\n    valueKey?: 'id' | 'name';\n    onChipClick?: (value: ChipValue) => void;\n  };\n\nfunction ChipFieldInner<T>(\n  props: ChipFieldProps<T>,\n  ref: Ref<HTMLInputElement>,\n) {\n  const fieldRef = useRef<HTMLDivElement>(null);\n  const inputRef = useObjectRef(ref);\n  const {\n    displayWith = v => v.name,\n    validateWith,\n    children,\n    suggestions,\n    isLoading,\n    inputValue,\n    onInputValueChange,\n    onItemSelected,\n    placeholder,\n    onOpenChange,\n    chipSize = 'sm',\n    openMenuOnFocus = true,\n    showEmptyMessage,\n    value: propsValue,\n    defaultValue,\n    onChange: propsOnChange,\n    valueKey,\n    isAsync,\n    allowCustomValue = true,\n    showDropdownArrow,\n    onChipClick,\n    ...inputFieldProps\n  } = props;\n  const fieldClassNames = getInputFieldClassNames({\n    ...props,\n    flexibleHeight: true,\n  });\n\n  const [value, onChange] = useChipFieldValueState(props);\n\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\n\n  const loadingIndicator = (\n    <ProgressCircle isIndeterminate size=\"sm\" aria-label=\"loading...\" />\n  );\n\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\n\n  const {fieldProps, inputProps} = useField({\n    ...inputFieldProps,\n    focusRef: inputRef,\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\n  });\n\n  return (\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\n      <Input\n        ref={fieldRef}\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\n        onClick={() => {\n          // refocus input when clicking outside it, but while still inside chip field\n          inputRef.current?.focus();\n        }}\n      >\n        <ListWrapper\n          displayChipUsing={displayWith}\n          onChipClick={onChipClick}\n          items={value}\n          setItems={onChange}\n          chipSize={chipSize}\n        />\n        <ChipInput\n          showEmptyMessage={showEmptyMessage}\n          inputProps={inputProps}\n          inputValue={inputValue}\n          onInputValueChange={onInputValueChange}\n          fieldRef={fieldRef}\n          inputRef={inputRef}\n          chips={value}\n          setChips={onChange}\n          validateWith={validateWith}\n          isLoading={isLoading}\n          suggestions={suggestions}\n          placeholder={placeholder}\n          openMenuOnFocus={openMenuOnFocus}\n          listboxIsOpen={listboxIsOpen}\n          setListboxIsOpen={setListboxIsOpen}\n          allowCustomValue={allowCustomValue}\n        >\n          {children}\n        </ChipInput>\n      </Input>\n    </Field>\n  );\n}\n\ninterface ListWrapperProps {\n  items: ChipValue[];\n  setItems: (items: ChipValue[]) => void;\n  displayChipUsing: (value: ChipValue) => ReactNode;\n  chipSize?: ChipProps['size'];\n  onChipClick?: (value: ChipValue) => void;\n}\nfunction ListWrapper({\n  items,\n  setItems,\n  displayChipUsing,\n  chipSize,\n  onChipClick,\n}: ListWrapperProps) {\n  const manager = useFocusManager();\n  const removeItem = useCallback(\n    (key: Key) => {\n      const i = items.findIndex(cr => cr.id === key);\n      const newItems = [...items];\n      if (i > -1) {\n        newItems.splice(i, 1);\n        setItems(newItems);\n      }\n      return newItems;\n    },\n    [items, setItems],\n  );\n\n  return (\n    <ChipList\n      className=\"my-8 max-w-full flex-shrink-0 flex-wrap\"\n      size={chipSize}\n      selectable\n    >\n      {items.map(item => (\n        <Chip\n          key={item.id}\n          errorMessage={item.errorMessage}\n          adornment={item.image ? <Avatar circle src={item.image} /> : null}\n          onClick={() => onChipClick?.(item)}\n          onRemove={() => {\n            const newItems = removeItem(item.id);\n            if (newItems.length) {\n              // focus previous chip\n              manager?.focusPrevious({tabbable: true});\n            } else {\n              // focus input\n              manager?.focusLast();\n            }\n          }}\n        >\n          {displayChipUsing(item)}\n        </Chip>\n      ))}\n    </ChipList>\n  );\n}\n\ninterface ChipInputProps<T> {\n  showEmptyMessage?: boolean;\n  inputProps: ReturnType<typeof useField>['inputProps'];\n  inputValue?: string;\n  onInputValueChange?: (value: string) => void;\n  fieldRef: RefObject<HTMLDivElement>;\n  inputRef: RefObject<HTMLInputElement>;\n  chips: ChipValue[];\n  setChips: (items: ChipValue[]) => void;\n  validateWith?: (value: ChipValue) => ChipValue;\n  isLoading?: boolean;\n  suggestions?: T[];\n  placeholder?: string;\n  openMenuOnFocus?: boolean;\n  listboxIsOpen: boolean;\n  setListboxIsOpen: (value: boolean) => void;\n  allowCustomValue: boolean;\n  children: ListBoxChildren<T>['children'];\n}\nfunction ChipInput<T>(props: ChipInputProps<T>) {\n  const {\n    inputRef,\n    fieldRef,\n    validateWith,\n    setChips,\n    chips,\n    suggestions,\n    inputProps,\n    placeholder,\n    openMenuOnFocus,\n    listboxIsOpen,\n    setListboxIsOpen,\n    allowCustomValue,\n    isLoading,\n  } = props;\n  const inputClassName = 'outline-none text-sm mx-8 my-4 h-30 flex-auto';\n  const manager = useFocusManager();\n\n  const addItems = useCallback(\n    (items?: ChipValue[]) => {\n      items = (items || []).filter(item => {\n        const invalid = !item || !item.id || !item.name;\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\n        return !alreadyExists && !invalid;\n      });\n      if (!items.length) return;\n\n      if (validateWith) {\n        items = items.map(item => validateWith(item));\n      }\n      setChips([...chips, ...items]);\n    },\n    [chips, setChips, validateWith],\n  );\n\n  const listbox = useListbox<T>({\n    ...props,\n    clearInputOnItemSelection: true,\n    isOpen: listboxIsOpen,\n    onOpenChange: setListboxIsOpen,\n    items: suggestions,\n    selectionMode: 'none',\n    role: 'listbox',\n    virtualFocus: true,\n    onItemSelected: value => {\n      handleItemSelection(value as string);\n    },\n  });\n\n  const {\n    state: {\n      activeIndex,\n      setActiveIndex,\n      isOpen,\n      setIsOpen,\n      inputValue,\n      setInputValue,\n    },\n    refs,\n    listboxId,\n    collection,\n    onInputChange,\n  } = listbox;\n\n  const handleItemSelection = (textValue: string) => {\n    const option =\n      collection.size && activeIndex != null\n        ? [...collection.values()][activeIndex]\n        : null;\n    if (option?.item) {\n      addItems([option.item]);\n    } else if (allowCustomValue) {\n      addItems([stringToChipValue(option ? option.value : textValue)]);\n    }\n\n    setInputValue('');\n    setActiveIndex(null);\n    setIsOpen(false);\n  };\n\n  // position dropdown relative to whole chip field, not the input\n  useLayoutEffect(() => {\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\n      listbox.reference(fieldRef.current);\n    }\n  }, [fieldRef, listbox, refs]);\n\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const handleFocusAndClick = createEventHandler(() => {\n    if (openMenuOnFocus && !isOpen) {\n      setIsOpen(true);\n    }\n  });\n\n  return (\n    <Listbox\n      listbox={listbox}\n      mobileOverlay={Popover}\n      isLoading={isLoading}\n      onPointerDown={e => {\n        // prevent focus from leaving input when scrolling listbox via mouse\n        e.preventDefault();\n      }}\n    >\n      <input\n        type=\"text\"\n        className={clsx(inputClassName, 'bg-transparent')}\n        placeholder={placeholder}\n        {...mergeProps(inputProps, {\n          ref: inputRef,\n          value: inputValue,\n          onChange: onInputChange,\n          onPaste: e => {\n            const paste = e.clipboardData.getData('text');\n            const emails = paste.match(\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\n            );\n            if (emails) {\n              e.preventDefault();\n              const selection = window.getSelection();\n              if (selection?.rangeCount) {\n                selection.deleteFromDocument();\n                addItems(emails.map(email => stringToChipValue(email)));\n              }\n            }\n          },\n          'aria-autocomplete': 'list',\n          'aria-controls': isOpen ? listboxId : undefined,\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: 'false',\n          onKeyDown: e => {\n            const input = e.target as HTMLInputElement;\n\n            if (e.key === 'Enter') {\n              // prevent form submitting\n              e.preventDefault();\n              // add chip from selected listbox option or current input text value\n              handleItemSelection(input.value);\n              return;\n            }\n\n            // on escape, clear input and close dropdown\n            if (e.key === 'Escape' && isOpen) {\n              setIsOpen(false);\n              setInputValue('');\n            }\n\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\n            if (\n              e.key === 'ArrowUp' &&\n              isOpen &&\n              (activeIndex === 0 || activeIndex == null)\n            ) {\n              setActiveIndex(null);\n              return;\n            }\n\n            // block left and right arrows from navigating in input, if focus is on listbox\n            if (\n              activeIndex != null &&\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n            ) {\n              e.preventDefault();\n              return;\n            }\n\n            // move focus on the last chip, if focus is at the  start of input\n            if (\n              (e.key === 'ArrowLeft' ||\n                e.key === 'Backspace' ||\n                e.key === 'Delete') &&\n              input.selectionStart === 0 &&\n              activeIndex == null &&\n              chips.length\n            ) {\n              manager?.focusPrevious({tabbable: true});\n              return;\n            }\n\n            // fallthrough to listbox navigation handlers for arrow keys\n            const handled = handleTriggerKeyDown(e);\n            if (!handled) {\n              handleListboxKeyboardNavigation(e);\n            }\n          },\n          onFocus: handleFocusAndClick,\n          onClick: handleFocusAndClick,\n        } as HTMLAttributes<HTMLInputElement>)}\n      />\n    </Listbox>\n  );\n}\n\nfunction useChipFieldValueState({\n  onChange,\n  value,\n  defaultValue,\n  valueKey,\n}: ChipFieldProps<any>) {\n  // convert value from string[] to ChipValue[], if needed\n  const propsValue = useMemo(() => {\n    return mixedValueToChipValue(value);\n  }, [value]);\n\n  // convert defaultValue from string[] to ChipValue[], if needed\n  const propsDefaultValue = useMemo(() => {\n    return mixedValueToChipValue(defaultValue);\n  }, [defaultValue]);\n\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\n  const handleChange = useCallback(\n    (value: ChipValue[]) => {\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\n      onChange?.(newValue as any);\n    },\n    [onChange, valueKey],\n  );\n\n  return useControlledState<ChipValue[]>(\n    !propsValue ? undefined : propsValue,\n    propsDefaultValue || [],\n    handleChange,\n  );\n}\n\nfunction mixedValueToChipValue(\n  value?: (string | number | ChipValue)[] | null,\n): ChipValue[] | undefined {\n  if (value == null) {\n    return undefined;\n  }\n\n  return value.map(v => {\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\n  });\n}\n\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\n) => ReactElement;\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {ChipField, ChipFieldProps} from './chip-field';\n\nexport type FormChipFieldProps<T> = ChipFieldProps<T> & {\n  name: string;\n};\n\nexport function FormChipField<T>({children, ...props}: FormChipFieldProps<T>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<ChipFieldProps<T>> = {\n    onChange,\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField ref={ref} {...mergeProps(formProps, props)}>\n      {children}\n    </ChipField>\n  );\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  isSameDay,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport type Granularity = 'day' | 'minute';\n\nexport type DatePickerState = BaseDatePickerState;\n\nexport interface BaseDatePickerState<T = ZonedDateTime, P = boolean> {\n  timezone: string;\n  granularity: Granularity;\n  selectedValue: T;\n  setSelectedValue: (value: T) => void;\n  calendarIsOpen: boolean;\n  setCalendarIsOpen: (isOpen: boolean) => void;\n  calendarDates: CalendarDate[];\n  setCalendarDates: (dates: CalendarDate[]) => void;\n  dayIsActive: (day: CalendarDate) => boolean;\n  dayIsHighlighted: (day: CalendarDate) => boolean;\n  dayIsRangeStart: (day: CalendarDate) => boolean;\n  dayIsRangeEnd: (day: CalendarDate) => boolean;\n  isPlaceholder: P;\n  setIsPlaceholder: (value: P) => void;\n  clear: () => void;\n  min?: ZonedDateTime;\n  max?: ZonedDateTime;\n  closeDialogOnSelection: boolean;\n  getCellProps: (\n    date: CalendarDate,\n    isSameMonth: boolean,\n  ) => HTMLAttributes<HTMLElement>;\n}\n\nexport interface DatePickerValueProps<V, CV = V> {\n  value?: V | null | '';\n  defaultValue?: V | null;\n  onChange?: (value: CV | null) => void;\n  min?: DateValue;\n  max?: DateValue;\n  granularity?: Granularity;\n  closeDialogOnSelection?: boolean;\n}\nexport function useDatePickerState(\n  props: DatePickerValueProps<ZonedDateTime>,\n): BaseDatePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState(\n    !props.value && !props.defaultValue,\n  );\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value || now,\n    props.defaultValue || now,\n    value => {\n      setIsPlaceholder(false);\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder(true);\n    setInternalValue(now);\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return [toCalendarDate(internalValue)];\n  });\n\n  const setSelectedValue = useCallback(\n    (newValue: DateValue) => {\n      if (min && newValue.compare(min) < 0) {\n        newValue = min;\n      } else if (max && newValue.compare(max) > 0) {\n        newValue = max;\n      }\n\n      // preserve time\n      const value = internalValue\n        ? internalValue.set(newValue)\n        : toZoned(newValue, timezone);\n      setInternalValue(value);\n      setCalendarDates([toCalendarDate(value)]);\n      setIsPlaceholder(false);\n    },\n    [setInternalValue, min, max, internalValue, timezone],\n  );\n\n  const dayIsActive = useCallback(\n    (day: DateValue) => !isPlaceholder && isSameDay(internalValue, day),\n    [internalValue, isPlaceholder],\n  );\n\n  const getCellProps = useCallback(\n    (date: DateValue): HTMLAttributes<HTMLElement> => {\n      return {\n        onClick: () => {\n          setSelectedValue?.(date);\n          if (closeDialogOnSelection) {\n            setCalendarIsOpen?.(false);\n          }\n        },\n      };\n    },\n    [setSelectedValue, setCalendarIsOpen, closeDialogOnSelection],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue: setInternalValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted: () => false,\n    dayIsRangeStart: () => false,\n    dayIsRangeEnd: () => false,\n    getCellProps,\n    calendarDates,\n    setCalendarDates,\n    isPlaceholder,\n    clear,\n    setIsPlaceholder,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  DatePickerValueProps,\n  useDatePickerState,\n} from './use-date-picker-state';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Calendar} from '../calendar/calendar';\nimport {\n  DatePickerField,\n  DatePickerFieldProps,\n} from '../date-range-picker/date-picker-field';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {useTrans} from '@common/i18n/use-trans';\nimport clsx from 'clsx';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface DatePickerProps\n  extends Omit<DatePickerFieldProps, 'children'>,\n    DatePickerValueProps<ZonedDateTime> {}\nexport function DatePicker({showCalendarFooter, ...props}: DatePickerProps) {\n  const state = useDatePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const now = useCurrentDateTime();\n\n  const footer = showCalendarFooter && (\n    <DialogFooter\n      padding=\"px-14 pb-14\"\n      startAction={\n        <Button\n          disabled={state.isPlaceholder}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => {\n            state.clear();\n          }}\n        >\n          <Trans message=\"Clear\" />\n        </Button>\n      }\n    >\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        onClick={() => {\n          state.setSelectedValue(now);\n          state.setCalendarIsOpen(false);\n        }}\n      >\n        <Trans message=\"Today\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <Dialog size=\"auto\">\n        <DialogBody\n          className=\"flex items-start gap-40\"\n          padding={showCalendarFooter ? 'px-24 pt-20 pb-10' : null}\n        >\n          <Calendar state={state} visibleMonths={1} />\n        </DialogBody>\n        {footer}\n      </Dialog>\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={\n          <DateRangeIcon className={clsx(props.disabled && 'text-disabled')} />\n        }\n        {...props}\n      >\n        <DateSegmentList\n          segmentProps={openOnClick}\n          state={state}\n          value={state.selectedValue}\n          onChange={state.setSelectedValue}\n          isPlaceholder={state.isPlaceholder}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\ninterface FormDatePickerProps extends DatePickerProps {\n  name: string;\n}\nexport function FormDatePicker(props: FormDatePickerProps) {\n  const {min, max} = props;\n  const {trans} = useTrans();\n  const {format} = useDateFormatter();\n  const {\n    field: {onChange, onBlur, value = null, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n    rules: {\n      validate: v => {\n        if (!v) return;\n        const date = parseAbsoluteToLocal(v);\n        if (min && date.compare(min) < 0) {\n          return trans({\n            message: 'Enter a date after :date',\n            values: {date: format(v)},\n          });\n        }\n        if (max && date.compare(max) > 0) {\n          return trans({\n            message: 'Enter a date before :date',\n            values: {date: format(v)},\n          });\n        }\n      },\n    },\n  });\n\n  const parsedValue: null | ZonedDateTime = value\n    ? parseAbsoluteToLocal(value)\n    : null;\n\n  const formProps: Partial<DatePickerProps> = {\n    onChange: e => {\n      onChange(e ? e.toAbsoluteString() : e);\n    },\n    onBlur,\n    value: parsedValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DatePicker {...mergeProps(formProps, props)} />;\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || ''\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DragHandleIcon = createSvgIcon(\n  <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" />\n, 'DragHandleOutlined');\n","import {useCallback, useRef, useState} from 'react';\n\nexport function useStickySentinel() {\n  const [isSticky, setIsSticky] = useState(false);\n\n  const observerRef = useRef<IntersectionObserver>();\n\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\n    if (sentinel) {\n      const observer = new IntersectionObserver(\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\n        {threshold: [1]}\n      );\n      observerRef.current = observer;\n      observer.observe(sentinel);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return {isSticky, sentinelRef};\n}\n","import {FieldValues, SubmitHandler, UseFormReturn} from 'react-hook-form';\nimport clsx from 'clsx';\nimport React, {ReactNode} from 'react';\nimport {useStickySentinel} from '../utils/hooks/sticky-sentinel';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {Trans} from '../i18n/trans';\n\ninterface Props<T extends FieldValues> {\n  onSubmit: SubmitHandler<T>;\n  form: UseFormReturn<T>;\n  title: ReactNode;\n  subTitle?: ReactNode;\n  isLoading: boolean;\n  children: ReactNode;\n  actions?: ReactNode;\n  backButton?: ReactNode;\n  disableSaveWhenNotDirty?: boolean;\n  wrapInContainer?: boolean;\n}\nexport function CrupdateResourceLayout<T extends FieldValues>({\n  onSubmit,\n  form,\n  title,\n  subTitle,\n  children,\n  actions,\n  backButton,\n  isLoading = false,\n  disableSaveWhenNotDirty = false,\n  wrapInContainer = true,\n}: Props<T>) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isDirty = !disableSaveWhenNotDirty\n    ? true\n    : Object.keys(form.formState.dirtyFields).length;\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n    >\n      <div ref={sentinelRef} />\n      <div\n        className={clsx(\n          'sticky top-0 z-10 my-12 transition-shadow md:my-24',\n          isSticky && 'bg-paper shadow'\n        )}\n      >\n        <div\n          className={clsx(\n            'flex items-center gap-24 py-14 md:items-start',\n            wrapInContainer && 'container mx-auto px-24'\n          )}\n        >\n          {backButton}\n          <div className=\"overflow-hidden overflow-ellipsis md:mr-64\">\n            <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\n              {title}\n            </h1>\n            {subTitle && <div className=\"mt-4\">{subTitle}</div>}\n          </div>\n          <div className=\"mr-auto\"></div>\n          {actions}\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={isLoading || !isDirty}\n          >\n            <Trans message=\"Save\" />\n          </Button>\n        </div>\n      </div>\n      <div\n        className={\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\n        }\n      >\n        <div className=\"rounded\">{children}</div>\n      </div>\n    </Form>\n  );\n}\n","export default \"__VITE_ASSET__be0c7262__\"","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {apiClient} from '@common/http/query-client';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n}\n\nexport function useArtistPickerSuggestions(queryParams: Params) {\n  return useQuery({\n    queryKey: ['artists', 'search-suggestions', queryParams],\n    queryFn: () => fetchArtists(queryParams),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchArtists(params: Params) {\n  return apiClient\n    .get<Response>('search/suggestions/artist', {params})\n    .then(r => r.data);\n}\n","import {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport {Trans} from '@common/i18n/trans';\nimport React, {useState} from 'react';\nimport {useArtistPickerSuggestions} from '@app/web-player/artists/artist-picker/use-artist-picker-suggestions';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {Item} from '@common/ui/forms/listbox/item';\n\ninterface FormArtistPickerProps {\n  name: string;\n  className?: string;\n}\nexport function FormArtistPicker({name, className}: FormArtistPickerProps) {\n  const {trans} = useTrans();\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useArtistPickerSuggestions({query: inputValue});\n\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={<Trans message=\"Artists\" />}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={trans(message('+Add artist'))}\n      isLoading={isLoading}\n      allowCustomValue={false}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"rounded-full object-cover w-24 h-24\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","import {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport React, {ReactNode, useState} from 'react';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useNormalizedModels} from '@common/users/queries/use-normalized-models';\n\ninterface Props {\n  model: string;\n  name: string;\n  className?: string;\n  label?: ReactNode;\n  placeholder?: string;\n  allowCustomValue?: boolean;\n}\nexport function FormNormalizedModelChipField({\n  name,\n  label,\n  placeholder,\n  model,\n  className,\n  allowCustomValue = false,\n}: Props) {\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useNormalizedModels(`normalized-models/${model}`, {\n    query: inputValue,\n  });\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={label}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={placeholder}\n      isLoading={isLoading}\n      allowCustomValue={allowCustomValue}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"h-24 w-24 rounded-full object-cover\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","export const TAG_MODEL = 'tag';\n\nexport interface Tag {\n  id: number;\n  name: string;\n  display_name: string;\n  type: string;\n  updated_at: string;\n  created_at: string;\n  model_type: typeof TAG_MODEL;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FileUploadIcon = createSvgIcon(\n  <path d=\"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5-5 5z\" />\n, 'FileUploadOutlined');\n","import React, {ReactElement, useMemo} from 'react';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {Trans} from '@common/i18n/trans';\nimport {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport clsx from 'clsx';\n\ninterface Props {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  className?: string;\n}\nexport function TrackUploadStatusText({fileUpload, status, className}: Props) {\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n  const totalBytes = useMemo(\n    () => prettyBytes(fileUpload.file.size),\n    [fileUpload.file.size]\n  );\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded]\n  );\n\n  let statusMessage: ReactElement;\n  if (status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else if (status === 'processing') {\n    statusMessage = <Trans message=\"Processing upload...\" />;\n  } else if (status === 'pending') {\n    statusMessage = <Trans message=\"Waiting to start...\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes uploaded\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={clsx('text-muted text-xs', className)}>{statusMessage}</div>\n  );\n}\n","import {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {ProgressBar} from '@common/ui/progress/progress-bar';\nimport React, {ComponentPropsWithoutRef, ReactElement} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {message} from '@common/i18n/message';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {ErrorIcon} from '@common/icons/material/Error';\nimport {WarningIcon} from '@common/icons/material/Warning';\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\n\nexport type TrackUploadStatus = FileUpload['status'] | 'processing' | undefined;\n\ninterface UploadProgressProps {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  onAbort?: (uploadId: string) => void;\n  size?: 'sm' | 'md';\n  className?: string;\n}\nexport function TrackUploadProgress({\n  fileUpload,\n  status,\n  onAbort,\n  size = 'md',\n  className,\n}: UploadProgressProps) {\n  return (\n    <div className={className}>\n      <div className=\"flex items-center gap-24 justify-between\">\n        <TrackUploadStatusText fileUpload={fileUpload} status={status} />\n        <UploadStatusButton\n          fileUpload={fileUpload}\n          status={status}\n          onAbort={onAbort}\n        />\n      </div>\n      <ProgressBar\n        size={size === 'sm' ? 'xs' : 'sm'}\n        radius=\"rounded-sm\"\n        value={fileUpload.percentage}\n        isIndeterminate={status === 'processing' || status === 'pending'}\n      />\n    </div>\n  );\n}\n\nfunction UploadStatusButton({\n  fileUpload,\n  status,\n  onAbort,\n}: UploadProgressProps) {\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  const errorMessage = fileUpload.errorMessage;\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"sm\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"sm\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed' || status === 'processing') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"sm\" className=\"text-primary\" />\n      </AnimatedStatus>\n    );\n  } else if (onAbort) {\n    statusButton = (\n      <AnimatedStatus>\n        <IconButton size=\"xs\" onClick={() => onAbort(fileUpload.file.id)}>\n          <CloseIcon />\n        </IconButton>\n      </AnimatedStatus>\n    );\n  } else {\n    // keep the spacing, even if status button is hidden\n    statusButton = <div className=\"w-30 h-30\" />;\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      className=\"flex w-30 h-30 items-center justify-center\"\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Album} from '@app/web-player/albums/album';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {UseFormReturn} from 'react-hook-form';\nimport {CreateAlbumPayload} from '@app/admin/albums-datatable-page/requests/use-create-album';\n\nexport type ExtractedTrackMetadata = Partial<CreateTrackPayload> & {\n  release_date?: string;\n  album_name?: string;\n};\n\ninterface Response extends BackendResponse {\n  metadata: {\n    title?: string;\n    album?: Album;\n    album_name?: string;\n    artist?: Artist;\n    artist_name?: string;\n    genres?: string[];\n    duration?: number;\n    release_date?: string;\n    comment?: string;\n    image?: FileEntry;\n    lyrics?: string;\n  };\n}\n\ninterface Payload {\n  fileEntryId: number;\n  autoMatchAlbum?: boolean;\n}\n\nexport function useExtractTackFileMetadata() {\n  return useMutation({\n    mutationFn: (payload: Payload) => extractMeta(payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction extractMeta(payload: Payload): Promise<ExtractedTrackMetadata> {\n  return apiClient\n    .post<Response>(`tracks/${payload.fileEntryId}/extract-metadata`, payload)\n    .then(r => metadataToFormValues(r.data));\n}\n\nfunction metadataToFormValues(response: Response): ExtractedTrackMetadata {\n  const values: ExtractedTrackMetadata = {\n    name: response.metadata.title,\n    duration: response.metadata.duration,\n    genres: response.metadata.genres || [],\n    description: response.metadata.comment,\n    lyric: response.metadata.lyrics,\n    release_date: response.metadata.release_date,\n    album_name: response.metadata.album_name,\n  };\n  if (response.metadata.album) {\n    values.album_id = response.metadata.album.id;\n  }\n  if (response.metadata.artist) {\n    values.artists = [response.metadata.artist];\n  }\n  if (response.metadata.image) {\n    values.image = response.metadata.image.url;\n  }\n  return values;\n}\n\nexport function hydrateAlbumForm(\n  form: UseFormReturn<CreateAlbumPayload>,\n  data: ExtractedTrackMetadata,\n) {\n  if (!form.getValues('artists')?.length && data.artists) {\n    form.setValue('artists', data.artists);\n  }\n  if (!form.getValues('image') && data.image) {\n    form.setValue('image', data.image);\n  }\n  if (data.release_date) {\n    form.setValue('release_date', data.release_date);\n  }\n  if (data.genres?.length) {\n    form.setValue(\n      'genres',\n      // @ts-ignore\n      mergeArraysWithoutDuplicates(form.getValues('genres'), data.genres),\n    );\n  }\n  if (!form.getValues('name') && data.album_name) {\n    form.setValue('name', data.album_name);\n  }\n}\n\ntype Values = Partial<CreateTrackPayload>;\nexport function mergeTrackFormValues<\n  T extends Values = Values,\n  E extends Values = Values,\n>(newValues: T, oldValues: E): T & E {\n  return {\n    ...oldValues,\n    ...newValues,\n    artists: mergeArraysWithoutDuplicates(oldValues.artists, newValues.artists),\n    genres: mergeArraysWithoutDuplicates(\n      oldValues.genres as NormalizedModel[],\n      newValues.genres as NormalizedModel[],\n      'name',\n    ),\n    tags: mergeArraysWithoutDuplicates(oldValues.tags, newValues.tags, 'name'),\n  };\n}\n\nfunction mergeArraysWithoutDuplicates(\n  oldValues: NormalizedModel[] = [],\n  newValues: NormalizedModel[] = [],\n  key: keyof NormalizedModel = 'id',\n) {\n  newValues = newValues.filter(\n    nv => !oldValues.find(ov => ov[key] === nv[key]),\n  );\n  return [...oldValues, ...newValues];\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {\n  ExtractedTrackMetadata,\n  useExtractTackFileMetadata,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\nimport {useCallback, useMemo, useRef} from 'react';\nimport {UploadInputType} from '@common/uploads/types/upload-input-config';\nimport {Disk} from '@common/uploads/types/backend-metadata';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {generateWaveformData} from '@app/web-player/tracks/waveform/generate-waveform-data';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {validateUpload} from '@common/uploads/uploader/validate-upload';\nimport {message} from '@common/i18n/message';\n\nconst FiftyMB = 50 * 1024 * 1024;\n\nexport interface TrackUploadMeta {\n  isGeneratingWave?: boolean;\n  isExtractingMetadata?: boolean;\n}\n\nexport type TrackUploadPayload = CreateTrackPayload & {uploadId: string};\n\ninterface Options {\n  autoMatchAlbum?: boolean;\n  onUploadStart?: (data: TrackUploadPayload) => void;\n  onMetadataChange: (\n    file: UploadedFile,\n    newData: ExtractedTrackMetadata & {waveData?: number[][]},\n  ) => void;\n}\nexport function useTrackUploader(options: Options) {\n  const {uploads} = useSettings();\n  const restrictions = useMemo(\n    () => ({\n      allowedFileTypes: [UploadInputType.audio, UploadInputType.video],\n      maxFileSize: uploads.max_size || FiftyMB,\n    }),\n    [uploads.max_size],\n  );\n\n  const extractMetadata = useExtractTackFileMetadata();\n  const optionsRef = useRef<Options>(options);\n  optionsRef.current = options;\n\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const updateFileUpload = useFileUploadStore(s => s.updateFileUpload);\n  const getUpload = useFileUploadStore(s => s.getUpload);\n  const updateUpload = useCallback(\n    (uploadId: string, newMeta: TrackUploadMeta) => {\n      updateFileUpload(uploadId, {\n        meta: {\n          // @ts-ignore\n          ...(getUpload(uploadId)?.meta || {}),\n          ...newMeta,\n        },\n      });\n    },\n    [updateFileUpload, getUpload],\n  );\n\n  // todo: playback source is not set if extract metadata request errors out\n  const uploadOptions: UploadStrategyConfig = useMemo(() => {\n    return {\n      metadata: {\n        diskPrefix: 'track_media',\n        disk: Disk.public,\n      },\n      restrictions,\n      onSuccess: (entry: FileEntry, file) => {\n        updateUpload(file.id, {isExtractingMetadata: true});\n        extractMetadata.mutate(\n          {\n            fileEntryId: entry.id,\n            autoMatchAlbum: optionsRef.current.autoMatchAlbum,\n          },\n          {\n            onSuccess: formValues => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n              const newValues: ExtractedTrackMetadata = {\n                ...formValues,\n                src: entry.url,\n              };\n              optionsRef.current.onMetadataChange(file, newValues);\n            },\n            onError: () => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n            },\n          },\n        );\n      },\n      onError: message => {\n        if (message) {\n          toast.danger(message);\n        }\n      },\n    };\n  }, [extractMetadata, updateUpload, restrictions]);\n\n  const validateUploads = useCallback(\n    (files: UploadedFile[]) => {\n      const validFiles = files.filter(\n        file => !validateUpload(file, restrictions),\n      );\n      // show error message, if some files did not pass validation\n      if (files.length !== validFiles.length) {\n        toast.danger(\n          message(':count of your files is not supported.', {\n            values: {count: files.length - validFiles.length},\n          }),\n        );\n      }\n      return validFiles;\n    },\n    [restrictions],\n  );\n\n  const uploadTracks = useCallback(\n    async (files: UploadedFile[]) => {\n      const validFiles = validateUploads(files);\n      if (!validFiles.length) return;\n      files.forEach(file => {\n        optionsRef.current.onUploadStart?.({\n          name: file.name,\n          uploadId: file.id,\n        });\n      });\n      uploadMultiple(files, uploadOptions);\n      for (const file of files) {\n        updateUpload(file.id, {isGeneratingWave: true});\n        const waveData = await generateWaveformData(file.native);\n        if (waveData) {\n          optionsRef.current.onMetadataChange(file, {waveData});\n        }\n        updateUpload(file.id, {isGeneratingWave: false});\n      }\n    },\n    [uploadOptions, uploadMultiple, updateUpload, validateUploads],\n  );\n\n  const openFilePicker = useCallback(async () => {\n    const files = await openUploadWindow({\n      multiple: true,\n      types: restrictions.allowedFileTypes,\n    });\n    await uploadTracks(files);\n  }, [uploadTracks, restrictions]);\n\n  return {openFilePicker, uploadTracks, validateUploads};\n}\n","import {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {TrackUploadMeta} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nexport function useTrackUpload(uploadId: string | undefined) {\n  const upload = useFileUploadStore(s =>\n    uploadId ? s.fileUploads.get(uploadId) : null\n  );\n\n  let isUploading = false;\n  let status: TrackUploadStatus;\n\n  if (upload) {\n    const meta = upload.meta as TrackUploadMeta | undefined;\n    const isProcessing = meta?.isExtractingMetadata || meta?.isGeneratingWave;\n\n    isUploading =\n      upload?.status === 'pending' ||\n      upload?.status === 'inProgress' ||\n      !!isProcessing;\n\n    status =\n      upload?.status === 'completed' && isProcessing\n        ? 'processing'\n        : upload?.status;\n  }\n\n  return {isUploading, status, activeUpload: upload};\n}\n","import React, {useState} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\n\nexport function TrackFormUploadButton() {\n  const [uploadId, setUploadId] = useState<string>();\n  const {setValue, watch, getValues} = useFormContext<CreateTrackPayload>();\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: ({uploadId}) => setUploadId(uploadId),\n    onMetadataChange: (file, newData) => {\n      const mergedValues = mergeTrackFormValues(newData, getValues());\n      Object.entries(mergedValues).forEach(([key, value]) =>\n        setValue(key as keyof CreateTrackPayload, value, {shouldDirty: true})\n      );\n    },\n  });\n  const {status, isUploading, activeUpload} = useTrackUpload(uploadId);\n  const {abortUpload, clearInactive} = useFileUploadStore();\n  return (\n    <div>\n      <Button\n        className=\"w-full\"\n        variant=\"flat\"\n        color=\"primary\"\n        startIcon={<FileUploadIcon />}\n        disabled={isUploading}\n        onClick={() => openFilePicker()}\n      >\n        {watch('src') ? (\n          <Trans message=\"Replace file\" />\n        ) : (\n          <Trans message=\"Upload file\" />\n        )}\n      </Button>\n      {activeUpload && (\n        <TrackUploadProgress\n          fileUpload={activeUpload}\n          status={status}\n          className=\"mt-24\"\n          onAbort={uploadId => {\n            abortUpload(uploadId);\n            clearInactive();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {TrackFormUploadButton} from '@app/admin/tracks-datatable-page/track-form/track-form-upload-button';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\ninterface TrackFormProps {\n  showExternalIdFields?: boolean;\n  showAlbumField?: boolean;\n  uploadButton?: ReactNode;\n}\nexport function TrackForm({\n  showExternalIdFields,\n  showAlbumField = true,\n  uploadButton,\n}: TrackFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <div className=\"gap-24 md:flex\">\n      <div className=\"flex-shrink-0\">\n        <FormImageSelector\n          name=\"image\"\n          diskPrefix=\"track_image\"\n          variant={isMobile ? 'input' : 'square'}\n          label={isMobile ? <Trans message=\"Image\" /> : null}\n          previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n          stretchPreview\n        />\n        <div className=\"mt-24\">\n          {uploadButton ? uploadButton : <TrackFormUploadButton />}\n        </div>\n      </div>\n      <div className=\"mt-24 flex-auto md:mt-0\">\n        <FormTextField\n          name=\"name\"\n          label={<Trans message=\"Name\" />}\n          className=\"mb-24\"\n          required\n          autoFocus\n        />\n        {showAlbumField && (\n          <FormNormalizedModelField\n            className=\"mb-24\"\n            label={<Trans message=\"Album\" />}\n            name=\"album_id\"\n            endpoint=\"search/suggestions/album\"\n          />\n        )}\n        <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Genres\" />}\n          placeholder={trans(message('+Add genre'))}\n          model={GENRE_MODEL}\n          name=\"genres\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Tags\" />}\n          placeholder={trans(message('+Add tag'))}\n          model={TAG_MODEL}\n          name=\"tags\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormTextField\n          name=\"description\"\n          label={<Trans message=\"Description\" />}\n          inputElementType=\"textarea\"\n          rows={5}\n          className=\"mb-24\"\n        />\n        <DurationField />\n        {showExternalIdFields && <SourceField />}\n        {showExternalIdFields && <SpotifyIdField />}\n      </div>\n    </div>\n  );\n}\n\nfunction SourceField() {\n  return (\n    <FormTextField\n      name=\"src\"\n      label={<Trans message=\"Playback source\" />}\n      className=\"mb-24\"\n      minLength={1}\n      maxLength={230}\n      description={\n        <Trans message=\"Supports audio, video, hls/dash stream and youtube video url. If left empty, best matching youtube video will be found automatically.\" />\n      }\n    />\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n\nfunction DurationField() {\n  const {watch} = useFormContext<CreateTrackPayload>();\n  return (\n    <FormTextField\n      required\n      name=\"duration\"\n      label={<Trans message=\"Duration (in milliseconds)\" />}\n      className=\"mb-24\"\n      type=\"number\"\n      min={1}\n      max={86400000}\n      description={\n        <Trans\n          message=\"Will appear on the site as: :preview\"\n          values={{preview: <FormattedDuration ms={watch('duration')} />}}\n        />\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {TrackUploadPayload} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nconst endpoint = 'tracks';\n\nexport interface CreateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface CreateTrackPayload\n  extends Omit<\n    Track,\n    'genres' | 'artists' | 'tags' | 'id' | 'model_type' | 'album' | 'lyric'\n  > {\n  album_id?: number;\n  artists?: NormalizedModel[];\n  waveData?: number[][];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  lyric?: string;\n}\n\ninterface Options {\n  onSuccess?: (response: CreateTrackResponse) => void;\n}\n\nexport function useCreateTrack(\n  form: UseFormReturn<CreateTrackPayload> | UseFormReturn<TrackUploadPayload>,\n  {onSuccess}: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateTrackPayload) => createTrack(payload),\n    onSuccess: response => {\n      toast(trans(message('Track created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createTrack(payload: CreateTrackPayload) {\n  return apiClient\n    .post<CreateTrackResponse>(endpoint, prepareTrackPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareTrackPayload(payload: CreateTrackPayload) {\n  return {\n    ...payload,\n    album_id: payload.album_id ? payload.album_id : null,\n    artists: payload.artists?.map(artist => artist.id),\n  };\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  CreateTrackPayload,\n  CreateTrackResponse,\n  useCreateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  onTrackCreated?: (response: CreateTrackResponse) => void;\n  defaultValues?: Partial<CreateTrackPayload>;\n}\n\nexport function useCreateTrackForm({\n  onTrackCreated,\n  defaultValues,\n}: Props = {}) {\n  const form = useForm<CreateTrackPayload>({\n    defaultValues,\n  });\n  const createTrack = useCreateTrack(form, {onSuccess: onTrackCreated});\n  return {form, createTrack};\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useLocation} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateTrackPage({wrapInContainer}: Props) {\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, createTrack} = useCreateTrackForm({\n    onTrackCreated: response => {\n      if (pathname.includes('admin')) {\n        navigate(`/admin/tracks/${response.track.id}/edit`);\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createTrack.mutate(values);\n      }}\n      title={<Trans message=\"Add new track\" />}\n      isLoading={createTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nexport interface UpdateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface UpdateTrackPayload extends CreateTrackPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `tracks/${id}`;\n\ninterface Options {\n  onSuccess?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrack(\n  form: UseFormReturn<UpdateTrackPayload>,\n  options: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: UpdateTrackPayload) => updateChannel(payload),\n    onSuccess: response => {\n      toast(trans(message('Track updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('tracks'),\n      });\n      options.onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateChannel({\n  id,\n  ...payload\n}: UpdateTrackPayload): Promise<UpdateTrackResponse> {\n  return apiClient\n    .put(Endpoint(id), prepareTrackPayload(payload as CreateTrackPayload))\n    .then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  UpdateTrackPayload,\n  UpdateTrackResponse,\n  useUpdateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Options {\n  onTrackUpdated?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrackForm(\n  track: UpdateTrackPayload | CreateTrackPayload | Omit<Track, 'lyric'>,\n  options: Options = {}\n) {\n  const form = useForm<UpdateTrackPayload>({\n    defaultValues: {\n      ...track,\n      image: track.image || (track as Track).album?.image,\n    },\n  });\n  const updateTrack = useUpdateTrack(form, {onSuccess: options.onTrackUpdated});\n  return {form, updateTrack};\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {PageStatus} from '@common/http/page-status';\nimport {Navigate, useLocation} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateTrackPage({wrapInContainer}: Props) {\n  const query = useTrack({loader: 'editTrackPage'});\n  if (query.data) {\n    return (\n      <PageContent track={query.data.track} wrapInContainer={wrapInContainer} />\n    );\n  }\n  return (\n    <PageStatus\n      query={query}\n      loaderClassName=\"absolute inset-0 m-auto\"\n      loaderIsScreen={false}\n    />\n  );\n}\n\ninterface PageContentProps {\n  track: Track;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({track, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useTrackPermissions([track]);\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, updateTrack} = useUpdateTrackForm(track, {\n    onTrackUpdated: response => {\n      if (pathname.includes('admin')) {\n        navigate('/admin/tracks');\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateTrack.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ track\" values={{name: track.name}} />}\n      isLoading={updateTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nconst endpoint = 'albums';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport type CreateAlbumPayloadTrack = Omit<\n  CreateTrackPayload,\n  'album' | 'artists' | 'lyric'\n> & {\n  uploadId: string;\n};\n\nexport interface CreateAlbumPayload\n  extends Omit<Album, 'genres' | 'tags' | 'tracks' | 'artists'> {\n  artists: NormalizedModel[];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  tracks: CreateAlbumPayloadTrack[];\n}\n\nexport function useCreateAlbum(form: UseFormReturn<CreateAlbumPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateAlbumPayload) => createAlbum(payload),\n    onSuccess: () => {\n      toast(trans(message('Album created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createAlbum(payload: CreateAlbumPayload) {\n  return apiClient\n    .post<Response>(endpoint, prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareAlbumPayload(payload: CreateAlbumPayload) {\n  return {\n    ...payload,\n    artists: payload.artists?.map(artist => artist.id),\n    tracks: payload.tracks?.map(track => prepareTrackPayload(track)),\n  };\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {\n  CreateAlbumPayload,\n  prepareAlbumPayload,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {useLocation} from 'react-router-dom';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport interface UpdateAlbumPayload extends CreateAlbumPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `albums/${id}`;\n\nexport function useUpdateAlbum(\n  form: UseFormReturn<UpdateAlbumPayload>,\n  albumId: number,\n) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateAlbumPayload) => updateAlbum(albumId, payload),\n    onSuccess: response => {\n      toast(trans(message('Album updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('albums'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/albums');\n      } else {\n        navigate(getAlbumLink(response.album));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum(\n  id: number,\n  payload: UpdateAlbumPayload,\n): Promise<Response> {\n  return apiClient\n    .put(Endpoint(id), prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@common/ui/forms/form';\nimport {Button} from '@common/ui/buttons/button';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  track: UpdateTrackPayload | CreateTrackPayload;\n  hideAlbumField?: boolean;\n}\nexport function UpdateTrackDialog({track, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useUpdateTrackForm(track);\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Edit “:name“ track\" values={{name: track.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Update\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@common/ui/forms/form';\nimport {Button} from '@common/ui/buttons/button';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  defaultValues?: Partial<CreateTrackPayload>;\n  hideAlbumField?: boolean;\n}\nexport function CreateTrackDialog({defaultValues, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useCreateTrackForm({defaultValues});\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Add new track\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useFieldArray, useFormContext} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  CreateAlbumPayloadTrack,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport React, {useRef} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {DragHandleIcon} from '@common/icons/material/DragHandle';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {UpdateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/update-track-dialog';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {CreateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/create-track-dialog';\nimport {useSortable} from '@common/ui/interactions/dnd/use-sortable';\nimport {DragPreviewRenderer} from '@common/ui/interactions/dnd/use-draggable';\nimport {DragPreview} from '@common/ui/interactions/dnd/drag-preview';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\n\nexport function AlbumTracksForm() {\n  const form = useFormContext<CreateAlbumPayload>();\n  const {watch, setValue, getValues} = form;\n  const {fields, remove, prepend, move} = useFieldArray({\n    name: 'tracks',\n  });\n\n  const updateTrack = (\n    uploadId: string,\n    newValues: Partial<CreateTrackPayload>,\n  ) => {\n    const index = getValues('tracks')?.findIndex(f => f.uploadId === uploadId);\n    if (index != null) {\n      setValue(\n        `tracks.${index}`,\n        mergeTrackFormValues(newValues, getValues(`tracks.${index}`)),\n        {shouldDirty: true},\n      );\n    }\n  };\n\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: data =>\n      prepend(\n        // newly uploaded track should inherit album artists, genres and tags\n        mergeTrackFormValues(data, {\n          artists: form.getValues('artists'),\n          genres: form.getValues('genres'),\n          tags: form.getValues('tags'),\n        }),\n      ),\n    onMetadataChange: (file, newData) => {\n      hydrateAlbumForm(form, newData);\n      updateTrack(file.id, newData);\n    },\n  });\n\n  const tracks = watch('tracks') || [];\n\n  return (\n    <div>\n      <div className=\"flex items-center gap-12\">\n        <h2 className=\"my-24 text-xl font-semibold\">\n          <Trans message=\"Tracks\" />\n        </h2>\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          className=\"ml-auto\"\n          startIcon={<FileUploadIcon />}\n          onClick={() => openFilePicker()}\n        >\n          <Trans message=\"Upload tracks\" />\n        </Button>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newTrack => {\n            if (newTrack) {\n              prepend(newTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Create track\" />}>\n            <IconButton variant=\"outline\" color=\"primary\" size=\"xs\">\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <CreateTrackDialog\n            hideAlbumField\n            defaultValues={{\n              artists: watch('artists'),\n              tags: watch('tags'),\n              genres: watch('genres'),\n            }}\n          />\n        </DialogTrigger>\n      </div>\n      {fields.map((field, index) => {\n        const track = tracks[index];\n        return (\n          <TrackItem\n            key={field.id}\n            track={track}\n            onRemove={() => remove(index)}\n            onSort={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n            tracks={tracks}\n            onUpdate={newValues => {\n              updateTrack(track.uploadId, newValues);\n            }}\n          />\n        );\n      })}\n\n      {!fields.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This album does not have any tracks yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface TrackItemProps {\n  track: CreateAlbumPayloadTrack;\n  tracks: CreateAlbumPayloadTrack[];\n  onRemove: () => void;\n  onUpdate: (updatedTrack: UpdateTrackPayload | CreateTrackPayload) => void;\n  onSort: (oldIndex: number, newIndex: number) => void;\n}\nfunction TrackItem({\n  track,\n  tracks,\n  onRemove,\n  onUpdate,\n  onSort,\n}: TrackItemProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const previewRef = useRef<DragPreviewRenderer>(null);\n\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const activeUpload = useFileUploadStore(s => {\n    return track.uploadId ? s.fileUploads.get(track.uploadId) : null;\n  });\n  const {isUploading, status} = useTrackUpload(track.uploadId);\n\n  const {sortableProps} = useSortable({\n    disabled: isUploading,\n    ref,\n    item: track,\n    items: tracks,\n    type: 'albumFormTrack',\n    preview: previewRef,\n    previewVariant: 'line',\n    onSortEnd: (oldIndex, newIndex) => {\n      onSort(oldIndex, newIndex);\n    },\n  });\n\n  return (\n    <div\n      className=\"border-b border-t border-t-transparent py-4\"\n      ref={ref}\n      {...sortableProps}\n    >\n      <div className=\"flex items-center text-sm\">\n        <IconButton className=\"mr-14 flex-shrink-0\" disabled={isUploading}>\n          <DragHandleIcon />\n        </IconButton>\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap\">\n          {track.name}\n        </div>\n        {activeUpload && (\n          <div className=\"mr-10 flex items-center\">\n            <TrackUploadStatusText\n              fileUpload={activeUpload}\n              status={status}\n              className=\"mr-10\"\n            />\n            <ProgressCircle\n              isIndeterminate={status === 'processing'}\n              value={activeUpload.percentage}\n              size=\"sm\"\n            />\n          </div>\n        )}\n        <DialogTrigger\n          type=\"modal\"\n          onClose={updatedTrack => {\n            if (updatedTrack) {\n              onUpdate(updatedTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Edit track\" />}>\n            <IconButton\n              className=\"ml-auto flex-shrink-0 text-muted\"\n              disabled={isUploading}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <UpdateTrackDialog track={track} hideAlbumField={true} />\n        </DialogTrigger>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={isConfirmed => {\n            if (isConfirmed) {\n              if (track.uploadId) {\n                abortUpload(track.uploadId);\n              }\n              onRemove();\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Remove track\" />}>\n            <IconButton className=\"flex-shrink-0 text-muted\">\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n          <ConfirmationDialog\n            isDanger\n            title={<Trans message=\"Remove track\" />}\n            body={\n              <Trans message=\"Are you sure you want to remove this track from the album?\" />\n            }\n            confirm={<Trans message=\"Remove\" />}\n          />\n        </DialogTrigger>\n      </div>\n      <RowDragPreview track={track} ref={previewRef} />\n    </div>\n  );\n}\n\ninterface DragPreviewProps {\n  track: CreateTrackPayload;\n}\nconst RowDragPreview = React.forwardRef<DragPreviewRenderer, DragPreviewProps>(\n  ({track}, ref) => {\n    let content = track.name;\n    if (track.artists?.length) {\n      content += `- ${track.artists?.[0].name}`;\n    }\n    return (\n      <DragPreview ref={ref}>\n        {() => (\n          <div className=\"rounded bg-chip p-8 text-sm shadow\">{content}</div>\n        )}\n      </DragPreview>\n    );\n  },\n);\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {AlbumTracksForm} from '@app/admin/albums-datatable-page/album-form/album-tracks-form';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\n// AlbumForm will be wrapped in FileUploadProvider by parent component\n\ninterface AlbumFormProps {\n  showExternalIdFields?: boolean;\n}\nexport function AlbumForm({showExternalIdFields}: AlbumFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <Fragment>\n      <div className=\"gap-24 md:flex\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image\"\n            diskPrefix=\"album_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize=\"md:w-full md:w-224 md:aspect-square\"\n            stretchPreview\n          />\n        </div>\n        <div className=\"mt-24 flex-auto md:mt-0\">\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-24\"\n            required\n            autoFocus\n          />\n          <FormDatePicker\n            name=\"release_date\"\n            label={<Trans message=\"Release date\" />}\n            className=\"mb-24\"\n            granularity=\"day\"\n          />\n          <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Genres\" />}\n            placeholder={trans(message('+Add genre'))}\n            model={GENRE_MODEL}\n            name=\"genres\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Tags\" />}\n            placeholder={trans(message('+Add tag'))}\n            model={TAG_MODEL}\n            name=\"tags\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormTextField\n            name=\"description\"\n            label={<Trans message=\"Description\" />}\n            inputElementType=\"textarea\"\n            rows={5}\n            className=\"mb-24\"\n          />\n          {showExternalIdFields && <SpotifyIdField />}\n        </div>\n      </div>\n      <AlbumTracksForm />\n    </Fragment>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  UpdateAlbumPayload,\n  useUpdateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-update-album';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\nimport {Navigate} from 'react-router-dom';\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateAlbumPage({wrapInContainer}: Props) {\n  const query = useAlbum({loader: 'editAlbumPage'});\n\n  if (query.data) {\n    return (\n      <FileUploadProvider>\n        <PageContent\n          album={query.data.album}\n          wrapInContainer={wrapInContainer}\n        />\n      </FileUploadProvider>\n    );\n  }\n\n  return (\n    <PageStatus\n      query={query}\n      loaderIsScreen={false}\n      loaderClassName=\"absolute inset-0 m-auto\"\n    />\n  );\n}\n\ninterface PageContentProps {\n  album: Album;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({album, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useAlbumPermissions(album);\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const form = useForm<UpdateAlbumPayload>({\n    defaultValues: {\n      image: album.image,\n      name: album.name,\n      release_date: album.release_date,\n      artists: album.artists,\n      genres: album.genres,\n      tags: album.tags,\n      description: album.description,\n      spotify_id: album.spotify_id,\n      tracks: album.tracks,\n    },\n  });\n  const updateAlbum = useUpdateAlbum(form, album.id);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateAlbum.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ album\" values={{name: album.name}} />}\n      isLoading={updateAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n","import {forwardRef, useImperativeHandle, useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {Form} from '@common/ui/forms/form';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport type {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport const AlbumUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const now = useCurrentDateTime();\n    const [isVisible, setIsVisible] = useState(false);\n    const form = useForm<CreateAlbumPayload>({\n      defaultValues: {\n        tracks: [],\n        artists: userArtist ? [userArtist] : [],\n        release_date: now.toAbsoluteString(),\n      },\n    });\n    const tracks = form.watch('tracks') || [];\n\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setIsVisible(true);\n        form.setValue('tracks', [...form.getValues('tracks'), data]);\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        hydrateAlbumForm(form, newData);\n        form.setValue(\n          'tracks',\n          form.getValues('tracks').map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          }),\n        );\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    const createAlbum = useCreateAlbum(form);\n    return isVisible ? (\n      <Form\n        className=\"rounded border p-14 md:p-24 mb-30 bg-paper\"\n        form={form}\n        onSubmit={newValues =>\n          createAlbum.mutate(newValues, {\n            onSuccess: response => {\n              setIsVisible(false);\n              form.reset();\n              onCreate(response.album);\n            },\n          })\n        }\n      >\n        <AlbumForm showExternalIdFields={false} />\n        <div className=\"mt-24\">\n          <Button\n            variant=\"text\"\n            onClick={() => {\n              tracks.forEach(track => {\n                abortUpload(track.uploadId);\n              });\n              form.reset();\n              setIsVisible(false);\n              onCancel();\n            }}\n            className=\"mr-10\"\n          >\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"flat\"\n            color=\"primary\"\n            disabled={uploadIsInProgress || createAlbum.isPending}\n          >\n            <Trans message=\"Save\" />\n          </Button>\n        </div>\n      </Form>\n    ) : null;\n  },\n);\n","import {\n  forwardRef,\n  memo,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {\n  TrackUploadPayload,\n  useTrackUploader,\n} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useForm} from 'react-hook-form';\nimport {useCreateTrack} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {Form} from '@common/ui/forms/form';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\n\nexport const TracksUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const [tracks, setTracks] = useState<TrackUploadPayload[]>([]);\n\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setTracks(prev => {\n          if (userArtist) {\n            return [...prev, {...data, artists: [userArtist]}];\n          }\n          return [...prev, data];\n        });\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        setTracks(allTracks => {\n          return allTracks.map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          });\n        });\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    return (\n      <div className=\"w-full\">\n        {tracks.map(track => (\n          <TrackUploadItem\n            key={track.uploadId}\n            track={track}\n            onCreate={createdTrack => {\n              // hide upload form for this track\n              setTracks(prev =>\n                prev.filter(t => t.uploadId !== track.uploadId),\n              );\n              onCreate(createdTrack);\n            }}\n            onRemove={() => {\n              setTracks(prev => {\n                const newTracks = prev.filter(\n                  t => t.uploadId !== track.uploadId,\n                );\n                // only invoke \"onCancel\" if every uploaded track has been removed, so upload mode can be unlocked\n                if (!newTracks.length) {\n                  onCancel();\n                }\n                return newTracks;\n              });\n              abortUpload(track.uploadId);\n            }}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n\ninterface TrackUploadItemProps {\n  track: TrackUploadPayload;\n  onRemove: () => void;\n  onCreate: (track: Track) => void;\n}\nconst TrackUploadItem = memo(\n  ({track, onRemove, onCreate}: TrackUploadItemProps) => {\n    const form = useForm<TrackUploadPayload>({\n      defaultValues: track,\n    });\n    const createTrack = useCreateTrack(form);\n    const activeUpload = useFileUploadStore(s =>\n      s.fileUploads.get(track.uploadId),\n    );\n    const {isUploading, status} = useTrackUpload(track.uploadId);\n\n    useEffect(() => {\n      form.reset(track);\n    }, [track, form]);\n\n    const uploadProgress =\n      isUploading && activeUpload ? (\n        <TrackUploadProgress fileUpload={activeUpload} status={status} />\n      ) : null;\n\n    return (\n      <Form\n        form={form}\n        onSubmit={values => {\n          createTrack.mutate(values, {\n            onSuccess: response => onCreate(response.track),\n          });\n        }}\n        className=\"rounded border p-14 md:p-24 mb-30 bg-paper\"\n      >\n        <TrackForm uploadButton={uploadProgress} showExternalIdFields={false} />\n        <Button variant=\"text\" onClick={() => onRemove()} className=\"mr-10\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createTrack.isPending || !form.watch('src')}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </Form>\n    );\n  },\n);\n","export default \"__VITE_ASSET__19ef062e__\"","import {Track} from '@app/web-player/tracks/track';\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport albumBorderImage from './album-border.png';\nimport {ShareMediaButtons} from '@app/web-player/sharing/share-media-buttons';\n\ninterface UploadedMediaPreviewProps {\n  media: Track | Album;\n}\nexport function UploadedMediaPreview({media}: UploadedMediaPreviewProps) {\n  const isAlbum = media.model_type === ALBUM_MODEL;\n  const absoluteLink = isAlbum\n    ? getAlbumLink(media, {absolute: true})\n    : getTrackLink(media, {absolute: true});\n\n  return (\n    <div className=\"flex items-center gap-28 border rounded bg-paper p-20 my-20 mx-auto w-780 max-w-full\">\n      <div className={clsx(isAlbum && 'relative isolate my-14 mx-18')}>\n        {isAlbum ? (\n          <AlbumImage\n            album={media}\n            className=\"rounded flex-shrink-0 z-20 relative\"\n            size=\"w-132 h-132\"\n          />\n        ) : (\n          <TrackImage\n            track={media}\n            className=\"rounded flex-shrink-0 z-20 relative\"\n            size=\"w-132 h-132\"\n          />\n        )}\n        {isAlbum && (\n          <img\n            className=\"absolute block w-160 h-160 max-w-160 -top-14 -left-14 z-10\"\n            src={albumBorderImage}\n            alt=\"\"\n          />\n        )}\n      </div>\n      <div className=\"flex-auto\">\n        <div className=\"text-base font-bold\">{media.name}</div>\n        <div className=\"text-muted text-sm mb-14\">\n          <ArtistLinks artists={media.artists} />\n        </div>\n        {media.genres?.length ? (\n          <ChipList selectable={false} size=\"sm\" className=\"mb-14\">\n            {media.genres?.map(genre => {\n              return (\n                <Chip key={genre.id}>{genre.display_name || genre.name}</Chip>\n              );\n            })}\n          </ChipList>\n        ) : null}\n        <div className=\"text-sm\">\n          <Trans\n            message=\"Upload complete. <a>Go to your track</a>\"\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  to={isAlbum ? getAlbumLink(media) : getTrackLink(media)}\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"ml-auto flex-auto max-w-300\">\n        <div className=\"text-muted text-sm\">\n          <Trans message=\"Share your new track\" />\n          <ShareMediaButtons\n            name={media.name}\n            image={media.image}\n            link={absoluteLink}\n          />\n          <TextField\n            value={absoluteLink}\n            readOnly\n            className=\"mt-24 w-full\"\n            size=\"sm\"\n            onClick={e => {\n              (e.target as HTMLInputElement).select();\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\n      >\n        <Trans message=\"Drop your files anywhere on the page to upload\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface Response extends BackendResponse {\n  minutesLeft: number | null;\n}\n\nexport function resetMinutesLimitQuery() {\n  const {user} = getBootstrapData();\n  if (user?.id) {\n    queryClient.resetQueries({queryKey: ['minutesLimit', user.id]});\n  }\n}\n\nexport function useUserMinutesLimit() {\n  const {user} = useAuth();\n  const userId = user?.id!;\n  return useQuery({\n    queryKey: ['minutesLimit', userId],\n    queryFn: () => fetchLimit(userId),\n    enabled: userId != null,\n  });\n}\n\nfunction fetchLimit(userId: number): Promise<Response> {\n  return apiClient\n    .get(`users/${userId}/minutes-left`)\n    .then(response => response.data);\n}\n","export default \"__VITE_ASSET__5b7b3136__\"","export default \"__VITE_ASSET__430d5aeb__\"","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport lightBgImage from './images/light-bg.svg';\nimport darkBgImage from './images/dark-bg.svg';\nimport {useIsDarkMode} from '@common/ui/themes/use-is-dark-mode';\nimport {ComponentPropsWithoutRef, ReactNode} from 'react';\n\ninterface Props extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function BackstageLayout({children, ...domProps}: Props) {\n  const isDarkMode = useIsDarkMode();\n  return (\n    <div className=\"h-screen flex flex-col\" {...domProps}>\n      <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n      <div\n        className=\"overflow-y-auto flex-auto bg-cover relative\"\n        style={{\n          backgroundImage: `url(${isDarkMode ? darkBgImage : lightBgImage})`,\n        }}\n      >\n        <div className=\"container mx-auto p-14 md:p-24 min-h-full flex flex-col\">\n          <div className=\"flex-auto\">{children}</div>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {ComponentPropsWithoutRef, ReactNode, useRef, useState} from 'react';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumUploader} from '@app/web-player/backstage/upload-page/album-uploader';\nimport {TracksUploader} from '@app/web-player/backstage/upload-page/tracks-uploader';\nimport {UploadedMediaPreview} from '@app/web-player/backstage/upload-page/uploaded-media-preview';\nimport {\n  NativeFileDraggable,\n  useDroppable,\n} from '@common/ui/interactions/dnd/use-droppable';\nimport {DropTargetMask} from '@app/web-player/backstage/upload-page/drop-tarket-mask';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  resetMinutesLimitQuery,\n  useUserMinutesLimit,\n} from '@app/web-player/backstage/upload-page/use-user-minutes-limit';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ntype UploadMode = 'album' | 'tracks';\n\nexport interface UploaderProps {\n  onUploadStart: () => void;\n  onCancel: () => void;\n  onCreate: (item: Track | Album) => void;\n}\n\nexport type UploaderActions = ReturnType<typeof useTrackUploader>;\n\ninterface Props {\n  backstageLayout?: boolean;\n}\nexport function UploadPage({backstageLayout = true}: Props) {\n  return (\n    <FileUploadProvider>\n      <Content backstageLayout={backstageLayout} />\n    </FileUploadProvider>\n  );\n}\n\nfunction Content({backstageLayout}: Props) {\n  const [uploadMode, setUploadMode] = useState<UploadMode>('tracks');\n  const [modeIsLocked, setModeIsLocked] = useState(false);\n\n  const uploaderRef = useRef<UploaderActions>(null);\n  const Uploader = uploadMode === 'tracks' ? TracksUploader : AlbumUploader;\n\n  const [createdItems, setCreatedItems] = useState<(Album | Track)[]>([]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {droppableProps} = useDroppable({\n    id: 'uploadPageRoot',\n    ref,\n    types: ['nativeFile'],\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop: async draggable => {\n      if (draggable.type === 'nativeFile') {\n        const files = await (draggable as NativeFileDraggable).getData();\n        const validFiles = uploaderRef.current?.validateUploads(files);\n        if (validFiles?.length) {\n          uploaderRef.current?.uploadTracks(validFiles);\n        }\n      }\n    },\n  });\n\n  const Wrapper = backstageLayout ? BackstageLayout : DefaultWrapper;\n\n  return (\n    <Wrapper {...droppableProps}>\n      {!modeIsLocked && (\n        <UploadPanel\n          onUpload={() => uploaderRef.current?.openFilePicker()}\n          uploadMode={uploadMode}\n          onUploadModeChange={setUploadMode}\n        />\n      )}\n      {createdItems.map(item => (\n        <UploadedMediaPreview key={item.id} media={item} />\n      ))}\n      <Uploader\n        ref={uploaderRef}\n        onUploadStart={() => setModeIsLocked(true)}\n        onCreate={item => {\n          setCreatedItems(prev => [...prev, item]);\n          resetMinutesLimitQuery();\n        }}\n        onCancel={() => {\n          setModeIsLocked(false);\n        }}\n      />\n      <DropTargetMask isVisible={isDragOver} />\n    </Wrapper>\n  );\n}\n\ninterface UploadPanelProps {\n  onUpload: () => void;\n  uploadMode: UploadMode;\n  onUploadModeChange: (newMode: UploadMode) => void;\n}\nfunction UploadPanel({\n  onUpload,\n  uploadMode,\n  onUploadModeChange,\n}: UploadPanelProps) {\n  const {data} = useUserMinutesLimit();\n  return (\n    <div className=\"pt-40\">\n      <div className=\"border rounded p-20 md:p-48 flex flex-col items-center max-w-580 mx-auto bg-paper\">\n        <h1 className=\"text-base md:text-[22px] md:font-light\">\n          <Trans message=\"Drag and drop your tracks, videos & albums here.\" />\n        </h1>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          className=\"mt-20 w-min\"\n          onClick={() => onUpload()}\n        >\n          <Trans message=\"Or choose files to upload\" />\n        </Button>\n        <div className=\"border-t pt-20 mt-20\">\n          <Switch\n            checked={uploadMode === 'album'}\n            onChange={e =>\n              onUploadModeChange(e.target.checked ? 'album' : 'tracks')\n            }\n          >\n            <Trans message=\"Make an album when multiple files are selected\" />\n          </Switch>\n        </div>\n      </div>\n      <div className=\"text-muted mt-20 text-sm text-center min-h-20\">\n        {data?.minutesLeft != null && (\n          <Trans\n            message=\"You have :count minutes left. Try <a>Pro accounts</a> to get more time and access to advanced features.\"\n            values={{\n              count: data.minutesLeft,\n              a: parts => (\n                <Link className={LinkStyle} to=\"/pricing\">\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface DefaultWrapperProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nfunction DefaultWrapper({children, ...domProps}: DefaultWrapperProps) {\n  return (\n    <div {...domProps} className=\"min-h-full relative\">\n      <div className=\"container mx-auto p-14 md:p-24\">{children}</div>\n    </div>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport React, {useEffect} from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useLocation, useSearchParams} from 'react-router-dom';\nimport {useNormalizedModel} from '@common/users/queries/use-normalized-model';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateAlbumPage({wrapInContainer}: Props) {\n  return (\n    <FileUploadProvider>\n      <PageContent wrapInContainer={wrapInContainer} />\n    </FileUploadProvider>\n  );\n}\n\nfunction PageContent({wrapInContainer}: Props) {\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const now = useCurrentDateTime();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const [searchParams] = useSearchParams();\n  const {data} = useNormalizedModel(\n    `normalized-models/artist/${searchParams.get('artistId')}`,\n    undefined,\n    {enabled: !!searchParams.get('artistId')},\n  );\n  const artist = data?.model;\n  const form = useForm<CreateAlbumPayload>({\n    defaultValues: {\n      release_date: now.toAbsoluteString(),\n    },\n  });\n  const createAlbum = useCreateAlbum(form);\n\n  useEffect(() => {\n    if (artist) {\n      form.reset({\n        artists: [artist],\n      });\n    }\n  }, [artist, form]);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createAlbum.mutate(values, {\n          onSuccess: response => {\n            if (pathname.includes('admin')) {\n              if (artist) {\n                navigate(`/admin/artists/${artist.id}/edit`);\n              } else {\n                navigate('/admin/albums');\n              }\n            } else {\n              navigate(getAlbumLink(response.album));\n            }\n          },\n        });\n      }}\n      title={<Trans message=\"Add new album\" />}\n      isLoading={createAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router-dom';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\n\ninterface Response extends BackendResponse {\n  request: BackstageRequest;\n}\n\nexport function useBackstageRequest() {\n  const {requestId} = useParams();\n  return useQuery({\n    queryKey: ['backstage-request', +requestId!],\n    queryFn: () => fetchBackstageRequest(requestId!),\n  });\n}\n\nfunction fetchBackstageRequest(trackId: number | string) {\n  return apiClient\n    .get<Response>(`backstage-request/${trackId}`)\n    .then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DocumentScannerIcon = createSvgIcon(\n  <path d=\"M7 3H4v3H2V1h5v2zm15 3V1h-5v2h3v3h2zM7 21H4v-3H2v5h5v-2zm13-3v3h-3v2h5v-5h-2zM17 6H7v12h10V6zm2 12c0 1.1-.9 2-2 2H7c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v12zM15 8H9v2h6V8zm0 3H9v2h6v-2zm0 3H9v2h6v-2z\" />\n, 'DocumentScannerOutlined');\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const InfoDialogTriggerIcon = createSvgIcon(\n  <path d=\"M9 8a1 1 0 0 0-1-1H5.5a1 1 0 1 0 0 2H7v4a1 1 0 0 0 2 0zM4 0h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4zm4 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />,\n  'InfoDialogTrigger'\n);\n","import {useFormContext} from 'react-hook-form';\nimport React from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Link} from 'react-router-dom';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {Table} from '@common/ui/tables/table';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\nimport {UpdateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useDeleteAlbum} from '@app/web-player/albums/requests/use-delete-album';\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\n\nconst Columns: ColumnConfig<Album>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    visibleInMode: 'all',\n    width: 'flex-3',\n    body: album => (\n      <div className=\"flex items-center gap-12\">\n        <AlbumImage\n          album={album}\n          className=\"flex-shrink-0\"\n          size=\"w-34 h-34 rounded\"\n        />\n        <AlbumLink album={album} target=\"_blank\" />\n      </div>\n    ),\n  },\n  {\n    key: 'release_date',\n    allowsSorting: true,\n    header: () => <Trans message=\"Release date\" />,\n    body: album =>\n      album.release_date ? <FormattedDate date={album.release_date} /> : null,\n  },\n  {\n    key: 'track_count',\n    allowsSorting: false,\n    header: () => <Trans message=\"Track count\" />,\n    body: album =>\n      album.tracks_count ? (\n        <FormattedNumber value={album.tracks_count} />\n      ) : null,\n  },\n  {\n    key: 'plays',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plays\" />,\n    body: album =>\n      album.plays ? <FormattedNumber value={album.plays} /> : null,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    hideHeader: true,\n    align: 'end',\n    body: album => <RowActions album={album} />,\n  },\n];\n\ninterface Props {\n  albums?: Album[];\n}\nexport function ArtistAlbumsTable({albums = []}: Props) {\n  const {watch} = useFormContext<UpdateArtistPayload>();\n  const artistId = watch('id');\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(albums);\n  return (\n    <div>\n      <div className=\"my-24\">\n        <div className=\"flex items-center gap-12\">\n          <h2 className=\"text-xl font-semibold\">\n            <Trans message=\"Albums\" />\n          </h2>\n          <Button\n            variant=\"outline\"\n            color=\"primary\"\n            size=\"xs\"\n            className=\"ml-auto\"\n            startIcon={<AddIcon />}\n            elementType={artistId ? Link : undefined}\n            to={`../../../albums/new?artistId=${artistId}`}\n            relative=\"path\"\n            disabled={!artistId}\n          >\n            <Trans message=\"Add album\" />\n          </Button>\n        </div>\n\n        {!artistId && (\n          <div className=\"flex items-center gap-6 text-sm\">\n            <InfoDialogTriggerIcon\n              viewBox=\"0 0 16 16\"\n              size=\"xs\"\n              className=\"text-muted\"\n            />\n            <Trans message=\"Save changes to enable album creation.\" />\n          </div>\n        )}\n      </div>\n\n      <Table\n        columns={Columns}\n        data={albums}\n        sortDescriptor={sortDescriptor}\n        onSortChange={onSortChange}\n        enableSelection={false}\n      />\n\n      {!data.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This artist does not have any albums yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface RowActionsProps {\n  album: Album;\n}\nfunction RowActions({album}: RowActionsProps) {\n  const deleteAlbum = useDeleteAlbum();\n  return (\n    <div className=\"text-muted\">\n      <Link to={`../../../albums/${album.id}/edit`} relative=\"path\">\n        <IconButton size=\"md\">\n          <EditIcon />\n        </IconButton>\n      </Link>\n      <DialogTrigger\n        type=\"modal\"\n        onClose={isConfirmed => {\n          if (isConfirmed) {\n            deleteAlbum.mutate({albumId: album.id});\n          }\n        }}\n      >\n        <IconButton size=\"md\" disabled={deleteAlbum.isPending}>\n          <CloseIcon />\n        </IconButton>\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete album\" />}\n          body={<Trans message=\"Are you sure you want to delete this album?\" />}\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {ArtistAlbumsTable} from '@app/admin/artist-datatable-page/artist-form/artist-albums-table';\nimport {Album} from '@app/web-player/albums/album';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {useFieldArray} from 'react-hook-form';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {ProfileLinksForm} from '@app/admin/artist-datatable-page/artist-form/profile-links-form';\n\ninterface Props {\n  albums?: Album[];\n  showExternalFields?: boolean;\n}\nexport function CrupdateArtistForm({albums, showExternalFields}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <FileUploadProvider>\n      <div className=\"md:flex gap-24\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image_small\"\n            diskPrefix=\"artist_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n            stretchPreview\n          />\n          {showExternalFields && (\n            <FormSwitch name=\"verified\" className=\"mt-14\">\n              <Trans message=\"Verified\" />\n            </FormSwitch>\n          )}\n        </div>\n        <div className=\"flex-auto mt-24 md:mt-0\">\n          <Tabs isLazy>\n            <TabList>\n              <Tab>\n                <Trans message=\"Details\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Links\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Biography\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Images\" />\n              </Tab>\n            </TabList>\n            <TabPanels className=\"pt-20\">\n              <TabPanel>\n                <DetailsPanel showExternalFields={showExternalFields} />\n              </TabPanel>\n              <TabPanel>\n                <ProfileLinksForm />\n              </TabPanel>\n              <TabPanel>\n                <BiographyPanel />\n              </TabPanel>\n              <TabPanel>\n                <ImagesPanel />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n      <ArtistAlbumsTable albums={albums} />\n    </FileUploadProvider>\n  );\n}\n\ninterface DetailsPanelProps {\n  showExternalFields?: boolean;\n}\nfunction DetailsPanel({showExternalFields}: DetailsPanelProps) {\n  const {trans} = useTrans();\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        className=\"mb-24\"\n        required\n        autoFocus\n        disabled={!showExternalFields}\n      />\n      <FormNormalizedModelChipField\n        label={<Trans message=\"Genres\" />}\n        placeholder={trans(message('+Add genre'))}\n        model={GENRE_MODEL}\n        name=\"genres\"\n        allowCustomValue\n        className=\"mb-24\"\n      />\n      {showExternalFields && <SpotifyIdField />}\n    </Fragment>\n  );\n}\n\nfunction BiographyPanel() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"profile.country\"\n        label={<Trans message=\"Country\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        name=\"profile.city\"\n        label={<Trans message=\"City\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={5}\n        name=\"profile.description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-24\"\n      />\n    </Fragment>\n  );\n}\n\nfunction ImagesPanel() {\n  const {fields, append, remove} = useFieldArray<CreateArtistPayload>({\n    name: 'profile_images',\n  });\n\n  return (\n    <div>\n      <div className=\"flex gap-12 flex-wrap mb-24\">\n        {fields.map((field, index) => {\n          return (\n            <FormImageSelector\n              key={field.id}\n              name={`profile_images.${index}.url`}\n              diskPrefix=\"artist_images\"\n              variant=\"square\"\n              previewSize=\"w-160 h-160\"\n              stretchPreview\n              showRemoveButton\n              onChange={value => {\n                if (!value) {\n                  remove(index);\n                }\n              }}\n            />\n          );\n        })}\n      </div>\n      <Button\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        onClick={() => {\n          append({url: ''});\n        }}\n      >\n        <Trans message=\"Add another image\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {useLocation} from 'react-router-dom';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Response extends BackendResponse {\n  artist: Artist;\n}\n\nexport interface UpdateArtistPayload extends CreateArtistPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `artists/${id}`;\n\nexport function useUpdateArtist(form: UseFormReturn<UpdateArtistPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateArtistPayload) => updateAlbum(payload),\n    onSuccess: response => {\n      toast(trans(message('Artist updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('artists'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/artists');\n      } else {\n        navigate(getArtistLink(response.artist));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum({id, ...payload}: UpdateArtistPayload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  useArtist,\n  UseArtistResponse,\n} from '@app/web-player/artists/requests/use-artist';\nimport {\n  UpdateArtistPayload,\n  useUpdateArtist,\n} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {CrupdateArtistForm} from '@app/admin/artist-datatable-page/artist-form/crupdate-artist-form';\nimport {useArtistPermissions} from '@app/web-player/artists/use-artist-permissions';\nimport {Navigate} from 'react-router-dom';\n\ninterface Props {\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nexport function UpdateArtistPage({wrapInContainer, showExternalFields}: Props) {\n  const query = useArtist({\n    loader: 'editArtistPage',\n  });\n\n  if (query.data) {\n    return (\n      <PageContent\n        response={query.data}\n        wrapInContainer={wrapInContainer}\n        showExternalFields={showExternalFields}\n      />\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface PageContentProps {\n  response: UseArtistResponse;\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nfunction PageContent({\n  response,\n  wrapInContainer,\n  showExternalFields,\n}: PageContentProps) {\n  const {canEdit} = useArtistPermissions(response.artist);\n  const form = useForm<UpdateArtistPayload>({\n    defaultValues: {\n      id: response.artist.id,\n      name: response.artist.name,\n      verified: response.artist.verified,\n      spotify_id: response.artist.spotify_id,\n      genres: response.artist.genres,\n      image_small: response.artist.image_small,\n      links: response.artist.links,\n      profile: response.artist.profile,\n      profile_images: response.artist.profile_images,\n    },\n  });\n  const updateArtist = useUpdateArtist(form);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateArtist.mutate(values);\n      }}\n      title={\n        <Trans\n          message=\"Edit “:name“ artist\"\n          values={{name: response.artist.name}}\n        />\n      }\n      isLoading={updateArtist.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <CrupdateArtistForm\n        albums={response.albums?.data}\n        showExternalFields={showExternalFields}\n      />\n    </CrupdateResourceLayout>\n  );\n}\n","import {useDateRangePickerState} from '@common/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {DateRangeDialog} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\nimport React from 'react';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\nimport {Granularity} from '@common/ui/forms/input-field/date/date-picker/use-date-picker-state';\n\nconst monthDayFormat: Intl.DateTimeFormatOptions = {\n  month: 'short',\n  day: '2-digit',\n};\n\ninterface ReportDataSelectorProps {\n  value: DateRangeValue;\n  disabled?: boolean;\n  onChange: (value: DateRangeValue) => void;\n  compactOnMobile?: boolean;\n  enableCompare?: boolean;\n  granularity?: Granularity;\n}\nexport function ReportDateSelector({\n  value,\n  onChange,\n  disabled,\n  compactOnMobile = true,\n  enableCompare = false,\n  granularity = 'minute',\n}: ReportDataSelectorProps) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <DialogTrigger\n      type=\"popover\"\n      onClose={value => {\n        if (value) {\n          onChange(value);\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"chip\"\n        endIcon={<DateRangeIcon />}\n        disabled={disabled}\n      >\n        <FormattedDateTimeRange\n          start={value.start}\n          end={value.end}\n          options={\n            isMobile && compactOnMobile\n              ? monthDayFormat\n              : DateFormatPresets.short\n          }\n        />\n      </Button>\n      <DateSelectorDialog\n        value={value}\n        enableCompare={enableCompare}\n        granularity={granularity}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface DateSelectorDialogProps {\n  value: DateRangeValue;\n  enableCompare: boolean;\n  granularity: Granularity;\n}\nfunction DateSelectorDialog({\n  value,\n  enableCompare,\n  granularity,\n}: DateSelectorDialogProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const state = useDateRangePickerState({\n    granularity,\n    defaultValue: {\n      start: value.start,\n      end: value.end,\n      preset: value.preset,\n    },\n    closeDialogOnSelection: false,\n  });\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\n  const compareState = useDateRangePickerState({\n    granularity,\n    defaultValue: compareHasInitialValue\n      ? {\n          start: value.compareStart,\n          end: value.compareEnd,\n          preset: value.comparePreset,\n        }\n      : DateRangeComparePresets[0].getRangeValue(state.selectedValue),\n  });\n  return (\n    <DateRangeDialog\n      state={state}\n      compareState={enableCompare ? compareState : undefined}\n      compareVisibleDefault={compareHasInitialValue}\n      showInlineDatePickerField={!isMobile}\n    />\n  );\n}\n","import {ReactNode, Ref} from 'react';\nimport clsx from 'clsx';\n\nexport interface ChartLayoutProps {\n  title: ReactNode;\n  description?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  contentIsFlex?: boolean;\n  contentClassName?: string;\n  minHeight?: string;\n  contentRef?: Ref<HTMLDivElement>;\n  isLoading?: boolean;\n}\nexport function ChartLayout(props: ChartLayoutProps) {\n  const {\n    title,\n    description,\n    children,\n    className,\n    contentIsFlex = true,\n    contentClassName,\n    contentRef,\n    minHeight = 'min-h-440',\n  } = props;\n\n  return (\n    <div\n      className={clsx(\n        'rounded-panel flex h-full flex-auto flex-col border bg',\n        minHeight,\n        className,\n      )}\n    >\n      <div className=\"flex flex-shrink-0 items-center justify-between p-14 text-xs\">\n        <div className=\"text-sm font-semibold\">{title}</div>\n        {description && <div className=\"text-muted\">{description}</div>}\n      </div>\n      <div\n        ref={contentRef}\n        className={clsx(\n          'relative p-14',\n          contentIsFlex && 'flex flex-auto items-center justify-center',\n          contentClassName,\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","import {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {Trans} from '@common/i18n/trans';\n\nexport function ChartLoadingIndicator() {\n  return (\n    <div className=\"flex items-center gap-10 text-sm absolute mx-auto\">\n      <ProgressCircle isIndeterminate size=\"sm\" />\n      <Trans message=\"Chart loading\" />\n    </div>\n  );\n}\n","import type {ChartData, ChartOptions, ChartType} from 'chart.js';\nimport {lazy, Suspense} from 'react';\nimport {ChartLayout, ChartLayoutProps} from './chart-layout';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\n\nconst LazyChart = lazy(() => import('./lazy-chart'));\n\nexport interface BaseChartProps<Type extends ChartType = ChartType>\n  extends Omit<ChartLayoutProps, 'children'> {\n  type: Type;\n  data: ChartData<Type, unknown>;\n  options?: ChartOptions<Type>;\n  hideLegend?: boolean;\n}\nexport function BaseChart<Type extends ChartType = ChartType>(\n  props: BaseChartProps<Type>\n) {\n  const {title, description, className, contentRef, isLoading} = props;\n\n  return (\n    <ChartLayout\n      title={title}\n      description={description}\n      className={className}\n      contentRef={contentRef}\n    >\n      <Suspense fallback={<ChartLoadingIndicator />}>\n        <LazyChart {...props} />\n        {isLoading && <ChartLoadingIndicator />}\n      </Suspense>\n    </ChartLayout>\n  );\n}\n","import {DateFormatter, parseAbsoluteToLocal} from '@internationalized/date';\nimport memoize from 'nano-memoize';\nimport {ChartType} from 'chart.js';\nimport {\n  FormattedDatasetItem,\n  FormattedReportData,\n} from './formatted-dataset-item';\nimport {\n  DatasetItem,\n  RangedDatasetGranularity,\n  ReportMetric,\n} from '../../admin/analytics/report-metric';\nimport {shallowEqual} from '../../utils/shallow-equal';\n\ninterface Options {\n  localeCode: string;\n  shareFirstDatasetLabels?: boolean;\n}\n\ntype FormattedDatasetLabels = Omit<FormattedDatasetItem, 'value'>;\n\nexport function formatReportData(\n  report: ReportMetric<DatasetItem> | undefined,\n  {localeCode = 'en', shareFirstDatasetLabels = true}: Options,\n): FormattedReportData {\n  if (!report) return {datasets: []};\n\n  const firstDatasetLabels: FormattedDatasetLabels[] = [];\n\n  return {\n    ...report,\n    datasets: report.datasets.map((dataset, datasetIndex) => {\n      const data = dataset.data.map((datasetItem, itemIndex) => {\n        let label: FormattedDatasetLabels;\n        // when there are multiple datasets, we'll need to use labels from the first dataset, so charts are\n        // overlapped over one another, otherwise they will be side by side, if labels in all datasets are not identical.\n        if (datasetIndex === 0 || !shareFirstDatasetLabels) {\n          label = generateDatasetLabels(\n            datasetItem,\n            report.granularity,\n            localeCode,\n          );\n          firstDatasetLabels[itemIndex] = label;\n        } else {\n          label = firstDatasetLabels[itemIndex];\n        }\n        return {\n          ...label,\n          value: datasetItem.value,\n        };\n      });\n\n      return {...dataset, data};\n    }),\n  };\n}\n\nfunction generateDatasetLabels<T extends ChartType = ChartType>(\n  datum: DatasetItem,\n  granularity: RangedDatasetGranularity | undefined,\n  locale: string,\n): FormattedDatasetLabels {\n  if (datum.label) {\n    return {label: datum.label};\n  }\n\n  if (!datum.date) {\n    return {label: ''};\n  }\n\n  return generateTimeLabels(datum, granularity, locale);\n}\n\nfunction generateTimeLabels(\n  {date: isoDate, endDate: isoEndDate}: DatasetItem,\n  granularity: RangedDatasetGranularity | undefined = 'day',\n  locale: string,\n): Omit<FormattedDatasetItem, 'value'> {\n  const date = parseAbsoluteToLocal(isoDate!).toDate();\n  const endDate = isoEndDate ? parseAbsoluteToLocal(isoEndDate).toDate() : null;\n\n  switch (granularity) {\n    case 'minute':\n      return {\n        label: getFormatter(locale, {\n          second: '2-digit',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric',\n          second: '2-digit',\n        }).format(date),\n      };\n    case 'hour':\n      return {\n        label: getFormatter(locale, {\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(date),\n      };\n    case 'day':\n      return {\n        label: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short',\n          month: 'short',\n        }).format(date),\n      };\n    case 'week':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          month: 'long',\n          year: 'numeric',\n        }).formatRange(date, endDate as Date),\n      };\n    case 'month':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          year: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'long',\n          year: 'numeric',\n        }).format(date),\n      };\n    case 'year':\n      return {\n        label: getFormatter(locale, {\n          year: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          year: 'numeric',\n        }).format(date),\n      };\n  }\n}\n\nconst getFormatter = memoize(\n  (locale, options: Intl.DateTimeFormatOptions) => {\n    return new DateFormatter(locale, options);\n  },\n  {\n    equals: (a, b) => {\n      return shallowEqual(a, b);\n    },\n    callTimeout: undefined as any,\n  },\n);\n","import {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nconst primaryColor = getBootstrapData().themes.all[0].values['--be-primary'];\nexport const ChartColors = [\n  [\n    `rgb(${primaryColor.replaceAll(' ', ',')})`,\n    `rgba(${primaryColor.replaceAll(' ', ',')},0.2)`,\n  ],\n  ['rgb(255,112,67)', 'rgb(255,112,67,0.2)'],\n  ['rgb(255,167,38)', 'rgb(255,167,38,0.2)'],\n  ['rgb(141,110,99)', 'rgb(141,110,99,0.2)'],\n  ['rgb(102,187,106)', 'rgba(102,187,106,0.2)'],\n  ['rgb(92,107,192)', 'rgb(92,107,192,0.2)'],\n];\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\nimport {useMemo} from 'react';\nimport {formatReportData} from './data/format-report-data';\nimport {useSelectedLocale} from '../i18n/selected-locale';\nimport {ChartData, ChartOptions} from 'chart.js';\nimport {ChartColors} from './chart-colors';\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\nimport clsx from 'clsx';\n\nconst LineChartOptions: ChartOptions<'line'> = {\n  parsing: {\n    xAxisKey: 'label',\n    yAxisKey: 'value',\n  },\n  datasets: {\n    line: {\n      fill: 'origin',\n      tension: 0.1,\n      pointBorderWidth: 4,\n      pointHitRadius: 10,\n    },\n  },\n  plugins: {\n    tooltip: {\n      intersect: false,\n      mode: 'index',\n    },\n  },\n};\n\ninterface LineChartProps extends Omit<BaseChartProps<'line'>, 'type' | 'data'> {\n  data?: ReportMetric<DatasetItem>;\n}\nexport function LineChart({data, className, ...props}: LineChartProps) {\n  const {localeCode} = useSelectedLocale();\n  const formattedData: ChartData<'line', FormattedDatasetItem[]> =\n    useMemo(() => {\n      const formattedData = formatReportData(data, {localeCode});\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n        ...dataset,\n        backgroundColor: ChartColors[i][1],\n        borderColor: ChartColors[i][0],\n        pointBackgroundColor: ChartColors[i][0],\n      }));\n      return formattedData;\n    }, [data, localeCode]);\n\n  return (\n    <BaseChart\n      {...props}\n      className={clsx(className, 'min-w-500')}\n      data={formattedData}\n      type=\"line\"\n      options={LineChartOptions}\n    />\n  );\n}\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {ChartData, ChartOptions} from 'chart.js';\nimport {ChartColors} from './chart-colors';\nimport {useSelectedLocale} from '../i18n/selected-locale';\nimport {useMemo} from 'react';\nimport {formatReportData} from './data/format-report-data';\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\nimport clsx from 'clsx';\n\nconst PolarAreaChartOptions: ChartOptions<'polarArea'> = {\n  parsing: {\n    key: 'value',\n  },\n  plugins: {\n    tooltip: {\n      intersect: true,\n    },\n  },\n};\n\ninterface PolarAreaChartProps\n  extends Omit<BaseChartProps<'polarArea'>, 'type' | 'data'> {\n  data?: ReportMetric<DatasetItem>;\n}\nexport function PolarAreaChart({\n  data,\n  className,\n  ...props\n}: PolarAreaChartProps) {\n  const {localeCode} = useSelectedLocale();\n  const formattedData: ChartData<'polarArea', FormattedDatasetItem[]> =\n    useMemo(() => {\n      const formattedData = formatReportData(data, {localeCode});\n      formattedData.labels = formattedData.datasets[0]?.data.map(d => d.label);\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n        ...dataset,\n        backgroundColor: ChartColors.map(c => c[1]),\n        borderColor: ChartColors.map(c => c[0]),\n        borderWidth: 2,\n      }));\n      return formattedData;\n    }, [data, localeCode]);\n\n  return (\n    <BaseChart\n      type=\"polarArea\"\n      data={formattedData}\n      options={PolarAreaChartOptions}\n      className={clsx(className, 'min-w-500')}\n      {...props}\n    />\n  );\n}\n","import lazyLoader from '../../../utils/http/lazy-loader';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {RefObject, useCallback, useEffect, useRef} from 'react';\nimport {useThemeSelector} from '@common/ui/themes/theme-selector-context';\nimport {themeValueToHex} from '@common/ui/themes/utils/theme-value-to-hex';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {LocationDatasetItem} from '@common/admin/analytics/report-metric';\n\nconst loaderUrl = 'https://www.gstatic.com/charts/loader.js';\n\ninterface UseGoogleGeoChartProps {\n  placeholderRef: RefObject<HTMLDivElement>;\n  data: LocationDatasetItem[];\n  onCountrySelected?: (countryCode: string) => void;\n  country?: string;\n}\nexport function useGoogleGeoChart({\n  placeholderRef,\n  data,\n  country,\n  onCountrySelected,\n}: UseGoogleGeoChartProps) {\n  const {trans} = useTrans();\n  const {analytics} = useSettings();\n  const apiKey = analytics?.gchart_api_key;\n  const {selectedTheme} = useThemeSelector();\n  const geoChartRef = useRef<google.visualization.GeoChart>();\n  // only allow selecting countries, not cities\n  const regionInteractivity = !!onCountrySelected && !country;\n  const drawGoogleChart = useCallback(() => {\n    if (typeof google === 'undefined') return;\n\n    const seedData = data.map(location => [location.label, location.value]);\n    seedData.unshift([\n      country ? trans(message('City')) : trans(message('Country')),\n      trans(message('Clicks')),\n    ]);\n\n    const backgroundColor = `${themeValueToHex(\n      selectedTheme.values['--be-paper'],\n    )}`;\n    const chartColor = `${themeValueToHex(\n      selectedTheme.values['--be-primary'],\n    )}`;\n\n    const options: google.visualization.GeoChartOptions = {\n      colorAxis: {colors: [chartColor]},\n      backgroundColor,\n      region: country ? country.toUpperCase() : undefined,\n      resolution: country ? 'provinces' : 'countries',\n      displayMode: country ? 'markers' : 'regions',\n      enableRegionInteractivity: regionInteractivity,\n    };\n\n    if (\n      !geoChartRef.current &&\n      placeholderRef.current &&\n      google?.visualization?.GeoChart\n    ) {\n      geoChartRef.current = new google.visualization.GeoChart(\n        placeholderRef.current,\n      );\n    }\n    geoChartRef.current?.draw(\n      google.visualization.arrayToDataTable(seedData),\n      options,\n    );\n  }, [\n    selectedTheme,\n    data,\n    placeholderRef,\n    trans,\n    country,\n    regionInteractivity,\n  ]);\n\n  const initGoogleGeoChart = useCallback(async () => {\n    if (lazyLoader.isLoadingOrLoaded(loaderUrl)) return;\n    await lazyLoader.loadAsset(loaderUrl, {type: 'js', id: 'google-charts-js'});\n    await google.charts.load('current', {\n      packages: ['geochart'],\n      mapsApiKey: apiKey,\n    });\n    drawGoogleChart();\n  }, [apiKey, drawGoogleChart]);\n\n  useEffect(() => {\n    if (geoChartRef.current && onCountrySelected) {\n      google.visualization.events.addListener(\n        geoChartRef.current,\n        'regionClick',\n        (a: {region: string}) => onCountrySelected?.(a.region),\n      );\n    }\n\n    return () => {\n      if (geoChartRef.current) {\n        google.visualization.events.removeAllListeners(geoChartRef.current);\n      }\n    };\n    // this will correctly run when geochart instance is set on ref\n  }, [onCountrySelected, geoChartRef.current]);\n\n  // on component load: load chart library then draw, otherwise just draw\n  useEffect(() => {\n    initGoogleGeoChart();\n  }, [initGoogleGeoChart]);\n\n  // redraw chart if data or theme changes\n  useEffect(() => {\n    drawGoogleChart();\n  }, [selectedTheme, drawGoogleChart, data]);\n\n  return {drawGoogleChart};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowBackIcon = createSvgIcon(\n  <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n, 'ArrowBackOutlined');\n","import {IconButton} from '@common/ui/buttons/icon-button';\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport {Dialog, DialogSize} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InfoDialogTriggerProps {\n  title?: ReactNode;\n  body: ReactNode;\n  dialogSize?: DialogSize;\n  className?: string;\n}\nexport function InfoDialogTrigger({\n  title,\n  body,\n  dialogSize = 'sm',\n  className,\n}: InfoDialogTriggerProps) {\n  return (\n    <DialogTrigger type=\"popover\" triggerOnHover>\n      <IconButton\n        className={clsx('text-muted opacity-70', className)}\n        size=\"xs\"\n      >\n        <InfoDialogTriggerIcon viewBox=\"0 0 16 16\" />\n      </IconButton>\n      <Dialog size={dialogSize}>\n        {title && (\n          <DialogHeader padding=\"px-18 pt-12\" size=\"md\" hideDismissButton>\n            {title}\n          </DialogHeader>\n        )}\n        <DialogBody>{body}</DialogBody>\n      </Dialog>\n    </DialogTrigger>\n  );\n}\n","import {useSelectedLocale} from '@common/i18n/selected-locale';\nimport {Fragment, memo} from 'react';\n\ninterface Props {\n  code: string;\n}\nexport const FormattedCountryName = memo(({code: countryCode}: Props) => {\n  const {localeCode} = useSelectedLocale();\n  const regionNames = new Intl.DisplayNames([localeCode], {type: 'region'});\n  let formattedName: string | undefined;\n\n  try {\n    formattedName = regionNames.of(countryCode.toUpperCase());\n  } catch (e) {}\n\n  return <Fragment>{formattedName}</Fragment>;\n});\n","import {\n  LocationDatasetItem,\n  ReportMetric,\n} from '@common/admin/analytics/report-metric';\nimport React, {useMemo, useRef} from 'react';\nimport {useGoogleGeoChart} from './use-google-geo-chart';\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\nimport {Button} from '@common/ui/buttons/button';\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\nimport clsx from 'clsx';\nimport {InfoDialogTrigger} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {FormattedCountryName} from '@common/i18n/formatted-country-name';\n\ninterface GeoChartData extends Partial<ChartLayoutProps> {\n  data?: ReportMetric<LocationDatasetItem>;\n  onCountrySelected?: (countryCode: string | undefined) => void;\n  country?: string;\n}\nexport function GeoChart({\n  data: metricData,\n  isLoading,\n  onCountrySelected,\n  country,\n  ...layoutProps\n}: GeoChartData) {\n  const placeholderRef = useRef<HTMLDivElement>(null);\n  const regionInteractivity = !!onCountrySelected;\n\n  // memo data to avoid redrawing chart on rerender\n  const initialData = metricData?.datasets[0].data;\n  const data = useMemo(() => {\n    return initialData || [];\n  }, [initialData]);\n  useGoogleGeoChart({placeholderRef, data, country, onCountrySelected});\n\n  return (\n    <ChartLayout\n      {...layoutProps}\n      className=\"min-w-500\"\n      title={\n        <div className=\"flex items-center\">\n          <Trans message=\"Top Locations\" />\n          {country ? (\n            <span className=\"pl-4\">\n              ({<FormattedCountryName code={country} />})\n            </span>\n          ) : null}\n          {regionInteractivity && <InfoTrigger />}\n        </div>\n      }\n      contentIsFlex={isLoading}\n    >\n      {isLoading && <ChartLoadingIndicator />}\n      <div className=\"flex gap-24\">\n        <div\n          ref={placeholderRef}\n          className=\"flex-auto w-[480px] min-h-[340px]\"\n        />\n        <div className=\"w-[170px]\">\n          <div className=\"text-sm max-h-[340px] w-full flex-initial overflow-y-auto\">\n            {data.map(location => (\n              <div\n                key={location.label}\n                className={clsx(\n                  'flex items-center gap-4 mb-4',\n                  regionInteractivity && 'cursor-pointer hover:underline'\n                )}\n                role={regionInteractivity ? 'button' : undefined}\n                onClick={() => {\n                  onCountrySelected?.(location.code);\n                }}\n              >\n                <div className=\"max-w-110 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n                  {location.label}\n                </div>\n                <div>({location.percentage})%</div>\n              </div>\n            ))}\n          </div>\n          {country && (\n            <Button\n              variant=\"outline\"\n              size=\"xs\"\n              className=\"mt-14\"\n              startIcon={<ArrowBackIcon />}\n              onClick={() => {\n                onCountrySelected?.(undefined);\n              }}\n            >\n              <Trans message=\"Back to countries\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </ChartLayout>\n  );\n}\n\nfunction InfoTrigger() {\n  return (\n    <InfoDialogTrigger\n      title={<Trans message=\"Zooming in\" />}\n      body={\n        <Trans message=\"Click on a country inside the map or country list to zoom in and see city data for that country.\" />\n      }\n    />\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {apiClient} from '@common/http/query-client';\nimport {\n  DatasetItem,\n  LocationDatasetItem,\n  ReportMetric,\n} from '@common/admin/analytics/report-metric';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {User} from '@common/auth/user';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\n\nconst endpoint = 'reports/insights';\n\nexport interface TopModelDatasetItem extends DatasetItem {\n  model: Artist | Album | Track | User;\n}\n\nexport interface FetchInsightsReportResponse extends BackendResponse {\n  report: {\n    totalClicks: number;\n    plays: ReportMetric;\n    browsers: ReportMetric;\n    locations: ReportMetric<LocationDatasetItem>;\n    devices: ReportMetric;\n    platforms: ReportMetric;\n    tracks: ReportMetric<TopModelDatasetItem>;\n    artists: ReportMetric<TopModelDatasetItem>;\n    albums: ReportMetric<TopModelDatasetItem>;\n    users: ReportMetric<TopModelDatasetItem>;\n  };\n}\n\nexport type InsightsReportMetric =\n  | 'plays'\n  | 'devices'\n  | 'browsers'\n  | 'platforms'\n  | 'locations'\n  | 'tracks'\n  | 'artists'\n  | 'albums'\n  | 'users';\n\ninterface Payload {\n  dateRange: DateRangeValue;\n  model?: string;\n  metrics?: InsightsReportMetric[];\n}\n\ninterface Options {\n  isEnabled: boolean;\n}\n\nexport function useInsightsReport(payload: Payload, options: Options) {\n  return useQuery({\n    queryKey: [endpoint, payload],\n    queryFn: () => fetchReport(endpoint, payload),\n    placeholderData: options.isEnabled ? keepPreviousData : undefined,\n    enabled: options.isEnabled,\n  });\n}\n\nfunction fetchReport<\n  T extends FetchInsightsReportResponse = FetchInsightsReportResponse,\n>(endpoint: string, payload: Payload): Promise<T> {\n  const params: Record<string, any> = {\n    model: payload.model,\n    metrics: payload.metrics?.join(','),\n  };\n  params.startDate = payload.dateRange.start.toAbsoluteString();\n  params.endDate = payload.dateRange.end.toAbsoluteString();\n  params.timezone = payload.dateRange.start.timeZone;\n\n  return apiClient.get(endpoint, {params}).then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const InfoIcon = createSvgIcon(\n  <path d=\"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n, 'InfoOutlined');\n","import {Trans} from '@common/i18n/trans';\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\nimport React, {Fragment, ReactElement} from 'react';\nimport {ReportMetric} from '@common/admin/analytics/report-metric';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\nimport {TopModelDatasetItem} from '@app/admin/reports/requests/use-insights-report';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {InfoIcon} from '@common/icons/material/Info';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {Link, useLocation} from 'react-router-dom';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\n\ninterface Props extends Partial<ChartLayoutProps> {\n  data?: ReportMetric<TopModelDatasetItem>;\n  title: ReactElement;\n}\nexport function TopModelsChartLayout({data, isLoading, ...layoutProps}: Props) {\n  const dataItems = data?.datasets[0].data || [];\n\n  return (\n    <ChartLayout\n      {...layoutProps}\n      className=\"min-w-500 md:min-w-0 w-1/2\"\n      contentIsFlex={isLoading}\n      contentClassName=\"max-h-[370px] overflow-y-auto compact-scrollbar\"\n    >\n      {isLoading && <ChartLoadingIndicator />}\n      {dataItems.map(item => (\n        <div\n          key={item.model.id}\n          className=\"mb-20 text-sm flex items-center justify-between gap-24\"\n        >\n          <div className=\"flex items-center gap-8\">\n            <Image\n              model={item.model}\n              size=\"w-42 h-42\"\n              className=\"rounded flex-shrink-0\"\n            />\n            <div>\n              <div className=\"text-sm\">\n                <Name model={item.model} />\n              </div>\n              <div className=\"text-xs text-muted\">\n                <Description model={item.model} />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-4 flex-shrink-0\">\n            <PlayArrowFilledIcon className=\"text-muted\" size=\"sm\" />\n            <Trans\n              message=\":count plays\"\n              values={{count: <FormattedNumber value={item.value} />}}\n            />\n          </div>\n        </div>\n      ))}\n      {!isLoading && !dataItems.length ? (\n        <div className=\"flex items-center gap-8 text-muted\">\n          <InfoIcon size=\"sm\" />\n          <Trans message=\"No plays in selected timeframe.\" />\n        </div>\n      ) : null}\n    </ChartLayout>\n  );\n}\n\ninterface ImageProps {\n  model: TopModelDatasetItem['model'];\n  size: string;\n  className: string;\n}\nfunction Image({model, size, className}: ImageProps) {\n  const {pathname} = useLocation();\n  const inAdmin = pathname.includes('/admin');\n  const link = inAdmin\n    ? `/admin/${model.model_type}s/${model.id}/insights`\n    : `/backstage/${model.model_type}s/${model.id}/insights`;\n\n  switch (model.model_type) {\n    case 'artist':\n      return (\n        <Link to={link}>\n          <SmallArtistImage artist={model} size={size} className={className} />\n        </Link>\n      );\n    case 'album':\n      return (\n        <Link to={link}>\n          <AlbumImage album={model} size={size} className={className} />\n        </Link>\n      );\n    case 'track':\n      return (\n        <Link to={link}>\n          <TrackImage track={model} size={size} className={className} />\n        </Link>\n      );\n    case 'user':\n      // there's no separate insights page for user\n      return <UserAvatar user={model} size={size} className={className} />;\n  }\n}\n\ninterface NameProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Name({model}: NameProps) {\n  switch (model.model_type) {\n    case 'artist':\n      return <ArtistLink artist={model} target=\"_blank\" />;\n    case 'album':\n      return <AlbumLink album={model} target=\"_blank\" />;\n    case 'track':\n      return <TrackLink track={model} target=\"_blank\" />;\n    case 'user':\n      return model.id ? (\n        <UserProfileLink user={model} target=\"_blank\" />\n      ) : (\n        <Fragment>{model.display_name}</Fragment>\n      );\n  }\n}\n\ninterface DescriptionProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Description({model}: DescriptionProps) {\n  switch (model.model_type) {\n    case 'artist':\n    case 'user':\n      return null;\n    case 'album':\n    case 'track':\n      return <ArtistLinks artists={model.artists} target=\"_blank\" />;\n  }\n}\n","import React, {\n  cloneElement,\n  Fragment,\n  ReactElement,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\nimport {LineChart} from '@common/charts/line-chart';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\nimport {BaseChartProps} from '@common/charts/base-chart';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {\n  FetchInsightsReportResponse,\n  InsightsReportMetric,\n  useInsightsReport,\n} from '@app/admin/reports/requests/use-insights-report';\nimport {TopModelsChartLayout} from '@app/admin/reports/top-models-chart-layout';\n\nexport interface InsightsReportChartsProps {\n  showTracks?: boolean;\n  showArtistsAndAlbums?: boolean;\n  dateRange?: DateRangeValue;\n  model?: string;\n}\nexport function InsightsReportCharts(props: InsightsReportChartsProps) {\n  const colGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\n  const rowClassName = `flex flex-col lg:flex-row lg:items-center overflow-x-auto ${colGap}`;\n\n  // will be set via \"cloneElement\"\n  const model = props.model as string;\n  const dateRange = props.dateRange as DateRangeValue;\n\n  return (\n    <Fragment>\n      <div className={rowClassName}>\n        <AsyncChart metric=\"plays\" model={model} dateRange={dateRange}>\n          {({data}) => (\n            <LineChart\n              className=\"flex-auto\"\n              title={<Trans message=\"Plays\" />}\n              hideLegend\n              description={\n                <Trans\n                  message=\":count total plays\"\n                  values={{\n                    count: (\n                      <FormattedNumber value={data?.report.plays.total || 0} />\n                    ),\n                  }}\n                />\n              }\n            />\n          )}\n        </AsyncChart>\n        <AsyncChart metric=\"devices\" model={model} dateRange={dateRange}>\n          <PolarAreaChart title={<Trans message=\"Top devices\" />} />\n        </AsyncChart>\n      </div>\n      <div className={rowClassName}>\n        {props.showTracks && (\n          <AsyncChart metric=\"tracks\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played tracks\" />}\n            />\n          </AsyncChart>\n        )}\n        <AsyncChart metric=\"users\" model={model} dateRange={dateRange}>\n          <TopModelsChartLayout title={<Trans message=\"Top listeners\" />} />\n        </AsyncChart>\n      </div>\n      {props.showArtistsAndAlbums && (\n        <div className={rowClassName}>\n          <AsyncChart metric=\"artists\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played artists\" />}\n            />\n          </AsyncChart>\n          <AsyncChart metric=\"albums\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played albums\" />}\n            />\n          </AsyncChart>\n        </div>\n      )}\n      <div className={rowClassName}>\n        <AsyncChart metric=\"locations\" model={model} dateRange={dateRange}>\n          <GeoChart className=\"flex-auto w-1/2 lg:max-w-[740px]\" />\n        </AsyncChart>\n        <AsyncChart metric=\"platforms\" model={model} dateRange={dateRange}>\n          <PolarAreaChart\n            className=\"max-w-500\"\n            title={<Trans message=\"Top platforms\" />}\n          />\n        </AsyncChart>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface AsyncChartProps {\n  children:\n    | ReactElement<BaseChartProps>\n    | ((\n        query: UseQueryResult<FetchInsightsReportResponse>\n      ) => ReactElement<BaseChartProps>);\n  metric: InsightsReportMetric;\n  model: string;\n  dateRange: DateRangeValue;\n}\nfunction AsyncChart({children, metric, model, dateRange}: AsyncChartProps) {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const query = useInsightsReport(\n    {metrics: [metric], model, dateRange},\n    {isEnabled}\n  );\n  const chart = typeof children === 'function' ? children(query) : children;\n  const observerRef = useRef<IntersectionObserver>();\n\n  const contentRef = useCallback((el: HTMLDivElement | null) => {\n    if (el) {\n      const observer = new IntersectionObserver(\n        ([e]) => {\n          if (e.isIntersecting) {\n            setIsEnabled(true);\n            observerRef.current?.disconnect();\n            observerRef.current = undefined;\n          }\n        },\n        {threshold: 0.1} // if only header is visible, don't load\n      );\n      observerRef.current = observer;\n      observer.observe(el);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return cloneElement<BaseChartProps>(chart, {\n    data: query.data?.report?.[metric],\n    isLoading: query.isLoading,\n    contentRef,\n  });\n}\n","import {Trans} from '@common/i18n/trans';\nimport React, {cloneElement, Fragment, ReactElement, useState} from 'react';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {InsightsReportChartsProps} from '@app/admin/reports/insights-report-charts';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\n\ninterface Props {\n  children: ReactElement<InsightsReportChartsProps>;\n  reportModel: string;\n  title?: ReactElement;\n  isNested?: boolean;\n}\nexport function BackstageInsightsLayout({\n  children,\n  reportModel,\n  title,\n  isNested,\n}: Props) {\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\n    // This week\n    return DateRangePresets[2].getRangeValue();\n  });\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Insights\" />\n      </StaticPageTitle>\n      <div className=\"h-full flex flex-col\">\n        {!isNested && (\n          <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n        )}\n        <div className=\"overflow-y-auto flex-auto bg-cover relative\">\n          <div className=\"min-h-full p-12 md:p-24 overflow-x-hidden max-w-[1600px] mx-auto flex flex-col\">\n            <div className=\"flex-auto\">\n              <div className=\"md:flex items-center justify-between gap-24 h-48 mt-14 mb-38\">\n                {title ? title : <Skeleton className=\"max-w-320\" />}\n                <div className=\"flex-shrink-0 flex items-center justify-between gap-10 md:gap-24\">\n                  <ReportDateSelector\n                    value={dateRange}\n                    onChange={setDateRange}\n                  />\n                </div>\n              </div>\n              {cloneElement(children, {dateRange, model: reportModel})}\n            </div>\n            {!isNested && <Footer />}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React, {cloneElement, ReactElement} from 'react';\n\ninterface Props {\n  image: ReactElement<{size: string; className: string}>;\n  name: ReactElement;\n  description?: ReactElement;\n}\nexport function BackstageInsightsTitle({image, name, description}: Props) {\n  return (\n    <div className=\"flex items-center gap-10\">\n      {cloneElement(image, {size: 'w-48 h-48', className: 'rounded'})}\n      <div>\n        <h1 className=\"text-base whitespace-nowrap overflow-hidden overflow-ellipsis\">\n          “{name}“ <Trans message=\"insights\" />\n        </h1>\n        {description && <div className=\"text-muted text-sm\">{description}</div>}\n      </div>\n    </div>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useArtist} from '@app/web-player/artists/requests/use-artist';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageArtistInsights({isNested}: Props) {\n  const {artistId} = useParams();\n  const {data} = useArtist({loader: 'artist'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`artist=${artistId}`}\n      title={\n        data?.artist && (\n          <BackstageInsightsTitle\n            image={<SmallArtistImage artist={data.artist} />}\n            name={<ArtistLink artist={data.artist} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageAlbumInsights({isNested}: Props) {\n  const {albumId} = useParams();\n  const {data} = useAlbum({loader: 'album'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`album=${albumId}`}\n      title={\n        data?.album && (\n          <BackstageInsightsTitle\n            image={<AlbumImage album={data.album} />}\n            name={<AlbumLink album={data.album} />}\n            description={<ArtistLinks artists={data.album.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageTrackInsights({isNested}: Props) {\n  const {trackId} = useParams();\n  const {data} = useTrack({loader: 'track'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`track=${trackId}`}\n      title={\n        data?.track && (\n          <BackstageInsightsTitle\n            image={<TrackImage track={data.track} />}\n            name={<TrackLink track={data.track} />}\n            description={<ArtistLinks artists={data.track.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts />\n    </BackstageInsightsLayout>\n  );\n}\n"],"file":"assets/backstage-track-insights-6a8a7ef9.js"}