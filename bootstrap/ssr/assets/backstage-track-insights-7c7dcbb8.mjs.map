{"version":3,"file":"backstage-track-insights-7c7dcbb8.mjs","sources":["../../../common/resources/client/utils/date/start-of-day.ts","../../../common/resources/client/utils/date/end-of-day.ts","../../../common/resources/client/i18n/get-user-timezone.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets.ts","../../../common/resources/client/icons/material/DateRange.tsx","../../../common/resources/client/ui/forms/input-field/input.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/date-picker-field.tsx","../../../common/resources/client/ui/forms/input-field/date/utils.ts","../../../common/resources/client/ui/forms/input-field/date/use-base-date-picker-state.ts","../../../common/resources/client/i18n/use-current-date-time.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state.ts","../../../common/resources/client/icons/material/ArrowRightAlt.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/adjust-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/set-segment.ts","../../../common/resources/client/ui/forms/input-field/date/segments/utils/page-step.ts","../../../common/resources/client/ui/forms/input-field/date/segments/editable-date-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/literal-segment.tsx","../../../common/resources/client/ui/forms/input-field/date/segments/utils/get-segment-limits.ts","../../../common/resources/client/ui/forms/input-field/date/segments/date-segment-list.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-cell.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar-month.tsx","../../../common/resources/client/ui/forms/input-field/date/calendar/calendar.tsx","../../../common/resources/client/i18n/formatted-date-time-range.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets.ts","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list.tsx","../../../common/resources/client/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog.tsx","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/users/queries/use-normalized-models.ts","../../../common/resources/client/users/queries/use-normalized-model.ts","../../../common/resources/client/ui/forms/normalized-model-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/string-to-chip-value.ts","../../../common/resources/client/ui/forms/input-field/chip-field/chip-field.tsx","../../../common/resources/client/ui/forms/input-field/chip-field/form-chip-field.tsx","../../../common/resources/client/ui/forms/input-field/date/date-picker/use-date-picker-state.ts","../../../common/resources/client/ui/forms/input-field/date/date-picker/date-picker.tsx","../../../common/resources/client/icons/material/DragHandle.tsx","../../../common/resources/client/utils/hooks/sticky-sentinel.ts","../../../common/resources/client/admin/crupdate-resource-layout.tsx","../../../resources/client/admin/tracks-datatable-page/music.svg","../../../resources/client/web-player/artists/artist-picker/use-artist-picker-suggestions.ts","../../../resources/client/web-player/artists/artist-picker/form-artist-picker.tsx","../../../common/resources/client/tags/form-normalized-model-chip-field.tsx","../../../common/resources/client/tags/tag.ts","../../../common/resources/client/icons/material/FileUpload.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-status-text.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-upload-progress.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-extract-track-file-metadata.ts","../../../resources/client/web-player/backstage/upload-page/use-track-uploader.ts","../../../resources/client/web-player/backstage/upload-page/use-track-upload.ts","../../../resources/client/admin/tracks-datatable-page/track-form/track-form-upload-button.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/track-form.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-create-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-create-track-form.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/create-track-page.tsx","../../../resources/client/admin/tracks-datatable-page/requests/use-update-track.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/use-update-track-form.ts","../../../resources/client/admin/tracks-datatable-page/crupdate/update-track-page.tsx","../../../resources/client/admin/albums-datatable-page/requests/use-create-album.ts","../../../resources/client/admin/albums-datatable-page/requests/use-update-album.ts","../../../resources/client/admin/tracks-datatable-page/track-form/update-track-dialog.tsx","../../../resources/client/admin/tracks-datatable-page/track-form/create-track-dialog.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-tracks-form.tsx","../../../resources/client/admin/albums-datatable-page/album-form/album-form.tsx","../../../resources/client/admin/albums-datatable-page/update-album-page.tsx","../../../resources/client/web-player/backstage/upload-page/album-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/tracks-uploader.tsx","../../../resources/client/web-player/backstage/upload-page/album-border.png","../../../resources/client/web-player/backstage/upload-page/uploaded-media-preview.tsx","../../../resources/client/web-player/backstage/upload-page/drop-tarket-mask.tsx","../../../resources/client/web-player/backstage/upload-page/use-user-minutes-limit.ts","../../../resources/client/web-player/backstage/images/light-bg.svg","../../../resources/client/web-player/backstage/images/dark-bg.svg","../../../resources/client/web-player/backstage/backstage-layout.tsx","../../../resources/client/web-player/backstage/upload-page/upload-page.tsx","../../../resources/client/admin/albums-datatable-page/create-album-page.tsx","../../../resources/client/web-player/backstage/requests/use-backstage-request.ts","../../../common/resources/client/icons/material/DocumentScanner.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/artist-albums-table.tsx","../../../resources/client/admin/artist-datatable-page/artist-form/crupdate-artist-form.tsx","../../../resources/client/admin/artist-datatable-page/requests/use-update-artist.ts","../../../resources/client/admin/artist-datatable-page/update-artist-page.tsx","../../../common/resources/client/admin/analytics/report-date-selector.tsx","../../../common/resources/client/charts/chart-layout.tsx","../../../common/resources/client/charts/chart-loading-indicator.tsx","../../../common/resources/client/charts/base-chart.tsx","../../../common/resources/client/charts/data/format-report-data.ts","../../../common/resources/client/charts/chart-colors.tsx","../../../common/resources/client/charts/line-chart.tsx","../../../common/resources/client/charts/polar-area-chart.tsx","../../../common/resources/client/admin/analytics/geo-chart/use-google-geo-chart.ts","../../../common/resources/client/icons/material/ArrowBack.tsx","../../../common/resources/client/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger.tsx","../../../common/resources/client/i18n/formatted-country-name.tsx","../../../common/resources/client/admin/analytics/geo-chart/geo-chart.tsx","../../../resources/client/admin/reports/requests/use-insights-report.ts","../../../common/resources/client/icons/material/Info.tsx","../../../resources/client/admin/reports/top-models-chart-layout.tsx","../../../resources/client/admin/reports/insights-report-charts.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-layout.tsx","../../../resources/client/web-player/backstage/insights/backstage-insights-title.tsx","../../../resources/client/web-player/backstage/insights/backstage-artist-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-album-insights.tsx","../../../resources/client/web-player/backstage/insights/backstage-track-insights.tsx"],"sourcesContent":["import {ZonedDateTime} from '@internationalized/date';\n\nexport function startOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({hour: 0, minute: 0, second: 0, millisecond: 0});\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function endOfDay(date: ZonedDateTime): ZonedDateTime {\n  return date.set({\n    hour: 24 - 1,\n    minute: 60 - 1,\n    second: 60 - 1,\n    millisecond: 1000 - 1,\n  });\n}\n","import {getBootstrapData} from '../core/bootstrap-data/use-backend-bootstrap-data';\nimport {getLocalTimeZone} from '@internationalized/date';\n\nexport function getUserTimezone(): string {\n  const defaultTimezone = getBootstrapData()?.settings.dates.default_timezone;\n  const preferredTimezone =\n    getBootstrapData()?.user?.timezone || defaultTimezone || 'auto';\n\n  if (!preferredTimezone || preferredTimezone === 'auto') {\n    return getLocalTimeZone();\n  }\n  return preferredTimezone;\n}\n","import {DateRangeValue} from '../date-range-value';\nimport {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  now,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n} from '@internationalized/date';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {getUserTimezone} from '@common/i18n/get-user-timezone';\n\nconst Now = startOfDay(now(getUserTimezone()));\nconst locale = getBootstrapData()?.i18n?.language || 'en';\n\nexport interface DateRangePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: () => DateRangeValue;\n}\n\nexport const DateRangePresets: DateRangePreset[] = [\n  {\n    key: 0,\n    label: message('Today'),\n    getRangeValue: () => ({\n      preset: 0,\n      start: Now,\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 1,\n    label: message('Yesterday'),\n    getRangeValue: () => ({\n      preset: 1,\n      start: Now.subtract({days: 1}),\n      end: endOfDay(Now).subtract({days: 1}),\n    }),\n  },\n  {\n    key: 2,\n    label: message('This week'),\n    getRangeValue: () => ({\n      preset: 2,\n      start: startOfWeek(Now, locale),\n      end: endOfWeek(endOfDay(Now), locale),\n    }),\n  },\n  {\n    key: 3,\n    label: message('Last week'),\n    getRangeValue: () => {\n      const start = startOfWeek(Now, locale).subtract({days: 7});\n      return {\n        preset: 3,\n        start,\n        end: start.add({days: 6}),\n      };\n    },\n  },\n  {\n    key: 4,\n    label: message('Last 7 days'),\n    getRangeValue: () => ({\n      preset: 4,\n      start: Now.subtract({days: 7}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 6,\n    label: message('Last 30 days'),\n    getRangeValue: () => ({\n      preset: 6,\n      start: Now.subtract({days: 30}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 7,\n    label: message('Last 3 months'),\n    getRangeValue: () => ({\n      preset: 7,\n      start: Now.subtract({months: 3}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 8,\n    label: message('Last 12 months'),\n    getRangeValue: () => ({\n      preset: 8,\n      start: Now.subtract({months: 12}),\n      end: endOfDay(Now),\n    }),\n  },\n  {\n    key: 9,\n    label: message('This month'),\n    getRangeValue: () => ({\n      preset: 9,\n      start: startOfMonth(Now),\n      end: endOfMonth(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 10,\n    label: message('This year'),\n    getRangeValue: () => ({\n      preset: 10,\n      start: startOfYear(Now),\n      end: endOfYear(endOfDay(Now)),\n    }),\n  },\n  {\n    key: 11,\n    label: message('Last year'),\n    getRangeValue: () => ({\n      preset: 11,\n      start: startOfYear(Now).subtract({years: 1}),\n      end: endOfYear(endOfDay(Now)).subtract({years: 1}),\n    }),\n  },\n];\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DateRangeIcon = createSvgIcon(\n  <path d=\"M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z\" />\n, 'DateRangeOutlined');\n","import {FocusScope} from '@react-aria/focus';\nimport React, {ComponentPropsWithoutRef, CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InputProps {\n  className?: string;\n  children: ReactNode;\n  autoFocus?: boolean;\n  disabled?: boolean;\n  style?: CSSProperties;\n  inputProps?: ComponentPropsWithoutRef<'div'>;\n  wrapperProps?: ComponentPropsWithoutRef<'div'>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\nexport const Input = React.forwardRef<HTMLDivElement, InputProps>(\n  (props, ref) => {\n    const {\n      children,\n      inputProps,\n      wrapperProps,\n      className,\n      autoFocus,\n      style,\n      onClick,\n    } = props;\n\n    return (\n      <div {...wrapperProps} onClick={onClick}>\n        <div\n          {...inputProps}\n          role=\"group\"\n          className={clsx(\n            className,\n            'flex items-center focus-within:ring focus-within:ring-primary/focus focus-within:border-primary/60'\n          )}\n          ref={ref}\n          style={style}\n        >\n          <FocusScope autoFocus={autoFocus}>{children}</FocusScope>\n        </div>\n      </div>\n    );\n  }\n);\n","import React, {ComponentPropsWithoutRef, FocusEventHandler, Ref} from 'react';\nimport clsx from 'clsx';\nimport {createFocusManager} from '@react-aria/focus';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {getInputFieldClassNames} from '../../get-input-field-class-names';\nimport {Field, FieldProps} from '../../field';\nimport {Input} from '../../input';\nimport {useField} from '../../use-field';\n\nexport interface DatePickerFieldProps\n  extends Omit<FieldProps, 'fieldClassNames'> {\n  inputRef?: Ref<HTMLDivElement>;\n  onBlur?: FocusEventHandler;\n  showCalendarFooter?: boolean;\n}\nexport const DatePickerField = React.forwardRef<\n  HTMLDivElement,\n  DatePickerFieldProps\n>(({inputRef, wrapperProps, children, onBlur, ...other}, ref) => {\n  const fieldClassNames = getInputFieldClassNames(other);\n  const objRef = useObjectRef(ref);\n\n  const {fieldProps, inputProps} = useField({\n    ...other,\n    focusRef: objRef,\n    labelElementType: 'span',\n  });\n\n  fieldClassNames.wrapper = clsx(\n    fieldClassNames.wrapper,\n    other.disabled && 'pointer-events-none',\n  );\n\n  return (\n    <Field\n      wrapperProps={mergeProps<ComponentPropsWithoutRef<'div'>[]>(\n        wrapperProps!,\n        {\n          onBlur: e => {\n            if (!objRef.current.contains(e.relatedTarget)) {\n              onBlur?.(e);\n            }\n          },\n          onClick: () => {\n            // focus first segment when clicking on label or somewhere else in the field, but no directly on segment\n            const focusManager = createFocusManager(objRef);\n            focusManager?.focusFirst();\n          },\n        },\n      )}\n      fieldClassNames={fieldClassNames}\n      ref={objRef}\n      {...fieldProps}\n    >\n      <Input\n        inputProps={inputProps}\n        className={clsx(fieldClassNames.input, 'gap-10')}\n        ref={inputRef}\n      >\n        {children}\n      </Input>\n    </Field>\n  );\n});\n","import {CalendarDate, DateValue} from '@internationalized/date';\n\nexport function getDefaultGranularity(date: DateValue) {\n  if (date instanceof CalendarDate) {\n    return 'day';\n  }\n  return 'minute';\n}\n\nexport function dateIsInvalid(\n  date: CalendarDate,\n  min?: DateValue,\n  max?: DateValue\n) {\n  return (\n    (min != null && date.compare(min) < 0) ||\n    (max != null && date.compare(max) > 0)\n  );\n}\n","import {useState} from 'react';\nimport {DateValue, toZoned, ZonedDateTime} from '@internationalized/date';\nimport {getDefaultGranularity} from './utils';\nimport type {DatePickerValueProps} from './date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-picker/date-range-value';\nimport {useUserTimezone} from '@common/i18n/use-user-timezone';\n\nexport function useBaseDatePickerState(\n  selectedDate: DateValue,\n  props:\n    | DatePickerValueProps<ZonedDateTime>\n    | DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>\n) {\n  const timezone = useUserTimezone();\n  const [calendarIsOpen, setCalendarIsOpen] = useState(false);\n  const closeDialogOnSelection = props.closeDialogOnSelection ?? true;\n\n  const granularity = props.granularity || getDefaultGranularity(selectedDate);\n  const min = props.min ? toZoned(props.min, timezone) : undefined;\n  const max = props.max ? toZoned(props.max, timezone) : undefined;\n\n  return {\n    timezone,\n    granularity,\n    min,\n    max,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  };\n}\n","import {useMemo} from 'react';\nimport {now} from '@internationalized/date';\nimport {useUserTimezone} from './use-user-timezone';\n\nexport function useCurrentDateTime() {\n  const timezone = useUserTimezone();\n  return useMemo(() => {\n    return now(timezone);\n  }, [timezone]);\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  maxDate,\n  minDate,\n  startOfMonth,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {\n  BaseDatePickerState,\n  DatePickerValueProps,\n} from '../date-picker/use-date-picker-state';\nimport {DateRangeValue} from './date-range-value';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {startOfDay} from '@common/utils/date/start-of-day';\nimport {endOfDay} from '@common/utils/date/end-of-day';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface IsPlaceholderValue {\n  start: boolean;\n  end: boolean;\n}\n\nexport type DateRangePickerState = BaseDatePickerState<\n  DateRangeValue,\n  IsPlaceholderValue\n>;\n\nexport function useDateRangePickerState(\n  props: DatePickerValueProps<Partial<DateRangeValue>, DateRangeValue>,\n): DateRangePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState<IsPlaceholderValue>({\n    start: (!props.value || !props.value.start) && !props.defaultValue?.start,\n    end: (!props.value || !props.value.end) && !props.defaultValue?.end,\n  });\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value ? completeRange(props.value, now) : undefined,\n    !props.value ? completeRange(props.defaultValue, now) : undefined,\n    value => {\n      setIsPlaceholder({start: false, end: false});\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue.start, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder({start: true, end: true});\n    setInternalValue(completeRange(null, now));\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [anchorDate, setAnchorDate] = useState<CalendarDate | null>(null);\n  const [isHighlighting, setIsHighlighting] = useState(false);\n  const [highlightedRange, setHighlightedRange] =\n    useState<DateRangeValue>(internalValue);\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return rangeToCalendarDates(internalValue, max);\n  });\n\n  const constrainRange = useCallback(\n    (range: DateRangeValue): DateRangeValue => {\n      let start = range.start;\n      let end = range.end;\n\n      // make sure start date is after min date and before max date/range end\n      if (min) {\n        start = maxDate(start, min);\n      }\n      const startMax = max ? minDate(max, end) : end;\n      start = minDate(start, startMax);\n\n      // make sure end date is after min date/range start and before max date\n      const endMin = min ? maxDate(min, start) : start;\n      end = maxDate(end, endMin);\n\n      if (max) {\n        end = minDate(end, max);\n      }\n\n      return {start: toZoned(start, timezone), end: toZoned(end, timezone)};\n    },\n    [min, max, timezone],\n  );\n\n  const setSelectedValue = useCallback(\n    (newRange: DateRangeValue) => {\n      const value = {\n        ...constrainRange(newRange),\n        preset: newRange.preset,\n      };\n      setInternalValue(value);\n      setHighlightedRange(value);\n      setCalendarDates(rangeToCalendarDates(value, max));\n      setIsPlaceholder({start: false, end: false});\n    },\n    [setInternalValue, constrainRange, max],\n  );\n\n  const dayIsActive = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (!isPlaceholder.start && isSameDay(day, highlightedRange.start)) ||\n        (!isPlaceholder.end && isSameDay(day, highlightedRange.end))\n      );\n    },\n    [highlightedRange, isPlaceholder],\n  );\n\n  const dayIsHighlighted = useCallback(\n    (day: CalendarDate) => {\n      return (\n        (isHighlighting || (!isPlaceholder.start && !isPlaceholder.end)) &&\n        day.compare(highlightedRange.start) >= 0 &&\n        day.compare(highlightedRange.end) <= 0\n      );\n    },\n    [highlightedRange, isPlaceholder, isHighlighting],\n  );\n\n  const dayIsRangeStart = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.start),\n    [highlightedRange],\n  );\n\n  const dayIsRangeEnd = useCallback(\n    (day: CalendarDate) => isSameDay(day, highlightedRange.end),\n    [highlightedRange],\n  );\n\n  const getCellProps = useCallback(\n    (date: CalendarDate, isSameMonth: boolean): HTMLAttributes<HTMLElement> => {\n      return {\n        onPointerEnter: () => {\n          if (isHighlighting && isSameMonth) {\n            setHighlightedRange(\n              makeRange({start: anchorDate!, end: date, timezone}),\n            );\n          }\n        },\n        onClick: () => {\n          if (!isHighlighting) {\n            setIsHighlighting(true);\n            setAnchorDate(date);\n            setHighlightedRange(makeRange({start: date, end: date, timezone}));\n          } else {\n            const finalRange = makeRange({\n              start: anchorDate!,\n              end: date,\n              timezone,\n            });\n            // cast to start and end of day after making range, because \"makeRange\"\n            // will flip start and end dates, if they are out of order\n            finalRange.start = startOfDay(finalRange.start);\n            finalRange.end = endOfDay(finalRange.end);\n            setIsHighlighting(false);\n            setAnchorDate(null);\n            setSelectedValue?.(finalRange);\n            if (closeDialogOnSelection) {\n              setCalendarIsOpen?.(false);\n            }\n          }\n        },\n      };\n    },\n    [\n      anchorDate,\n      isHighlighting,\n      setSelectedValue,\n      setCalendarIsOpen,\n      closeDialogOnSelection,\n      timezone,\n    ],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    calendarDates,\n    setIsPlaceholder,\n    isPlaceholder,\n    clear,\n    setCalendarDates,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n\nfunction rangeToCalendarDates(\n  range: DateRangeValue,\n  max?: DateValue,\n): CalendarDate[] {\n  let start = toCalendarDate(startOfMonth(range.start));\n  let end = toCalendarDate(endOfMonth(range.end));\n\n  // make sure we don't show the same month twice\n  if (isSameMonth(start, end)) {\n    end = endOfMonth(end.add({months: 1}));\n  }\n\n  // if next month is disabled, show previous instead\n  if (max && end.compare(max) > 0) {\n    end = start;\n    start = startOfMonth(start.subtract({months: 1}));\n  }\n  return [start, end];\n}\n\ninterface MakeRangeProps {\n  start: DateValue;\n  end: DateValue;\n  timezone: string;\n}\nfunction makeRange(props: MakeRangeProps): DateRangeValue {\n  const start = toZoned(props.start, props.timezone);\n  const end = toZoned(props.end, props.timezone);\n  if (start.compare(end) > 0) {\n    return {start: end, end: start};\n  }\n  return {start, end};\n}\n\nfunction completeRange(\n  range: Partial<DateRangeValue> | null | undefined,\n  now: ZonedDateTime,\n): DateRangeValue {\n  if (range?.start && range?.end) {\n    return range as DateRangeValue;\n  } else if (!range?.start && range?.end) {\n    range.start = range.end.subtract({months: 1});\n    return range as DateRangeValue;\n  } else if (!range?.end && range?.start) {\n    range.end = range.start.add({months: 1});\n    return range as DateRangeValue;\n  }\n  return {start: now, end: now.add({months: 1})};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowRightAltIcon = createSvgIcon(\n  <path d=\"M16.01 11H4v2h12.01v3L20 12l-3.99-4v3z\" />\n, 'ArrowRightAltOutlined');\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function adjustSegment(\n  value: ZonedDateTime,\n  part: string,\n  amount: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      return value.cycle(part, amount, {round: part === 'year'});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const isPM = hours >= 12;\n        return value.set({hour: isPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n      case 'minute':\n      case 'second':\n        return value.cycle(part, amount, {\n          round: part !== 'hour',\n          hourCycle: options.hour12 ? 12 : 24,\n        });\n    }\n  }\n\n  return value;\n}\n","import {ZonedDateTime} from '@internationalized/date';\n\nexport function setSegment(\n  value: ZonedDateTime,\n  part: string,\n  segmentValue: number,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (part) {\n    case 'day':\n    case 'month':\n    case 'year':\n      return value.set({[part]: segmentValue});\n  }\n\n  if ('hour' in value) {\n    switch (part) {\n      case 'dayPeriod': {\n        const hours = value.hour;\n        const wasPM = hours >= 12;\n        const isPM = segmentValue >= 12;\n        if (isPM === wasPM) {\n          return value;\n        }\n        return value.set({hour: wasPM ? hours - 12 : hours + 12});\n      }\n      case 'hour':\n        // In 12 hour time, ensure that AM/PM does not change\n        if (options.hour12) {\n          const hours = value.hour;\n          const wasPM = hours >= 12;\n          if (!wasPM && segmentValue === 12) {\n            segmentValue = 0;\n          }\n          if (wasPM && segmentValue < 12) {\n            segmentValue += 12;\n          }\n        }\n      // fallthrough\n      case 'minute':\n      case 'second':\n        return value.set({[part]: segmentValue});\n    }\n  }\n\n  return value;\n}\n","export const PAGE_STEP = {\n  year: 5,\n  month: 2,\n  day: 7,\n  hour: 2,\n  minute: 15,\n  second: 15,\n  dayPeriod: 1,\n};\n","import {useFocusManager} from '@react-aria/focus';\nimport React, {\n  ComponentPropsWithoutRef,\n  HTMLAttributes,\n  KeyboardEventHandler,\n  useMemo,\n  useRef,\n} from 'react';\nimport {NumberParser} from '@internationalized/number';\nimport {mergeProps} from '@react-aria/utils';\nimport {today, ZonedDateTime} from '@internationalized/date';\nimport {useSelectedLocale} from '@common/i18n/selected-locale';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {adjustSegment} from './utils/adjust-segment';\nimport {setSegment} from './utils/set-segment';\nimport {PAGE_STEP} from './utils/page-step';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\nexport interface EditableSegment {\n  type: 'day' | 'dayPeriod' | 'hour' | 'minute' | 'month' | 'second' | 'year';\n  text: string;\n  value: number;\n  minValue: number;\n  maxValue: number;\n  minLength: number;\n}\n\ninterface DatePickerSegmentProps {\n  segment: EditableSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function EditableDateSegment({\n  segment,\n  domProps,\n  value,\n  onChange,\n  isPlaceholder,\n  state: {timezone, calendarIsOpen, setCalendarIsOpen},\n}: DatePickerSegmentProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const enteredKeys = useRef('');\n  const {localeCode} = useSelectedLocale();\n  const focusManager = useFocusManager();\n  const formatter = useDateFormatter({timeZone: timezone});\n  const parser = useMemo(\n    () => new NumberParser(localeCode, {maximumFractionDigits: 0}),\n    [localeCode],\n  );\n\n  const setSegmentValue = (newValue: number) => {\n    onChange(\n      setSegment(value, segment.type, newValue, formatter.resolvedOptions()),\n    );\n  };\n\n  const adjustSegmentValue = (amount: number) => {\n    onChange(\n      adjustSegment(value, segment.type, amount, formatter.resolvedOptions()),\n    );\n  };\n\n  const backspace = () => {\n    if (parser.isValidPartialNumber(segment.text)) {\n      const newValue = segment.text.slice(0, -1);\n      const parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        const now = today(timezone);\n        if (segment.type in now) {\n          // @ts-ignore\n          setSegmentValue(now[segment.type]);\n        }\n      } else {\n        setSegmentValue(parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      adjustSegmentValue(-1);\n    }\n  };\n\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    // Navigation between date segments and deletion\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        focusManager?.focusNext();\n        break;\n      case 'Enter':\n        (e.target as HTMLElement).closest('form')?.requestSubmit();\n        setCalendarIsOpen(!calendarIsOpen);\n        break;\n      case 'Tab':\n        break;\n      case 'Backspace':\n      case 'Delete': {\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n\n      // Spinbutton incrementing/decrementing\n      case 'ArrowUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(1);\n        break;\n      case 'ArrowDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-1);\n        break;\n      case 'PageUp':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(PAGE_STEP[segment.type] || 1);\n        break;\n      case 'PageDown':\n        e.preventDefault();\n        enteredKeys.current = '';\n        adjustSegmentValue(-(PAGE_STEP[segment.type] || 1));\n        break;\n      case 'Home':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.maxValue);\n        break;\n      case 'End':\n        e.preventDefault();\n        enteredKeys.current = '';\n        setSegmentValue(segment.minValue);\n        break;\n    }\n\n    onInput(e.key);\n  };\n\n  const amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  const am = useMemo(() => {\n    const amDate = new Date();\n    amDate.setHours(0);\n    return amPmFormatter\n      .formatToParts(amDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n  const pm = useMemo(() => {\n    const pmDate = new Date();\n    pmDate.setHours(12);\n    return amPmFormatter\n      .formatToParts(pmDate)\n      .find(part => part.type === 'dayPeriod')!.value;\n  }, [amPmFormatter]);\n\n  // Update date values on user keyboard input\n  const onInput = (key: string) => {\n    const newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (am.toLowerCase().startsWith(key)) {\n          setSegmentValue(0);\n        } else if (pm.toLowerCase().startsWith(key)) {\n          setSegmentValue(12);\n        } else {\n          break;\n        }\n        focusManager?.focusNext();\n        break;\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && formatter.resolvedOptions().hour12) {\n          switch (formatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (Number.isNaN(numberValue)) {\n          return;\n        }\n\n        const shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          setSegmentValue(segmentValue);\n        }\n\n        if (\n          Number(`${numberValue}0`) > segment.maxValue ||\n          newValue.length >= String(segment.maxValue).length\n        ) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager?.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  const spinButtonProps: HTMLAttributes<HTMLDivElement> = isMobile\n    ? {}\n    : {\n        'aria-label': segment.type,\n        'aria-valuetext': isPlaceholder ? undefined : `${segment.value}`,\n        'aria-valuemin': segment.minValue,\n        'aria-valuemax': segment.maxValue,\n        'aria-valuenow': isPlaceholder ? undefined : segment.value,\n        tabIndex: 0,\n        onKeyDown,\n      };\n\n  return (\n    <div\n      {...mergeProps(domProps!, {\n        ...spinButtonProps,\n        onFocus: e => {\n          enteredKeys.current = '';\n          e.target.scrollIntoView({block: 'nearest'});\n        },\n        onClick: e => {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n      } as HTMLAttributes<HTMLDivElement>)}\n      className=\"box-content cursor-default select-none whitespace-nowrap rounded p-2 text-center tabular-nums caret-transparent outline-none focus:bg-primary focus:text-on-primary\"\n    >\n      {segment.text.padStart(segment.minLength, '0')}\n    </div>\n  );\n}\n","import {useFocusManager} from '@react-aria/focus';\nimport {ComponentPropsWithoutRef} from 'react';\n\nexport interface LiteralSegment {\n  type: 'literal';\n  minLength: 1;\n  text: string;\n}\n\ninterface LiteralSegmentProps extends ComponentPropsWithoutRef<'div'> {\n  segment: LiteralSegment;\n  domProps?: ComponentPropsWithoutRef<'div'>;\n}\nexport function LiteralDateSegment({segment, domProps}: LiteralSegmentProps) {\n  const focusManager = useFocusManager();\n  return (\n    <div\n      {...domProps}\n      onPointerDown={e => {\n        if (e.pointerType === 'mouse') {\n          e.preventDefault();\n          const res = focusManager?.focusNext({from: e.target as HTMLElement});\n          if (!res) {\n            focusManager?.focusPrevious({from: e.target as HTMLElement});\n          }\n        }\n      }}\n      aria-hidden\n      className=\"min-w-4 cursor-default select-none\"\n    >\n      {segment.text}\n    </div>\n  );\n}\n","import {\n  DateValue,\n  getMinimumDayInMonth,\n  getMinimumMonthInYear,\n} from '@internationalized/date';\n\nexport function getSegmentLimits(\n  date: DateValue,\n  type: string,\n  options: Intl.ResolvedDateTimeFormatOptions\n) {\n  switch (type) {\n    case 'year':\n      return {\n        value: date.year,\n        placeholder: 'yyyy',\n        minValue: 1,\n        maxValue: date.calendar.getYearsInEra(date),\n      };\n    case 'month':\n      return {\n        value: date.month,\n        placeholder: 'mm',\n        minValue: getMinimumMonthInYear(date),\n        maxValue: date.calendar.getMonthsInYear(date),\n      };\n    case 'day':\n      return {\n        value: date.day,\n        minValue: getMinimumDayInMonth(date),\n        maxValue: date.calendar.getDaysInMonth(date),\n        placeholder: 'dd',\n      };\n  }\n\n  if ('hour' in date) {\n    switch (type) {\n      case 'dayPeriod':\n        return {\n          value: date.hour >= 12 ? 12 : 0,\n          minValue: 0,\n          maxValue: 12,\n          placeholder: '--',\n        };\n      case 'hour':\n        if (options.hour12) {\n          const isPM = date.hour >= 12;\n          return {\n            value: date.hour,\n            minValue: isPM ? 12 : 0,\n            maxValue: isPM ? 23 : 11,\n            placeholder: '--',\n          };\n        }\n\n        return {\n          value: date.hour,\n          minValue: 0,\n          maxValue: 23,\n          placeholder: '--',\n        };\n      case 'minute':\n        return {\n          value: date.minute,\n          minValue: 0,\n          maxValue: 59,\n          placeholder: '--',\n        };\n    }\n  }\n\n  return {};\n}\n","import React, {ComponentPropsWithoutRef, useMemo} from 'react';\nimport {ZonedDateTime} from '@internationalized/date';\nimport {EditableDateSegment, EditableSegment} from './editable-date-segment';\nimport {LiteralDateSegment, LiteralSegment} from './literal-segment';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {getSegmentLimits} from './utils/get-segment-limits';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface DateSegmentListProps {\n  segmentProps?: ComponentPropsWithoutRef<'div'>;\n  state: DatePickerState | DateRangePickerState;\n  value: ZonedDateTime;\n  onChange: (newValue: ZonedDateTime) => void;\n  isPlaceholder?: boolean;\n}\nexport function DateSegmentList({\n  segmentProps,\n  state,\n  value,\n  onChange,\n  isPlaceholder,\n}: DateSegmentListProps) {\n  const {granularity} = state;\n  const options = useMemo(() => {\n    const memoOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    if (granularity === 'minute') {\n      memoOptions.hour = 'numeric';\n      memoOptions.minute = 'numeric';\n    }\n    return memoOptions;\n  }, [granularity]);\n\n  const formatter = useDateFormatter(options);\n\n  const dateValue = useMemo(() => value.toDate(), [value]);\n  const segments = useMemo(() => {\n    return formatter.formatToParts(dateValue).map(segment => {\n      const limits = getSegmentLimits(\n        value,\n        segment.type,\n        formatter.resolvedOptions(),\n      );\n      const textValue =\n        isPlaceholder && segment.type !== 'literal'\n          ? limits.placeholder\n          : segment.value;\n      return {\n        type: segment.type,\n        text: segment.value === ', ' ? ' ' : textValue,\n        ...limits,\n        minLength:\n          segment.type !== 'literal' ? String(limits.maxValue).length : 1,\n      } as LiteralSegment | EditableSegment;\n    });\n  }, [dateValue, formatter, isPlaceholder, value]);\n\n  return (\n    <div className=\"flex items-center\">\n      {segments.map((segment, index) => {\n        if (segment.type === 'literal') {\n          return (\n            <LiteralDateSegment\n              domProps={segmentProps}\n              key={index}\n              segment={segment}\n            />\n          );\n        }\n        return (\n          <EditableDateSegment\n            isPlaceholder={isPlaceholder}\n            domProps={segmentProps}\n            state={state}\n            value={value}\n            onChange={onChange}\n            segment={segment}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {\n  CalendarDate,\n  DateValue,\n  getDayOfWeek,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarCellProps {\n  date: CalendarDate;\n  currentMonth: DateValue;\n  state: DatePickerState | DateRangePickerState;\n}\nexport function CalendarCell({\n  date,\n  currentMonth,\n  state: {\n    dayIsActive,\n    dayIsHighlighted,\n    dayIsRangeStart,\n    dayIsRangeEnd,\n    getCellProps,\n    timezone,\n    min,\n    max,\n  },\n}: CalendarCellProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayOfWeek = getDayOfWeek(date, localeCode);\n  const isActive = dayIsActive(date);\n  const isHighlighted = dayIsHighlighted(date);\n  const isRangeStart = dayIsRangeStart(date);\n  const isRangeEnd = dayIsRangeEnd(date);\n  const dayIsToday = isToday(date, timezone);\n  const sameMonth = isSameMonth(date, currentMonth);\n  const isDisabled = dateIsInvalid(date, min, max);\n\n  return (\n    <div\n      role=\"button\"\n      aria-disabled={isDisabled}\n      className={clsx(\n        'w-40 h-40 text-sm relative isolate flex-shrink-0',\n        isDisabled && 'text-disabled pointer-events-none',\n        !sameMonth && 'invisible pointer-events-none'\n      )}\n      {...getCellProps(date, sameMonth)}\n    >\n      <span\n        className={clsx(\n          'absolute inset-0 flex items-center justify-center rounded-full w-full h-full select-none z-10 cursor-pointer',\n          !isActive && !dayIsToday && 'hover:bg-hover',\n          isActive && 'bg-primary text-on-primary font-semibold',\n          dayIsToday && !isActive && 'bg-chip'\n        )}\n      >\n        {date.day}\n      </span>\n      {isHighlighted && sameMonth && (\n        <span\n          className={clsx(\n            'absolute w-full h-full inset-0 bg-primary/focus',\n            (isRangeStart || dayOfWeek === 0 || date.day === 1) &&\n              'rounded-l-full',\n            (isRangeEnd ||\n              dayOfWeek === 6 ||\n              date.day ===\n                currentMonth.calendar.getDaysInMonth(currentMonth)) &&\n              'rounded-r-full'\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {\n  CalendarDate,\n  endOfMonth,\n  getWeeksInMonth,\n  startOfMonth,\n  startOfWeek,\n} from '@internationalized/date';\nimport {KeyboardArrowLeftIcon} from '../../../../../icons/material/KeyboardArrowLeft';\nimport {IconButton} from '../../../../buttons/icon-button';\nimport {KeyboardArrowRightIcon} from '../../../../../icons/material/KeyboardArrowRight';\nimport {CalendarCell} from './calendar-cell';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {useDateFormatter} from '../../../../../i18n/use-date-formatter';\nimport {useSelectedLocale} from '../../../../../i18n/selected-locale';\nimport {dateIsInvalid} from '../utils';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\nexport interface CalendarMonthProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nexport function CalendarMonth({\n  startDate,\n  state,\n  isFirst,\n  isLast,\n}: CalendarMonthProps) {\n  const {localeCode} = useSelectedLocale();\n  const weeksInMonth = getWeeksInMonth(startDate, localeCode);\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"w-280 flex-shrink-0\">\n      <CalendarMonthHeader\n        isFirst={isFirst}\n        isLast={isLast}\n        state={state}\n        currentMonth={startDate}\n      />\n      <div className=\"block\" role=\"grid\">\n        <WeekdayHeader state={state} startDate={startDate} />\n        {[...new Array(weeksInMonth).keys()].map(weekIndex => (\n          <m.div className=\"flex mb-6\" key={weekIndex}>\n            {[...new Array(7).keys()].map(dayIndex => (\n              <CalendarCell\n                key={dayIndex}\n                date={monthStart.add({weeks: weekIndex, days: dayIndex})}\n                currentMonth={startDate}\n                state={state}\n              />\n            ))}\n          </m.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface CalendarMonthHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  currentMonth: CalendarDate;\n  isFirst: boolean;\n  isLast: boolean;\n}\nfunction CalendarMonthHeader({\n  currentMonth,\n  isFirst,\n  isLast,\n  state: {calendarDates, setCalendarDates, timezone, min, max},\n}: CalendarMonthHeaderProps) {\n  const shiftCalendars = (direction: 'forward' | 'backward') => {\n    const count = calendarDates.length;\n    let newDates: CalendarDate[];\n    if (direction === 'forward') {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.add({months: count}))\n      );\n    } else {\n      newDates = calendarDates.map(date =>\n        endOfMonth(date.subtract({months: count}))\n      );\n    }\n    setCalendarDates(newDates);\n  };\n\n  const monthFormatter = useDateFormatter({\n    month: 'long',\n    year: 'numeric',\n    era: currentMonth.calendar.identifier !== 'gregory' ? 'long' : undefined,\n    calendar: currentMonth.calendar.identifier,\n  });\n\n  const isBackwardDisabled = dateIsInvalid(\n    currentMonth.subtract({days: 1}),\n    min,\n    max\n  );\n  const isForwardDisabled = dateIsInvalid(\n    startOfMonth(currentMonth.add({months: 1})),\n    min,\n    max\n  );\n\n  return (\n    <div className=\"flex items-center justify-between gap-10\">\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isFirst && 'invisible')}\n        disabled={!isFirst || isBackwardDisabled}\n        aria-hidden={!isFirst}\n        onClick={() => {\n          shiftCalendars('backward');\n        }}\n      >\n        <KeyboardArrowLeftIcon />\n      </IconButton>\n      <div className=\"text-sm font-semibold select-none\">\n        {monthFormatter.format(currentMonth.toDate(timezone))}\n      </div>\n      <IconButton\n        size=\"md\"\n        className={clsx('text-muted', !isLast && 'invisible')}\n        disabled={!isLast || isForwardDisabled}\n        aria-hidden={!isLast}\n        onClick={() => {\n          shiftCalendars('forward');\n        }}\n      >\n        <KeyboardArrowRightIcon />\n      </IconButton>\n    </div>\n  );\n}\n\ninterface WeekdayHeaderProps {\n  state: DatePickerState | DateRangePickerState;\n  startDate: CalendarDate;\n}\nfunction WeekdayHeader({state: {timezone}, startDate}: WeekdayHeaderProps) {\n  const {localeCode} = useSelectedLocale();\n  const dayFormatter = useDateFormatter({weekday: 'short'});\n\n  const monthStart = startOfWeek(startDate, localeCode);\n\n  return (\n    <div className=\"flex\">\n      {[...new Array(7).keys()].map(index => {\n        const date = monthStart.add({days: index});\n        const dateDay = date.toDate(timezone);\n        const weekday = dayFormatter.format(dateDay);\n        return (\n          <div\n            className=\"w-40 h-40 text-sm font-semibold relative flex-shrink-0\"\n            key={index}\n          >\n            <div className=\"absolute flex items-center justify-center w-full h-full select-none\">\n              {weekday}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {startOfMonth, toCalendarDate} from '@internationalized/date';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {CalendarMonth} from './calendar-month';\nimport {DatePickerState} from '../date-picker/use-date-picker-state';\nimport {DateRangePickerState} from '../date-range-picker/use-date-range-picker-state';\n\ninterface CalendarProps {\n  state: DatePickerState | DateRangePickerState;\n  visibleMonths?: 1 | 2;\n}\nexport function Calendar({state, visibleMonths = 1}: CalendarProps) {\n  const isMobile = useIsMobileMediaQuery();\n\n  if (isMobile) {\n    visibleMonths = 1;\n  }\n\n  return (\n    <Fragment>\n      {[...new Array(visibleMonths).keys()].map(index => {\n        const startDate = toCalendarDate(\n          startOfMonth(state.calendarDates[index])\n        );\n        const isFirst = index === 0;\n        const isLast = index === visibleMonths - 1;\n        return (\n          <CalendarMonth\n            key={index}\n            state={state}\n            startDate={startDate}\n            isFirst={isFirst}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Fragment>\n  );\n}\n","import {DateValue, parseAbsolute} from '@internationalized/date';\nimport {Fragment, memo} from 'react';\nimport {useDateFormatter} from './use-date-formatter';\nimport {useSettings} from '../core/settings/use-settings';\nimport {shallowEqual} from '../utils/shallow-equal';\nimport {useUserTimezone} from './use-user-timezone';\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\n\ninterface FormattedDateTimeRangeProps {\n  start?: string | DateValue | Date;\n  end?: string | DateValue | Date;\n  options?: Intl.DateTimeFormatOptions;\n  preset?: keyof typeof DateFormatPresets;\n}\nexport const FormattedDateTimeRange = memo(\n  ({start, end, options, preset}: FormattedDateTimeRangeProps) => {\n    const {dates} = useSettings();\n    const timezone = useUserTimezone();\n    const formatter = useDateFormatter(\n      options ||\n        (DateFormatPresets as Record<string, Intl.DateTimeFormatOptions>)[\n          preset || dates?.format\n        ]\n    );\n\n    if (!start || !end) {\n      return null;\n    }\n\n    let value: string;\n\n    try {\n      value = formatter.formatRange(\n        castToDate(start, timezone),\n        castToDate(end, timezone)\n      );\n    } catch (e) {\n      value = '';\n    }\n\n    return <Fragment>{value}</Fragment>;\n  },\n  shallowEqual\n);\n\nfunction castToDate(date: string | DateValue | Date, timezone: string): Date {\n  if (typeof date === 'string') {\n    return parseAbsolute(date, timezone).toDate();\n  }\n  if ('toDate' in date) {\n    return date.toDate(timezone);\n  }\n  return date;\n}\n","import {List, ListItem} from '@common/ui/list/list';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\n\ninterface DateRangePresetList {\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DatePresetList({\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue();\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import {message} from '@common/i18n/message';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport interface DateRangeComparePreset {\n  key: number;\n  label: MessageDescriptor;\n  getRangeValue: (range: DateRangeValue) => DateRangeValue;\n}\n\nexport const DateRangeComparePresets: DateRangeComparePreset[] = [\n  {\n    key: 0,\n    label: message('Preceding period'),\n    getRangeValue: (range: DateRangeValue) => {\n      const startDate = range.start;\n      const endDate = range.end;\n\n      const diffInMilliseconds =\n        endDate.toDate().getTime() - startDate.toDate().getTime();\n      const diffInMinutes = diffInMilliseconds / (1000 * 60);\n      const newStart = startDate.subtract({minutes: diffInMinutes});\n      return {\n        preset: 0,\n        start: newStart,\n        end: startDate,\n      };\n    },\n  },\n  {\n    key: 1,\n    label: message('Same period last year'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({years: 1}),\n        end: range.end.subtract({years: 1}),\n        preset: 1,\n      };\n    },\n  },\n  {\n    key: 2,\n    label: message('Custom'),\n    getRangeValue: (range: DateRangeValue) => {\n      return {\n        start: range.start.subtract({weeks: 1}),\n        end: range.end.subtract({weeks: 1}),\n        preset: 2,\n      };\n    },\n  },\n];\n","import {List, ListItem} from '@common/ui/list/list';\nimport {Trans} from '@common/i18n/trans';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\n\ninterface DateRangePresetList {\n  originalRangeValue: DateRangeValue;\n  onPresetSelected: (value: DateRangeValue) => void;\n  selectedValue?: DateRangeValue | null;\n}\nexport function DateRangeComparePresetList({\n  originalRangeValue,\n  onPresetSelected,\n  selectedValue,\n}: DateRangePresetList) {\n  return (\n    <List>\n      {DateRangeComparePresets.map(preset => (\n        <ListItem\n          borderRadius=\"rounded-none\"\n          capitalizeFirst\n          key={preset.key}\n          isSelected={selectedValue?.preset === preset.key}\n          onSelected={() => {\n            const newValue = preset.getRangeValue(originalRangeValue);\n            onPresetSelected(newValue);\n          }}\n        >\n          <Trans {...preset.label} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React, {Fragment, ReactNode, useRef, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {DatePickerField} from '../date-picker-field';\nimport {DateRangePickerState} from '../use-date-range-picker-state';\nimport {Calendar} from '../../calendar/calendar';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {ArrowRightAltIcon} from '@common/icons/material/ArrowRightAlt';\nimport {DateSegmentList} from '../../segments/date-segment-list';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {DatePresetList} from './date-range-preset-list';\nimport {useIsTabletMediaQuery} from '@common/utils/hooks/is-tablet-media-query';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {DateRangeComparePresetList} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-preset-list';\n\ninterface DateRangeDialogProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  compareVisibleDefault?: boolean;\n  showInlineDatePickerField?: boolean;\n}\nexport function DateRangeDialog({\n  state,\n  compareState,\n  showInlineDatePickerField = false,\n  compareVisibleDefault = false,\n}: DateRangeDialogProps) {\n  const isTablet = useIsTabletMediaQuery();\n  const {close} = useDialogContext();\n  const initialStateRef = useRef<DateRangePickerState>(state);\n  const hasPlaceholder = state.isPlaceholder.start || state.isPlaceholder.end;\n  const [compareVisible, setCompareVisible] = useState(compareVisibleDefault);\n\n  const footer = (\n    <DialogFooter\n      dividerTop\n      startAction={\n        !hasPlaceholder && !isTablet ? (\n          <div className=\"text-xs\">\n            <FormattedDateTimeRange\n              start={state.selectedValue.start.toDate()}\n              end={state.selectedValue.end.toDate()}\n              options={{dateStyle: 'medium'}}\n            />\n          </div>\n        ) : undefined\n      }\n    >\n      <Button\n        variant=\"text\"\n        size=\"xs\"\n        onClick={() => {\n          state.setSelectedValue(initialStateRef.current.selectedValue);\n          state.setIsPlaceholder(initialStateRef.current.isPlaceholder);\n          close();\n        }}\n      >\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button\n        variant=\"flat\"\n        color=\"primary\"\n        size=\"xs\"\n        onClick={() => {\n          const value = state.selectedValue;\n          if (compareState && compareVisible) {\n            value.compareStart = compareState.selectedValue.start;\n            value.compareEnd = compareState.selectedValue.end;\n          }\n          close(value);\n        }}\n      >\n        <Trans message=\"Select\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  return (\n    <Dialog size=\"auto\">\n      <DialogBody className=\"flex\" padding=\"p-0\">\n        {!isTablet && (\n          <div className=\"min-w-192 py-14\">\n            <DatePresetList\n              selectedValue={state.selectedValue}\n              onPresetSelected={preset => {\n                state.setSelectedValue(preset);\n                if (state.closeDialogOnSelection) {\n                  close(preset);\n                }\n              }}\n            />\n            {!!compareState && (\n              <Fragment>\n                <Switch\n                  className=\"mx-20 mb-10 mt-14\"\n                  checked={compareVisible}\n                  onChange={e => setCompareVisible(e.target.checked)}\n                >\n                  <Trans message=\"Compare\" />\n                </Switch>\n                {compareVisible && (\n                  <DateRangeComparePresetList\n                    originalRangeValue={state.selectedValue}\n                    selectedValue={compareState.selectedValue}\n                    onPresetSelected={preset => {\n                      compareState.setSelectedValue(preset);\n                    }}\n                  />\n                )}\n              </Fragment>\n            )}\n          </div>\n        )}\n        <AnimatePresence initial={false}>\n          <Calendars\n            state={state}\n            compareState={compareState}\n            showInlineDatePickerField={showInlineDatePickerField}\n            compareVisible={compareVisible}\n          />\n        </AnimatePresence>\n      </DialogBody>\n      {!state.closeDialogOnSelection && footer}\n    </Dialog>\n  );\n}\n\ninterface CustomRangePanelProps {\n  state: DateRangePickerState;\n  compareState?: DateRangePickerState;\n  showInlineDatePickerField?: boolean;\n  compareVisible: boolean;\n}\nfunction Calendars({\n  state,\n  compareState,\n  showInlineDatePickerField,\n  compareVisible,\n}: CustomRangePanelProps) {\n  return (\n    <m.div\n      initial={{width: 0, overflow: 'hidden'}}\n      animate={{width: 'auto'}}\n      exit={{width: 0, overflow: 'hidden'}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"border-l px-20 pb-20 pt-10\"\n    >\n      {showInlineDatePickerField && (\n        <div>\n          <InlineDatePickerField state={state} />\n          {!!compareState && compareVisible && (\n            <InlineDatePickerField\n              state={compareState}\n              label={<Trans message=\"Compare\" />}\n            />\n          )}\n        </div>\n      )}\n      <div className=\"flex items-start gap-36\">\n        <Calendar state={state} visibleMonths={2} />\n      </div>\n    </m.div>\n  );\n}\n\ninterface InlineDatePickerFieldProps {\n  state: DateRangePickerState;\n  label?: ReactNode;\n}\nfunction InlineDatePickerField({state, label}: InlineDatePickerFieldProps) {\n  const {selectedValue, setSelectedValue} = state;\n  return (\n    <DatePickerField className=\"mb-20 mt-10\" label={label}>\n      <DateSegmentList\n        state={state}\n        value={selectedValue.start}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, start: newValue});\n        }}\n      />\n      <ArrowRightAltIcon className=\"block flex-shrink-0 text-muted\" size=\"md\" />\n      <DateSegmentList\n        state={state}\n        value={selectedValue.end}\n        onChange={newValue => {\n          setSelectedValue({...selectedValue, end: newValue});\n        }}\n      />\n    </DatePickerField>\n  );\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface GetDatatableDataParams {\n  orderBy?: string;\n  orderDir?: 'asc' | 'desc';\n  filters?: string | null;\n  query?: string;\n  with?: string;\n  perPage?: number | string | null;\n  page?: number | string;\n  [key: string]: string | number | boolean | undefined | null;\n}\n\nexport const DatatableDataQueryKey = (\n  endpoint: string,\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\n) => {\n  // split endpoint by slash, so we can clear cache from the root later,\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\n  if (params) {\n    key.push(params);\n  }\n  return key;\n};\n\nexport function useDatatableData<T = object>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  options?: Omit<\n    UseQueryOptions<\n      PaginatedBackendResponse<T>,\n      unknown,\n      PaginatedBackendResponse<T>,\n      any[]\n    >,\n    'queryKey' | 'queryFn'\n  >,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n) {\n  return useQuery({\n    queryKey: DatatableDataQueryKey(endpoint, params),\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\n    placeholderData: keepPreviousData,\n    ...options,\n  });\n}\n\nasync function paginate<T>(\n  endpoint: string,\n  params: GetDatatableDataParams,\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\n  signal?: AbortSignal,\n): Promise<PaginatedBackendResponse<T>> {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  const response = await apiClient\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\n    .then(response => response.data);\n  onLoad?.(response);\n  return response;\n}\n","import {\n  keepPreviousData,\n  useQuery,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n  with?: string;\n}\n\nexport function useNormalizedModels(\n  endpoint: string,\n  queryParams: Params,\n  queryOptions?: Omit<\n    UseQueryOptions<Response, unknown, Response, [string, Params]>,\n    'queryKey' | 'queryFn'\n  > | null,\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModels(endpoint, queryParams),\n    placeholderData: keepPreviousData,\n    ...queryOptions,\n  });\n}\n\nasync function fetchModels(endpoint: string, params: Params) {\n  return apiClient.get<Response>(endpoint, {params}).then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {NormalizedModel} from '../../datatable/filters/normalized-model';\nimport {apiClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  model: NormalizedModel;\n}\n\nexport function useNormalizedModel(\n  endpoint: string,\n  queryParams?: Record<string, string>,\n  queryOptions?: {enabled?: boolean},\n) {\n  return useQuery({\n    queryKey: [endpoint, queryParams],\n    queryFn: () => fetchModel(endpoint, queryParams),\n    ...queryOptions,\n  });\n}\n\nasync function fetchModel(\n  endpoint: string,\n  params?: Record<string, string>,\n): Promise<Response> {\n  return apiClient.get(endpoint, {params}).then(r => r.data);\n}\n","import React, {ReactNode, useRef, useState} from 'react';\nimport {useTrans} from '../../i18n/use-trans';\nimport {Trans} from '../../i18n/trans';\nimport {Avatar} from '../images/avatar';\nimport {Tooltip} from '../tooltip/tooltip';\nimport {IconButton} from '../buttons/icon-button';\nimport {EditIcon} from '../../icons/material/Edit';\nimport {message} from '../../i18n/message';\nimport {Item} from './listbox/item';\nimport {useController, useFormContext} from 'react-hook-form';\nimport {useControlledState} from '@react-stately/utils';\nimport {getInputFieldClassNames} from './input-field/get-input-field-class-names';\nimport clsx from 'clsx';\nimport {Skeleton} from '../skeleton/skeleton';\nimport {useNormalizedModels} from '../../users/queries/use-normalized-models';\nimport {useNormalizedModel} from '../../users/queries/use-normalized-model';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {opacityAnimation} from '../animation/opacity-animation';\nimport {Select} from '@common/ui/forms/select/select';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {BaseFieldProps} from '@common/ui/forms/input-field/base-field-props';\n\ninterface NormalizedModelFieldProps {\n  label?: ReactNode;\n  className?: string;\n  background?: BaseFieldProps['background'];\n  value?: string | number;\n  placeholder?: MessageDescriptor;\n  searchPlaceholder?: MessageDescriptor;\n  defaultValue?: string | number;\n  onChange?: (value: string | number) => void;\n  invalid?: boolean;\n  errorMessage?: string;\n  description?: ReactNode;\n  autoFocus?: boolean;\n  queryParams?: Record<string, string>;\n  endpoint: string;\n  disabled?: boolean;\n  required?: boolean;\n}\nexport function NormalizedModelField({\n  label,\n  className,\n  background,\n  value,\n  defaultValue = '',\n  placeholder = message('Select item...'),\n  searchPlaceholder = message('Find an item...'),\n  onChange,\n  description,\n  errorMessage,\n  invalid,\n  autoFocus,\n  queryParams,\n  endpoint,\n  disabled,\n  required,\n}: NormalizedModelFieldProps) {\n  const inputRef = useRef<HTMLButtonElement>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedValue, setSelectedValue] = useControlledState(\n    value,\n    defaultValue,\n    onChange,\n  );\n  const query = useNormalizedModels(endpoint, {\n    query: inputValue,\n    ...queryParams,\n  });\n  const {trans} = useTrans();\n\n  const fieldClassNames = getInputFieldClassNames({size: 'md'});\n\n  if (selectedValue) {\n    return (\n      <div className={className}>\n        <div className={fieldClassNames.label}>{label}</div>\n        <div\n          className={clsx(\n            'rounded-input border p-8',\n            background,\n            invalid && 'border-danger',\n          )}\n        >\n          <AnimatePresence initial={false} mode=\"wait\">\n            <SelectedModelPreview\n              disabled={disabled}\n              endpoint={endpoint}\n              modelId={selectedValue}\n              queryParams={queryParams}\n              onEditClick={() => {\n                setSelectedValue('');\n                setInputValue('');\n                requestAnimationFrame(() => {\n                  inputRef.current?.focus();\n                  inputRef.current?.click();\n                });\n              }}\n            />\n          </AnimatePresence>\n        </div>\n        {description && !errorMessage && (\n          <div className={fieldClassNames.description}>{description}</div>\n        )}\n        {errorMessage && (\n          <div className={fieldClassNames.error}>{errorMessage}</div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Select\n      className={className}\n      showSearchField\n      invalid={invalid}\n      errorMessage={errorMessage}\n      description={description}\n      color=\"white\"\n      isAsync\n      background={background}\n      placeholder={trans(placeholder)}\n      searchPlaceholder={trans(searchPlaceholder)}\n      label={label}\n      isLoading={query.isFetching}\n      items={query.data?.results}\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      selectionMode=\"single\"\n      selectedValue={selectedValue}\n      onSelectionChange={setSelectedValue}\n      ref={inputRef}\n      autoFocus={autoFocus}\n      disabled={disabled}\n      required={required}\n    >\n      {model => (\n        <Item\n          value={model.id}\n          key={model.id}\n          description={model.description}\n          startIcon={<Avatar src={model.image} />}\n        >\n          {model.name}\n        </Item>\n      )}\n    </Select>\n  );\n}\n\ninterface SelectedModelPreviewProps {\n  modelId: string | number;\n  selectedValue?: number | string;\n  onEditClick?: () => void;\n  endpoint?: string;\n  disabled?: boolean;\n  queryParams?: NormalizedModelFieldProps['queryParams'];\n}\nfunction SelectedModelPreview({\n  modelId,\n  onEditClick,\n  endpoint,\n  disabled,\n  queryParams,\n}: SelectedModelPreviewProps) {\n  const {data, isLoading} = useNormalizedModel(\n    `${endpoint}/${modelId}`,\n    queryParams,\n  );\n\n  if (isLoading || !data?.model) {\n    return <LoadingSkeleton key=\"skeleton\" />;\n  }\n\n  return (\n    <m.div\n      className={clsx(\n        'flex items-center gap-10',\n        disabled && 'pointer-events-none cursor-not-allowed text-disabled',\n      )}\n      key=\"preview\"\n      {...opacityAnimation}\n    >\n      {data.model.image && <Avatar src={data.model.image} />}\n      <div>\n        <div className=\"text-sm leading-4\">{data.model.name}</div>\n        <div className=\"text-xs text-muted\">{data.model.description}</div>\n      </div>\n      <Tooltip label={<Trans message=\"Change item\" />}>\n        <IconButton\n          className=\"ml-auto text-muted\"\n          size=\"sm\"\n          onClick={onEditClick}\n          disabled={disabled}\n        >\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n    </m.div>\n  );\n}\n\nfunction LoadingSkeleton() {\n  return (\n    <m.div className=\"flex items-center gap-10\" {...opacityAnimation}>\n      <Skeleton variant=\"rect\" size=\"w-32 h-32\" />\n      <div className=\"max-h-[36px] flex-auto\">\n        <Skeleton className=\"text-xs\" />\n        <Skeleton className=\"max-h-8 text-xs\" />\n      </div>\n      <Skeleton variant=\"icon\" size=\"w-24 h-24\" />\n    </m.div>\n  );\n}\n\ninterface FormNormalizedModelFieldProps extends NormalizedModelFieldProps {\n  name: string;\n}\nexport function FormNormalizedModelField({\n  name,\n  ...fieldProps\n}: FormNormalizedModelFieldProps) {\n  const {clearErrors} = useFormContext();\n  const {\n    field: {onChange, value = ''},\n    fieldState: {invalid, error},\n  } = useController({\n    name,\n  });\n\n  return (\n    <NormalizedModelField\n      value={value}\n      onChange={value => {\n        onChange(value);\n        clearErrors(name);\n      }}\n      invalid={invalid}\n      errorMessage={error?.message}\n      {...fieldProps}\n    />\n  );\n}\n","import {ChipValue} from './chip-field';\n\nexport function stringToChipValue(value: string | number): ChipValue {\n  // add both name and description so \"validateWith\" works properly in chip field, if it depends on description\n  return {id: value, name: `${value}`, description: `${value}`};\n}\n","import React, {\n  HTMLAttributes,\n  Key,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport clsx from 'clsx';\nimport {mergeProps, useLayoutEffect, useObjectRef} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport {ChipList} from './chip-list';\nimport {Field, FieldProps} from '../field';\nimport {Input} from '../input';\nimport {Chip, ChipProps} from './chip';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {getInputFieldClassNames} from '../get-input-field-class-names';\nimport {ProgressCircle} from '../../../progress/progress-circle';\nimport {useField} from '../use-field';\nimport {Avatar} from '../../../images/avatar';\nimport {Listbox} from '../../listbox/listbox';\nimport {useListbox} from '../../listbox/use-listbox';\nimport {BaseFieldPropsWithDom} from '../base-field-props';\nimport {useListboxKeyboardNavigation} from '../../listbox/use-listbox-keyboard-navigation';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {ListBoxChildren, ListboxProps} from '../../listbox/types';\nimport {stringToChipValue} from './string-to-chip-value';\nimport {Popover} from '../../../overlays/popover';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\n\nexport interface ChipValue extends Omit<NormalizedModel, 'model_type'> {\n  invalid?: boolean;\n  errorMessage?: string;\n}\n\nexport type ChipFieldProps<T> = Omit<\n  ListboxProps,\n  'selectionMode' | 'displayWith'\n> &\n  Omit<\n    BaseFieldPropsWithDom<HTMLInputElement>,\n    'value' | 'onChange' | 'defaultValue'\n  > & {\n    value?: (ChipValue | string)[];\n    defaultValue?: (ChipValue | string)[];\n    displayWith?: (value: ChipValue) => ReactNode;\n    validateWith?: (value: ChipValue) => ChipValue;\n    allowCustomValue?: boolean;\n    showDropdownArrow?: boolean;\n    onChange?: (value: ChipValue[]) => void;\n    suggestions?: T[];\n    children?: ListBoxChildren<T>['children'];\n    placeholder?: string;\n    chipSize?: ChipProps['size'];\n    openMenuOnFocus?: boolean;\n    valueKey?: 'id' | 'name';\n    onChipClick?: (value: ChipValue) => void;\n  };\n\nfunction ChipFieldInner<T>(\n  props: ChipFieldProps<T>,\n  ref: Ref<HTMLInputElement>,\n) {\n  const fieldRef = useRef<HTMLDivElement>(null);\n  const inputRef = useObjectRef(ref);\n  const {\n    displayWith = v => v.name,\n    validateWith,\n    children,\n    suggestions,\n    isLoading,\n    inputValue,\n    onInputValueChange,\n    onItemSelected,\n    placeholder,\n    onOpenChange,\n    chipSize = 'sm',\n    openMenuOnFocus = true,\n    showEmptyMessage,\n    value: propsValue,\n    defaultValue,\n    onChange: propsOnChange,\n    valueKey,\n    isAsync,\n    allowCustomValue = true,\n    showDropdownArrow,\n    onChipClick,\n    ...inputFieldProps\n  } = props;\n  const fieldClassNames = getInputFieldClassNames({\n    ...props,\n    flexibleHeight: true,\n  });\n\n  const [value, onChange] = useChipFieldValueState(props);\n\n  const [listboxIsOpen, setListboxIsOpen] = useState(false);\n\n  const loadingIndicator = (\n    <ProgressCircle isIndeterminate size=\"sm\" aria-label=\"loading...\" />\n  );\n\n  const dropdownArrow = showDropdownArrow ? <KeyboardArrowDownIcon /> : null;\n\n  const {fieldProps, inputProps} = useField({\n    ...inputFieldProps,\n    focusRef: inputRef,\n    endAdornment: isLoading && listboxIsOpen ? loadingIndicator : dropdownArrow,\n  });\n\n  return (\n    <Field fieldClassNames={fieldClassNames} {...fieldProps}>\n      <Input\n        ref={fieldRef}\n        className={clsx('flex flex-wrap items-center', fieldClassNames.input)}\n        onClick={() => {\n          // refocus input when clicking outside it, but while still inside chip field\n          inputRef.current?.focus();\n        }}\n      >\n        <ListWrapper\n          displayChipUsing={displayWith}\n          onChipClick={onChipClick}\n          items={value}\n          setItems={onChange}\n          chipSize={chipSize}\n        />\n        <ChipInput\n          size={props.size}\n          showEmptyMessage={showEmptyMessage}\n          inputProps={inputProps}\n          inputValue={inputValue}\n          onInputValueChange={onInputValueChange}\n          fieldRef={fieldRef}\n          inputRef={inputRef}\n          chips={value}\n          setChips={onChange}\n          validateWith={validateWith}\n          isLoading={isLoading}\n          suggestions={suggestions}\n          placeholder={placeholder}\n          openMenuOnFocus={openMenuOnFocus}\n          listboxIsOpen={listboxIsOpen}\n          setListboxIsOpen={setListboxIsOpen}\n          allowCustomValue={allowCustomValue}\n        >\n          {children}\n        </ChipInput>\n      </Input>\n    </Field>\n  );\n}\n\ninterface ListWrapperProps {\n  items: ChipValue[];\n  setItems: (items: ChipValue[]) => void;\n  displayChipUsing: (value: ChipValue) => ReactNode;\n  chipSize?: ChipProps['size'];\n  onChipClick?: (value: ChipValue) => void;\n}\nfunction ListWrapper({\n  items,\n  setItems,\n  displayChipUsing,\n  chipSize,\n  onChipClick,\n}: ListWrapperProps) {\n  const manager = useFocusManager();\n  const removeItem = useCallback(\n    (key: Key) => {\n      const i = items.findIndex(cr => cr.id === key);\n      const newItems = [...items];\n      if (i > -1) {\n        newItems.splice(i, 1);\n        setItems(newItems);\n      }\n      return newItems;\n    },\n    [items, setItems],\n  );\n\n  return (\n    <ChipList\n      className={clsx(\n        'max-w-full flex-shrink-0 flex-wrap',\n        chipSize === 'xs' ? 'my-6' : 'my-8',\n      )}\n      size={chipSize}\n      selectable\n    >\n      {items.map(item => (\n        <Chip\n          key={item.id}\n          errorMessage={item.errorMessage}\n          adornment={item.image ? <Avatar circle src={item.image} /> : null}\n          onClick={() => onChipClick?.(item)}\n          onRemove={() => {\n            const newItems = removeItem(item.id);\n            if (newItems.length) {\n              // focus previous chip\n              manager?.focusPrevious({tabbable: true});\n            } else {\n              // focus input\n              manager?.focusLast();\n            }\n          }}\n        >\n          {displayChipUsing(item)}\n        </Chip>\n      ))}\n    </ChipList>\n  );\n}\n\ninterface ChipInputProps<T> {\n  showEmptyMessage?: boolean;\n  inputProps: ReturnType<typeof useField>['inputProps'];\n  inputValue?: string;\n  onInputValueChange?: (value: string) => void;\n  fieldRef: RefObject<HTMLDivElement>;\n  inputRef: RefObject<HTMLInputElement>;\n  chips: ChipValue[];\n  setChips: (items: ChipValue[]) => void;\n  validateWith?: (value: ChipValue) => ChipValue;\n  isLoading?: boolean;\n  suggestions?: T[];\n  placeholder?: string;\n  openMenuOnFocus?: boolean;\n  listboxIsOpen: boolean;\n  setListboxIsOpen: (value: boolean) => void;\n  allowCustomValue: boolean;\n  children: ListBoxChildren<T>['children'];\n  size: FieldProps['size'];\n}\nfunction ChipInput<T>(props: ChipInputProps<T>) {\n  const {\n    inputRef,\n    fieldRef,\n    validateWith,\n    setChips,\n    chips,\n    suggestions,\n    inputProps,\n    placeholder,\n    openMenuOnFocus,\n    listboxIsOpen,\n    setListboxIsOpen,\n    allowCustomValue,\n    isLoading,\n    size,\n  } = props;\n  const manager = useFocusManager();\n\n  const addItems = useCallback(\n    (items?: ChipValue[]) => {\n      items = (items || []).filter(item => {\n        const invalid = !item || !item.id || !item.name;\n        const alreadyExists = chips.findIndex(cr => cr.id === item?.id) > -1;\n        return !alreadyExists && !invalid;\n      });\n      if (!items.length) return;\n\n      if (validateWith) {\n        items = items.map(item => validateWith(item));\n      }\n      setChips([...chips, ...items]);\n    },\n    [chips, setChips, validateWith],\n  );\n\n  const listbox = useListbox<T>({\n    ...props,\n    clearInputOnItemSelection: true,\n    isOpen: listboxIsOpen,\n    onOpenChange: setListboxIsOpen,\n    items: suggestions,\n    selectionMode: 'none',\n    role: 'listbox',\n    virtualFocus: true,\n    onItemSelected: value => {\n      handleItemSelection(value as string);\n    },\n  });\n\n  const {\n    state: {\n      activeIndex,\n      setActiveIndex,\n      isOpen,\n      setIsOpen,\n      inputValue,\n      setInputValue,\n    },\n    refs,\n    listboxId,\n    collection,\n    onInputChange,\n  } = listbox;\n\n  const handleItemSelection = (textValue: string) => {\n    const option =\n      collection.size && activeIndex != null\n        ? [...collection.values()][activeIndex]\n        : null;\n    if (option?.item) {\n      addItems([option.item]);\n    } else if (allowCustomValue) {\n      addItems([stringToChipValue(option ? option.value : textValue)]);\n    }\n\n    setInputValue('');\n    setActiveIndex(null);\n    setIsOpen(false);\n  };\n\n  // position dropdown relative to whole chip field, not the input\n  useLayoutEffect(() => {\n    if (fieldRef.current && refs.reference.current !== fieldRef.current) {\n      listbox.reference(fieldRef.current);\n    }\n  }, [fieldRef, listbox, refs]);\n\n  const {handleTriggerKeyDown, handleListboxKeyboardNavigation} =\n    useListboxKeyboardNavigation(listbox);\n\n  const handleFocusAndClick = createEventHandler(() => {\n    if (openMenuOnFocus && !isOpen) {\n      setIsOpen(true);\n    }\n  });\n\n  return (\n    <Listbox\n      listbox={listbox}\n      mobileOverlay={Popover}\n      isLoading={isLoading}\n      onPointerDown={e => {\n        // prevent focus from leaving input when scrolling listbox via mouse\n        e.preventDefault();\n      }}\n    >\n      <input\n        type=\"text\"\n        className={clsx(\n          'mx-8 my-4 min-w-30 flex-[1_1_60px] bg-transparent text-sm outline-none',\n          size === 'xs' ? 'h-20' : 'h-30',\n        )}\n        placeholder={placeholder}\n        {...mergeProps(inputProps, {\n          ref: inputRef,\n          value: inputValue,\n          onChange: onInputChange,\n          onPaste: e => {\n            const paste = e.clipboardData.getData('text');\n            const emails = paste.match(\n              /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi,\n            );\n            if (emails) {\n              e.preventDefault();\n              const selection = window.getSelection();\n              if (selection?.rangeCount) {\n                selection.deleteFromDocument();\n                addItems(emails.map(email => stringToChipValue(email)));\n              }\n            }\n          },\n          'aria-autocomplete': 'list',\n          'aria-controls': isOpen ? listboxId : undefined,\n          autoComplete: 'off',\n          autoCorrect: 'off',\n          spellCheck: 'false',\n          onKeyDown: e => {\n            const input = e.target as HTMLInputElement;\n\n            if (e.key === 'Enter') {\n              // prevent form submitting\n              e.preventDefault();\n              // add chip from selected listbox option or current input text value\n              handleItemSelection(input.value);\n              return;\n            }\n\n            // on escape, clear input and close dropdown\n            if (e.key === 'Escape' && isOpen) {\n              setIsOpen(false);\n              setInputValue('');\n            }\n\n            // move focus to input when focus is on first item and prevent arrow up from cycling listbox\n            if (\n              e.key === 'ArrowUp' &&\n              isOpen &&\n              (activeIndex === 0 || activeIndex == null)\n            ) {\n              setActiveIndex(null);\n              return;\n            }\n\n            // block left and right arrows from navigating in input, if focus is on listbox\n            if (\n              activeIndex != null &&\n              (e.key === 'ArrowLeft' || e.key === 'ArrowRight')\n            ) {\n              e.preventDefault();\n              return;\n            }\n\n            // move focus on the last chip, if focus is at the  start of input\n            if (\n              (e.key === 'ArrowLeft' ||\n                e.key === 'Backspace' ||\n                e.key === 'Delete') &&\n              input.selectionStart === 0 &&\n              activeIndex == null &&\n              chips.length\n            ) {\n              manager?.focusPrevious({tabbable: true});\n              return;\n            }\n\n            // fallthrough to listbox navigation handlers for arrow keys\n            const handled = handleTriggerKeyDown(e);\n            if (!handled) {\n              handleListboxKeyboardNavigation(e);\n            }\n          },\n          onFocus: handleFocusAndClick,\n          onClick: handleFocusAndClick,\n        } as HTMLAttributes<HTMLInputElement>)}\n      />\n    </Listbox>\n  );\n}\n\nfunction useChipFieldValueState({\n  onChange,\n  value,\n  defaultValue,\n  valueKey,\n}: ChipFieldProps<any>) {\n  // convert value from string[] to ChipValue[], if needed\n  const propsValue = useMemo(() => {\n    return mixedValueToChipValue(value);\n  }, [value]);\n\n  // convert defaultValue from string[] to ChipValue[], if needed\n  const propsDefaultValue = useMemo(() => {\n    return mixedValueToChipValue(defaultValue);\n  }, [defaultValue]);\n\n  // emit string[] or ChipValue[] on change, based on \"valueKey\" prop\n  const handleChange = useCallback(\n    (value: ChipValue[]) => {\n      const newValue = valueKey ? value.map(v => v[valueKey]) : value;\n      onChange?.(newValue as any);\n    },\n    [onChange, valueKey],\n  );\n\n  return useControlledState<ChipValue[]>(\n    !propsValue ? undefined : propsValue,\n    propsDefaultValue || [],\n    handleChange,\n  );\n}\n\nfunction mixedValueToChipValue(\n  value?: (string | number | ChipValue)[] | null,\n): ChipValue[] | undefined {\n  if (value == null) {\n    return undefined;\n  }\n\n  return value.map(v => {\n    return typeof v !== 'object' ? stringToChipValue(v as string) : v;\n  });\n}\n\nexport const ChipField = React.forwardRef(ChipFieldInner) as <T>(\n  props: ChipFieldProps<T> & {ref?: Ref<HTMLInputElement>},\n) => ReactElement;\n","import {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport React from 'react';\nimport {ChipField, ChipFieldProps} from './chip-field';\n\nexport type FormChipFieldProps<T> = ChipFieldProps<T> & {\n  name: string;\n};\n\nexport function FormChipField<T>({children, ...props}: FormChipFieldProps<T>) {\n  const {\n    field: {onChange, onBlur, value = [], ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n  });\n\n  const formProps: Partial<ChipFieldProps<T>> = {\n    onChange,\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message,\n  };\n\n  return (\n    <ChipField ref={ref} {...mergeProps(formProps, props)}>\n      {children}\n    </ChipField>\n  );\n}\n","import {useControlledState} from '@react-stately/utils';\nimport {HTMLAttributes, useCallback, useState} from 'react';\nimport {\n  CalendarDate,\n  DateValue,\n  isSameDay,\n  toCalendarDate,\n  toZoned,\n  ZonedDateTime,\n} from '@internationalized/date';\nimport {useBaseDatePickerState} from '../use-base-date-picker-state';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport type Granularity = 'day' | 'minute';\n\nexport type DatePickerState = BaseDatePickerState;\n\nexport interface BaseDatePickerState<T = ZonedDateTime, P = boolean> {\n  timezone: string;\n  granularity: Granularity;\n  selectedValue: T;\n  setSelectedValue: (value: T) => void;\n  calendarIsOpen: boolean;\n  setCalendarIsOpen: (isOpen: boolean) => void;\n  calendarDates: CalendarDate[];\n  setCalendarDates: (dates: CalendarDate[]) => void;\n  dayIsActive: (day: CalendarDate) => boolean;\n  dayIsHighlighted: (day: CalendarDate) => boolean;\n  dayIsRangeStart: (day: CalendarDate) => boolean;\n  dayIsRangeEnd: (day: CalendarDate) => boolean;\n  isPlaceholder: P;\n  setIsPlaceholder: (value: P) => void;\n  clear: () => void;\n  min?: ZonedDateTime;\n  max?: ZonedDateTime;\n  closeDialogOnSelection: boolean;\n  getCellProps: (\n    date: CalendarDate,\n    isSameMonth: boolean,\n  ) => HTMLAttributes<HTMLElement>;\n}\n\nexport interface DatePickerValueProps<V, CV = V> {\n  value?: V | null | '';\n  defaultValue?: V | null;\n  onChange?: (value: CV | null) => void;\n  min?: DateValue;\n  max?: DateValue;\n  granularity?: Granularity;\n  closeDialogOnSelection?: boolean;\n}\nexport function useDatePickerState(\n  props: DatePickerValueProps<ZonedDateTime>,\n): BaseDatePickerState {\n  const now = useCurrentDateTime();\n  const [isPlaceholder, setIsPlaceholder] = useState(\n    !props.value && !props.defaultValue,\n  );\n\n  // if user clears the date, we will want to still keep an\n  // instance internally, but return null via \"onChange\" callback\n  const setStateValue = props.onChange;\n  const [internalValue, setInternalValue] = useControlledState(\n    props.value || now,\n    props.defaultValue || now,\n    value => {\n      setIsPlaceholder(false);\n      setStateValue?.(value);\n    },\n  );\n\n  const {\n    min,\n    max,\n    granularity,\n    timezone,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    closeDialogOnSelection,\n  } = useBaseDatePickerState(internalValue, props);\n\n  const clear = useCallback(() => {\n    setIsPlaceholder(true);\n    setInternalValue(now);\n    setStateValue?.(null);\n    setCalendarIsOpen(false);\n  }, [now, setInternalValue, setStateValue, setCalendarIsOpen]);\n\n  const [calendarDates, setCalendarDates] = useState<CalendarDate[]>(() => {\n    return [toCalendarDate(internalValue)];\n  });\n\n  const setSelectedValue = useCallback(\n    (newValue: DateValue) => {\n      if (min && newValue.compare(min) < 0) {\n        newValue = min;\n      } else if (max && newValue.compare(max) > 0) {\n        newValue = max;\n      }\n\n      // preserve time\n      const value = internalValue\n        ? internalValue.set(newValue)\n        : toZoned(newValue, timezone);\n      setInternalValue(value);\n      setCalendarDates([toCalendarDate(value)]);\n      setIsPlaceholder(false);\n    },\n    [setInternalValue, min, max, internalValue, timezone],\n  );\n\n  const dayIsActive = useCallback(\n    (day: DateValue) => !isPlaceholder && isSameDay(internalValue, day),\n    [internalValue, isPlaceholder],\n  );\n\n  const getCellProps = useCallback(\n    (date: DateValue): HTMLAttributes<HTMLElement> => {\n      return {\n        onClick: () => {\n          setSelectedValue?.(date);\n          if (closeDialogOnSelection) {\n            setCalendarIsOpen?.(false);\n          }\n        },\n      };\n    },\n    [setSelectedValue, setCalendarIsOpen, closeDialogOnSelection],\n  );\n\n  return {\n    selectedValue: internalValue,\n    setSelectedValue: setInternalValue,\n    calendarIsOpen,\n    setCalendarIsOpen,\n    dayIsActive,\n    dayIsHighlighted: () => false,\n    dayIsRangeStart: () => false,\n    dayIsRangeEnd: () => false,\n    getCellProps,\n    calendarDates,\n    setCalendarDates,\n    isPlaceholder,\n    clear,\n    setIsPlaceholder,\n    min,\n    max,\n    granularity,\n    timezone,\n    closeDialogOnSelection,\n  };\n}\n","import React, {\n  ComponentPropsWithoutRef,\n  Fragment,\n  MouseEvent,\n  useRef,\n} from 'react';\nimport {parseAbsoluteToLocal, ZonedDateTime} from '@internationalized/date';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  DatePickerValueProps,\n  useDatePickerState,\n} from './use-date-picker-state';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Calendar} from '../calendar/calendar';\nimport {\n  DatePickerField,\n  DatePickerFieldProps,\n} from '../date-range-picker/date-picker-field';\nimport {DateSegmentList} from '../segments/date-segment-list';\nimport {useDateFormatter} from '@common/i18n/use-date-formatter';\nimport {useTrans} from '@common/i18n/use-trans';\nimport clsx from 'clsx';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport interface DatePickerProps\n  extends Omit<DatePickerFieldProps, 'children'>,\n    DatePickerValueProps<ZonedDateTime> {}\nexport function DatePicker({showCalendarFooter, ...props}: DatePickerProps) {\n  const state = useDatePickerState(props);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const now = useCurrentDateTime();\n\n  const footer = showCalendarFooter && (\n    <DialogFooter\n      padding=\"px-14 pb-14\"\n      startAction={\n        <Button\n          disabled={state.isPlaceholder}\n          variant=\"text\"\n          color=\"primary\"\n          onClick={() => {\n            state.clear();\n          }}\n        >\n          <Trans message=\"Clear\" />\n        </Button>\n      }\n    >\n      <Button\n        variant=\"text\"\n        color=\"primary\"\n        onClick={() => {\n          state.setSelectedValue(now);\n          state.setCalendarIsOpen(false);\n        }}\n      >\n        <Trans message=\"Today\" />\n      </Button>\n    </DialogFooter>\n  );\n\n  const dialog = (\n    <DialogTrigger\n      offset={8}\n      placement=\"bottom-start\"\n      isOpen={state.calendarIsOpen}\n      onOpenChange={state.setCalendarIsOpen}\n      type=\"popover\"\n      triggerRef={inputRef}\n      returnFocusToTrigger={false}\n      moveFocusToDialog={false}\n    >\n      <Dialog size=\"auto\">\n        <DialogBody\n          className=\"flex items-start gap-40\"\n          padding={showCalendarFooter ? 'px-24 pt-20 pb-10' : null}\n        >\n          <Calendar state={state} visibleMonths={1} />\n        </DialogBody>\n        {footer}\n      </Dialog>\n    </DialogTrigger>\n  );\n\n  const openOnClick: ComponentPropsWithoutRef<'div'> = {\n    onClick: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (!isHourSegment(e)) {\n        state.setCalendarIsOpen(true);\n      } else {\n        state.setCalendarIsOpen(false);\n      }\n    },\n  };\n\n  return (\n    <Fragment>\n      <DatePickerField\n        ref={inputRef}\n        wrapperProps={openOnClick}\n        endAdornment={\n          <DateRangeIcon className={clsx(props.disabled && 'text-disabled')} />\n        }\n        {...props}\n      >\n        <DateSegmentList\n          segmentProps={openOnClick}\n          state={state}\n          value={state.selectedValue}\n          onChange={state.setSelectedValue}\n          isPlaceholder={state.isPlaceholder}\n        />\n      </DatePickerField>\n      {dialog}\n    </Fragment>\n  );\n}\n\ninterface FormDatePickerProps extends DatePickerProps {\n  name: string;\n}\nexport function FormDatePicker(props: FormDatePickerProps) {\n  const {min, max} = props;\n  const {trans} = useTrans();\n  const {format} = useDateFormatter();\n  const {\n    field: {onChange, onBlur, value = null, ref},\n    fieldState: {invalid, error},\n  } = useController({\n    name: props.name,\n    rules: {\n      validate: v => {\n        if (!v) return;\n        const date = parseAbsoluteToLocal(v);\n        if (min && date.compare(min) < 0) {\n          return trans({\n            message: 'Enter a date after :date',\n            values: {date: format(v)},\n          });\n        }\n        if (max && date.compare(max) > 0) {\n          return trans({\n            message: 'Enter a date before :date',\n            values: {date: format(v)},\n          });\n        }\n      },\n    },\n  });\n\n  const parsedValue: null | ZonedDateTime = value\n    ? parseAbsoluteToLocal(value)\n    : null;\n\n  const formProps: Partial<DatePickerProps> = {\n    onChange: e => {\n      onChange(e ? e.toAbsoluteString() : e);\n    },\n    onBlur,\n    value: parsedValue,\n    invalid,\n    errorMessage: error?.message,\n    inputRef: ref,\n  };\n\n  return <DatePicker {...mergeProps(formProps, props)} />;\n}\n\nfunction isHourSegment(e: MouseEvent<HTMLDivElement>): boolean {\n  return ['hour', 'minute', 'dayPeriod'].includes(\n    (e.currentTarget as HTMLElement).ariaLabel || ''\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DragHandleIcon = createSvgIcon(\n  <path d=\"M20 9H4v2h16V9zM4 15h16v-2H4v2z\" />\n, 'DragHandleOutlined');\n","import {useCallback, useRef, useState} from 'react';\n\nexport function useStickySentinel() {\n  const [isSticky, setIsSticky] = useState(false);\n\n  const observerRef = useRef<IntersectionObserver>();\n\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\n    if (sentinel) {\n      const observer = new IntersectionObserver(\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\n        {threshold: [1]}\n      );\n      observerRef.current = observer;\n      observer.observe(sentinel);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return {isSticky, sentinelRef};\n}\n","import {FieldValues, SubmitHandler, UseFormReturn} from 'react-hook-form';\nimport clsx from 'clsx';\nimport React, {ReactNode} from 'react';\nimport {useStickySentinel} from '../utils/hooks/sticky-sentinel';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {Trans} from '../i18n/trans';\n\ninterface Props<T extends FieldValues> {\n  onSubmit: SubmitHandler<T>;\n  form: UseFormReturn<T>;\n  title: ReactNode;\n  subTitle?: ReactNode;\n  isLoading: boolean;\n  children: ReactNode;\n  actions?: ReactNode;\n  backButton?: ReactNode;\n  disableSaveWhenNotDirty?: boolean;\n  wrapInContainer?: boolean;\n}\nexport function CrupdateResourceLayout<T extends FieldValues>({\n  onSubmit,\n  form,\n  title,\n  subTitle,\n  children,\n  actions,\n  backButton,\n  isLoading = false,\n  disableSaveWhenNotDirty = false,\n  wrapInContainer = true,\n}: Props<T>) {\n  const {isSticky, sentinelRef} = useStickySentinel();\n  const isDirty = !disableSaveWhenNotDirty\n    ? true\n    : Object.keys(form.formState.dirtyFields).length;\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      onBeforeSubmit={() => form.clearErrors()}\n      form={form}\n    >\n      <div ref={sentinelRef} />\n      <div\n        className={clsx(\n          'sticky top-0 z-10 my-12 transition-shadow md:my-24',\n          isSticky && 'bg shadow',\n        )}\n      >\n        <div\n          className={clsx(\n            'flex items-center gap-24 py-14 md:items-start',\n            wrapInContainer && 'container mx-auto px-24',\n          )}\n        >\n          {backButton}\n          <div className=\"overflow-hidden overflow-ellipsis md:mr-64\">\n            <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\n              {title}\n            </h1>\n            {subTitle && <div className=\"mt-4\">{subTitle}</div>}\n          </div>\n          <div className=\"mr-auto\"></div>\n          {actions}\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={isLoading || !isDirty}\n          >\n            <Trans message=\"Save\" />\n          </Button>\n        </div>\n      </div>\n      <div\n        className={\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\n        }\n      >\n        <div className=\"rounded\">{children}</div>\n      </div>\n    </Form>\n  );\n}\n","export default \"__VITE_ASSET__be0c7262__\"","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {apiClient} from '@common/http/query-client';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\ninterface Params {\n  query?: string;\n  perPage?: number;\n}\n\nexport function useArtistPickerSuggestions(queryParams: Params) {\n  return useQuery({\n    queryKey: ['artists', 'search-suggestions', queryParams],\n    queryFn: () => fetchArtists(queryParams),\n    placeholderData: keepPreviousData,\n  });\n}\n\nasync function fetchArtists(params: Params) {\n  return apiClient\n    .get<Response>('search/suggestions/artist', {params})\n    .then(r => r.data);\n}\n","import {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport {Trans} from '@common/i18n/trans';\nimport React, {useState} from 'react';\nimport {useArtistPickerSuggestions} from '@app/web-player/artists/artist-picker/use-artist-picker-suggestions';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {Item} from '@common/ui/forms/listbox/item';\n\ninterface FormArtistPickerProps {\n  name: string;\n  className?: string;\n}\nexport function FormArtistPicker({name, className}: FormArtistPickerProps) {\n  const {trans} = useTrans();\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useArtistPickerSuggestions({query: inputValue});\n\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={<Trans message=\"Artists\" />}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={trans(message('+Add artist'))}\n      isLoading={isLoading}\n      allowCustomValue={false}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"rounded-full object-cover w-24 h-24\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","import {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\nimport React, {ReactNode, useState} from 'react';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useNormalizedModels} from '@common/users/queries/use-normalized-models';\n\ninterface Props {\n  model: string;\n  name: string;\n  className?: string;\n  label?: ReactNode;\n  placeholder?: string;\n  allowCustomValue?: boolean;\n}\nexport function FormNormalizedModelChipField({\n  name,\n  label,\n  placeholder,\n  model,\n  className,\n  allowCustomValue = false,\n}: Props) {\n  const [inputValue, setInputValue] = useState('');\n  const {data, isLoading} = useNormalizedModels(`normalized-models/${model}`, {\n    query: inputValue,\n  });\n  return (\n    <FormChipField\n      className={className}\n      name={name}\n      label={label}\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={placeholder}\n      isLoading={isLoading}\n      allowCustomValue={allowCustomValue}\n    >\n      {data?.results.map(result => (\n        <Item\n          value={result}\n          key={result.id}\n          startIcon={\n            result.image ? (\n              <img\n                className=\"h-24 w-24 rounded-full object-cover\"\n                src={result.image}\n                alt=\"\"\n              />\n            ) : undefined\n          }\n        >\n          {result.name}\n        </Item>\n      ))}\n    </FormChipField>\n  );\n}\n","export const TAG_MODEL = 'tag';\n\nexport interface Tag {\n  id: number;\n  name: string;\n  display_name: string;\n  type: string;\n  updated_at: string;\n  created_at: string;\n  model_type: typeof TAG_MODEL;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const FileUploadIcon = createSvgIcon(\n  <path d=\"M18 15v3H6v-3H4v3c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-3h-2zM7 9l1.41 1.41L11 7.83V16h2V7.83l2.59 2.58L17 9l-5-5-5 5z\" />\n, 'FileUploadOutlined');\n","import React, {ReactElement, useMemo} from 'react';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {Trans} from '@common/i18n/trans';\nimport {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport clsx from 'clsx';\n\ninterface Props {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  className?: string;\n}\nexport function TrackUploadStatusText({fileUpload, status, className}: Props) {\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n  const totalBytes = useMemo(\n    () => prettyBytes(fileUpload.file.size),\n    [fileUpload.file.size]\n  );\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded]\n  );\n\n  let statusMessage: ReactElement;\n  if (status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else if (status === 'processing') {\n    statusMessage = <Trans message=\"Processing upload...\" />;\n  } else if (status === 'pending') {\n    statusMessage = <Trans message=\"Waiting to start...\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes uploaded\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className={clsx('text-muted text-xs', className)}>{statusMessage}</div>\n  );\n}\n","import {FileUpload} from '@common/uploads/uploader/file-upload-store';\nimport {ProgressBar} from '@common/ui/progress/progress-bar';\nimport React, {ComponentPropsWithoutRef, ReactElement} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {message} from '@common/i18n/message';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {ErrorIcon} from '@common/icons/material/Error';\nimport {WarningIcon} from '@common/icons/material/Warning';\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\n\nexport type TrackUploadStatus = FileUpload['status'] | 'processing' | undefined;\n\ninterface UploadProgressProps {\n  fileUpload: FileUpload;\n  status: TrackUploadStatus;\n  onAbort?: (uploadId: string) => void;\n  size?: 'sm' | 'md';\n  className?: string;\n}\nexport function TrackUploadProgress({\n  fileUpload,\n  status,\n  onAbort,\n  size = 'md',\n  className,\n}: UploadProgressProps) {\n  return (\n    <div className={className}>\n      <div className=\"flex items-center gap-24 justify-between\">\n        <TrackUploadStatusText fileUpload={fileUpload} status={status} />\n        <UploadStatusButton\n          fileUpload={fileUpload}\n          status={status}\n          onAbort={onAbort}\n        />\n      </div>\n      <ProgressBar\n        size={size === 'sm' ? 'xs' : 'sm'}\n        radius=\"rounded-sm\"\n        value={fileUpload.percentage}\n        isIndeterminate={status === 'processing' || status === 'pending'}\n      />\n    </div>\n  );\n}\n\nfunction UploadStatusButton({\n  fileUpload,\n  status,\n  onAbort,\n}: UploadProgressProps) {\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  const errorMessage = fileUpload.errorMessage;\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"sm\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"sm\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed' || status === 'processing') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"sm\" className=\"text-primary\" />\n      </AnimatedStatus>\n    );\n  } else if (onAbort) {\n    statusButton = (\n      <AnimatedStatus>\n        <IconButton size=\"xs\" onClick={() => onAbort(fileUpload.file.id)}>\n          <CloseIcon />\n        </IconButton>\n      </AnimatedStatus>\n    );\n  } else {\n    // keep the spacing, even if status button is hidden\n    statusButton = <div className=\"w-30 h-30\" />;\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      className=\"flex w-30 h-30 items-center justify-center\"\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {Album} from '@app/web-player/albums/album';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {UseFormReturn} from 'react-hook-form';\nimport {CreateAlbumPayload} from '@app/admin/albums-datatable-page/requests/use-create-album';\n\nexport type ExtractedTrackMetadata = Partial<CreateTrackPayload> & {\n  release_date?: string;\n  album_name?: string;\n};\n\ninterface Response extends BackendResponse {\n  metadata: {\n    title?: string;\n    album?: Album;\n    album_name?: string;\n    artist?: Artist;\n    artist_name?: string;\n    genres?: string[];\n    duration?: number;\n    release_date?: string;\n    comment?: string;\n    image?: FileEntry;\n    lyrics?: string;\n  };\n}\n\ninterface Payload {\n  fileEntryId: number;\n  autoMatchAlbum?: boolean;\n}\n\nexport function useExtractTackFileMetadata() {\n  return useMutation({\n    mutationFn: (payload: Payload) => extractMeta(payload),\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction extractMeta(payload: Payload): Promise<ExtractedTrackMetadata> {\n  return apiClient\n    .post<Response>(`tracks/${payload.fileEntryId}/extract-metadata`, payload)\n    .then(r => metadataToFormValues(r.data));\n}\n\nfunction metadataToFormValues(response: Response): ExtractedTrackMetadata {\n  const values: ExtractedTrackMetadata = {\n    name: response.metadata.title,\n    duration: response.metadata.duration,\n    genres: response.metadata.genres || [],\n    description: response.metadata.comment,\n    lyric: response.metadata.lyrics,\n    release_date: response.metadata.release_date,\n    album_name: response.metadata.album_name,\n  };\n  if (response.metadata.album) {\n    values.album_id = response.metadata.album.id;\n  }\n  if (response.metadata.artist) {\n    values.artists = [response.metadata.artist];\n  }\n  if (response.metadata.image) {\n    values.image = response.metadata.image.url;\n  }\n  return values;\n}\n\nexport function hydrateAlbumForm(\n  form: UseFormReturn<CreateAlbumPayload>,\n  data: ExtractedTrackMetadata,\n) {\n  if (!form.getValues('artists')?.length && data.artists) {\n    form.setValue('artists', data.artists);\n  }\n  if (!form.getValues('image') && data.image) {\n    form.setValue('image', data.image);\n  }\n  if (data.release_date) {\n    form.setValue('release_date', data.release_date);\n  }\n  if (data.genres?.length) {\n    form.setValue(\n      'genres',\n      // @ts-ignore\n      mergeArraysWithoutDuplicates(form.getValues('genres'), data.genres),\n    );\n  }\n  if (!form.getValues('name') && data.album_name) {\n    form.setValue('name', data.album_name);\n  }\n}\n\ntype Values = Partial<CreateTrackPayload>;\nexport function mergeTrackFormValues<\n  T extends Values = Values,\n  E extends Values = Values,\n>(newValues: T, oldValues: E): T & E {\n  return {\n    ...oldValues,\n    ...newValues,\n    artists: mergeArraysWithoutDuplicates(oldValues.artists, newValues.artists),\n    genres: mergeArraysWithoutDuplicates(\n      oldValues.genres as NormalizedModel[],\n      newValues.genres as NormalizedModel[],\n      'name',\n    ),\n    tags: mergeArraysWithoutDuplicates(oldValues.tags, newValues.tags, 'name'),\n  };\n}\n\nfunction mergeArraysWithoutDuplicates(\n  oldValues: NormalizedModel[] = [],\n  newValues: NormalizedModel[] = [],\n  key: keyof NormalizedModel = 'id',\n) {\n  newValues = newValues.filter(\n    nv => !oldValues.find(ov => ov[key] === nv[key]),\n  );\n  return [...oldValues, ...newValues];\n}\n","import {useSettings} from '@common/core/settings/use-settings';\nimport {\n  ExtractedTrackMetadata,\n  useExtractTackFileMetadata,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\nimport {useCallback, useMemo, useRef} from 'react';\nimport {UploadInputType} from '@common/uploads/types/upload-input-config';\nimport {Disk} from '@common/uploads/types/backend-metadata';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {generateWaveformData} from '@app/web-player/tracks/waveform/generate-waveform-data';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {validateUpload} from '@common/uploads/uploader/validate-upload';\nimport {message} from '@common/i18n/message';\n\nconst FiftyMB = 50 * 1024 * 1024;\n\nexport interface TrackUploadMeta {\n  isGeneratingWave?: boolean;\n  isExtractingMetadata?: boolean;\n}\n\nexport type TrackUploadPayload = CreateTrackPayload & {uploadId: string};\n\ninterface Options {\n  autoMatchAlbum?: boolean;\n  onUploadStart?: (data: TrackUploadPayload) => void;\n  onMetadataChange: (\n    file: UploadedFile,\n    newData: ExtractedTrackMetadata & {waveData?: number[][]},\n  ) => void;\n}\nexport function useTrackUploader(options: Options) {\n  const {uploads} = useSettings();\n  const restrictions = useMemo(\n    () => ({\n      allowedFileTypes: [UploadInputType.audio, UploadInputType.video],\n      maxFileSize: uploads.max_size || FiftyMB,\n    }),\n    [uploads.max_size],\n  );\n\n  const extractMetadata = useExtractTackFileMetadata();\n  const optionsRef = useRef<Options>(options);\n  optionsRef.current = options;\n\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const updateFileUpload = useFileUploadStore(s => s.updateFileUpload);\n  const getUpload = useFileUploadStore(s => s.getUpload);\n  const updateUpload = useCallback(\n    (uploadId: string, newMeta: TrackUploadMeta) => {\n      updateFileUpload(uploadId, {\n        meta: {\n          // @ts-ignore\n          ...(getUpload(uploadId)?.meta || {}),\n          ...newMeta,\n        },\n      });\n    },\n    [updateFileUpload, getUpload],\n  );\n\n  // todo: playback source is not set if extract metadata request errors out\n  const uploadOptions: UploadStrategyConfig = useMemo(() => {\n    return {\n      metadata: {\n        diskPrefix: 'track_media',\n        disk: Disk.public,\n      },\n      restrictions,\n      onSuccess: (entry: FileEntry, file) => {\n        updateUpload(file.id, {isExtractingMetadata: true});\n        extractMetadata.mutate(\n          {\n            fileEntryId: entry.id,\n            autoMatchAlbum: optionsRef.current.autoMatchAlbum,\n          },\n          {\n            onSuccess: formValues => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n              const newValues: ExtractedTrackMetadata = {\n                ...formValues,\n                src: entry.url,\n              };\n              optionsRef.current.onMetadataChange(file, newValues);\n            },\n            onError: () => {\n              updateUpload(file.id, {isExtractingMetadata: false});\n            },\n          },\n        );\n      },\n      onError: message => {\n        if (message) {\n          toast.danger(message);\n        }\n      },\n    };\n  }, [extractMetadata, updateUpload, restrictions]);\n\n  const validateUploads = useCallback(\n    (files: UploadedFile[]) => {\n      const validFiles = files.filter(\n        file => !validateUpload(file, restrictions),\n      );\n      // show error message, if some files did not pass validation\n      if (files.length !== validFiles.length) {\n        toast.danger(\n          message(':count of your files is not supported.', {\n            values: {count: files.length - validFiles.length},\n          }),\n        );\n      }\n      return validFiles;\n    },\n    [restrictions],\n  );\n\n  const uploadTracks = useCallback(\n    async (files: UploadedFile[]) => {\n      const validFiles = validateUploads(files);\n      if (!validFiles.length) return;\n      files.forEach(file => {\n        optionsRef.current.onUploadStart?.({\n          name: file.name,\n          uploadId: file.id,\n        });\n      });\n      uploadMultiple(files, uploadOptions);\n      for (const file of files) {\n        updateUpload(file.id, {isGeneratingWave: true});\n        const waveData = await generateWaveformData(file.native);\n        if (waveData) {\n          optionsRef.current.onMetadataChange(file, {waveData});\n        }\n        updateUpload(file.id, {isGeneratingWave: false});\n      }\n    },\n    [uploadOptions, uploadMultiple, updateUpload, validateUploads],\n  );\n\n  const openFilePicker = useCallback(async () => {\n    const files = await openUploadWindow({\n      multiple: true,\n      types: restrictions.allowedFileTypes,\n    });\n    await uploadTracks(files);\n  }, [uploadTracks, restrictions]);\n\n  return {openFilePicker, uploadTracks, validateUploads};\n}\n","import {TrackUploadStatus} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {TrackUploadMeta} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nexport function useTrackUpload(uploadId: string | undefined) {\n  const upload = useFileUploadStore(s =>\n    uploadId ? s.fileUploads.get(uploadId) : null\n  );\n\n  let isUploading = false;\n  let status: TrackUploadStatus;\n\n  if (upload) {\n    const meta = upload.meta as TrackUploadMeta | undefined;\n    const isProcessing = meta?.isExtractingMetadata || meta?.isGeneratingWave;\n\n    isUploading =\n      upload?.status === 'pending' ||\n      upload?.status === 'inProgress' ||\n      !!isProcessing;\n\n    status =\n      upload?.status === 'completed' && isProcessing\n        ? 'processing'\n        : upload?.status;\n  }\n\n  return {isUploading, status, activeUpload: upload};\n}\n","import React, {useState} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\n\nexport function TrackFormUploadButton() {\n  const [uploadId, setUploadId] = useState<string>();\n  const {setValue, watch, getValues} = useFormContext<CreateTrackPayload>();\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: ({uploadId}) => setUploadId(uploadId),\n    onMetadataChange: (file, newData) => {\n      const mergedValues = mergeTrackFormValues(newData, getValues());\n      Object.entries(mergedValues).forEach(([key, value]) =>\n        setValue(key as keyof CreateTrackPayload, value, {shouldDirty: true})\n      );\n    },\n  });\n  const {status, isUploading, activeUpload} = useTrackUpload(uploadId);\n  const {abortUpload, clearInactive} = useFileUploadStore();\n  return (\n    <div>\n      <Button\n        className=\"w-full\"\n        variant=\"flat\"\n        color=\"primary\"\n        startIcon={<FileUploadIcon />}\n        disabled={isUploading}\n        onClick={() => openFilePicker()}\n      >\n        {watch('src') ? (\n          <Trans message=\"Replace file\" />\n        ) : (\n          <Trans message=\"Upload file\" />\n        )}\n      </Button>\n      {activeUpload && (\n        <TrackUploadProgress\n          fileUpload={activeUpload}\n          status={status}\n          className=\"mt-24\"\n          onAbort={uploadId => {\n            abortUpload(uploadId);\n            clearInactive();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FormNormalizedModelField} from '@common/ui/forms/normalized-model-field';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useFormContext} from 'react-hook-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {FormattedDuration} from '@common/i18n/formatted-duration';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {TrackFormUploadButton} from '@app/admin/tracks-datatable-page/track-form/track-form-upload-button';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\ninterface TrackFormProps {\n  showExternalIdFields?: boolean;\n  showAlbumField?: boolean;\n  uploadButton?: ReactNode;\n}\nexport function TrackForm({\n  showExternalIdFields,\n  showAlbumField = true,\n  uploadButton,\n}: TrackFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <div className=\"gap-24 md:flex\">\n      <div className=\"flex-shrink-0\">\n        <FormImageSelector\n          name=\"image\"\n          diskPrefix=\"track_image\"\n          variant={isMobile ? 'input' : 'square'}\n          label={isMobile ? <Trans message=\"Image\" /> : null}\n          previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n          stretchPreview\n        />\n        <div className=\"mt-24\">\n          {uploadButton ? uploadButton : <TrackFormUploadButton />}\n        </div>\n      </div>\n      <div className=\"mt-24 flex-auto md:mt-0\">\n        <FormTextField\n          name=\"name\"\n          label={<Trans message=\"Name\" />}\n          className=\"mb-24\"\n          required\n          autoFocus\n        />\n        {showAlbumField && (\n          <FormNormalizedModelField\n            className=\"mb-24\"\n            label={<Trans message=\"Album\" />}\n            name=\"album_id\"\n            endpoint=\"search/suggestions/album\"\n          />\n        )}\n        <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Genres\" />}\n          placeholder={trans(message('+Add genre'))}\n          model={GENRE_MODEL}\n          name=\"genres\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormNormalizedModelChipField\n          label={<Trans message=\"Tags\" />}\n          placeholder={trans(message('+Add tag'))}\n          model={TAG_MODEL}\n          name=\"tags\"\n          allowCustomValue\n          className=\"mb-24\"\n        />\n        <FormTextField\n          name=\"description\"\n          label={<Trans message=\"Description\" />}\n          inputElementType=\"textarea\"\n          rows={5}\n          className=\"mb-24\"\n        />\n        <DurationField />\n        {showExternalIdFields && <SourceField />}\n        {showExternalIdFields && <SpotifyIdField />}\n      </div>\n    </div>\n  );\n}\n\nfunction SourceField() {\n  return (\n    <FormTextField\n      name=\"src\"\n      label={<Trans message=\"Playback source\" />}\n      className=\"mb-24\"\n      minLength={1}\n      maxLength={230}\n      description={\n        <Trans message=\"Supports audio, video, hls/dash stream and youtube video url. If left empty, best matching youtube video will be found automatically.\" />\n      }\n    />\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n\nfunction DurationField() {\n  const {watch} = useFormContext<CreateTrackPayload>();\n  return (\n    <FormTextField\n      required\n      name=\"duration\"\n      label={<Trans message=\"Duration (in milliseconds)\" />}\n      className=\"mb-24\"\n      type=\"number\"\n      min={1}\n      max={86400000}\n      description={\n        <Trans\n          message=\"Will appear on the site as: :preview\"\n          values={{preview: <FormattedDuration ms={watch('duration')} />}}\n        />\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {TrackUploadPayload} from '@app/web-player/backstage/upload-page/use-track-uploader';\n\nconst endpoint = 'tracks';\n\nexport interface CreateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface CreateTrackPayload\n  extends Omit<\n    Track,\n    'genres' | 'artists' | 'tags' | 'id' | 'model_type' | 'album' | 'lyric'\n  > {\n  album_id?: number;\n  artists?: NormalizedModel[];\n  waveData?: number[][];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  lyric?: string;\n}\n\ninterface Options {\n  onSuccess?: (response: CreateTrackResponse) => void;\n}\n\nexport function useCreateTrack(\n  form: UseFormReturn<CreateTrackPayload> | UseFormReturn<TrackUploadPayload>,\n  {onSuccess}: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateTrackPayload) => createTrack(payload),\n    onSuccess: response => {\n      toast(trans(message('Track created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n      onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createTrack(payload: CreateTrackPayload) {\n  return apiClient\n    .post<CreateTrackResponse>(endpoint, prepareTrackPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareTrackPayload(payload: CreateTrackPayload) {\n  return {\n    ...payload,\n    album_id: payload.album_id ? payload.album_id : null,\n    artists: payload.artists?.map(artist => artist.id),\n  };\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  CreateTrackPayload,\n  CreateTrackResponse,\n  useCreateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  onTrackCreated?: (response: CreateTrackResponse) => void;\n  defaultValues?: Partial<CreateTrackPayload>;\n}\n\nexport function useCreateTrackForm({\n  onTrackCreated,\n  defaultValues,\n}: Props = {}) {\n  const form = useForm<CreateTrackPayload>({\n    defaultValues,\n  });\n  const createTrack = useCreateTrack(form, {onSuccess: onTrackCreated});\n  return {form, createTrack};\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {useLocation} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateTrackPage({wrapInContainer}: Props) {\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, createTrack} = useCreateTrackForm({\n    onTrackCreated: response => {\n      if (pathname.includes('admin')) {\n        navigate(`/admin/tracks/${response.track.id}/edit`);\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createTrack.mutate(values);\n      }}\n      title={<Trans message=\"Add new track\" />}\n      isLoading={createTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nexport interface UpdateTrackResponse extends BackendResponse {\n  track: Track;\n}\n\nexport interface UpdateTrackPayload extends CreateTrackPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `tracks/${id}`;\n\ninterface Options {\n  onSuccess?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrack(\n  form: UseFormReturn<UpdateTrackPayload>,\n  options: Options = {},\n) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: UpdateTrackPayload) => updateChannel(payload),\n    onSuccess: response => {\n      toast(trans(message('Track updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('tracks'),\n      });\n      options.onSuccess?.(response);\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateChannel({\n  id,\n  ...payload\n}: UpdateTrackPayload): Promise<UpdateTrackResponse> {\n  return apiClient\n    .put(Endpoint(id), prepareTrackPayload(payload as CreateTrackPayload))\n    .then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {\n  UpdateTrackPayload,\n  UpdateTrackResponse,\n  useUpdateTrack,\n} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Options {\n  onTrackUpdated?: (response: UpdateTrackResponse) => void;\n}\n\nexport function useUpdateTrackForm(\n  track: UpdateTrackPayload | CreateTrackPayload | Omit<Track, 'lyric'>,\n  options: Options = {}\n) {\n  const form = useForm<UpdateTrackPayload>({\n    defaultValues: {\n      ...track,\n      image: track.image || (track as Track).album?.image,\n    },\n  });\n  const updateTrack = useUpdateTrack(form, {onSuccess: options.onTrackUpdated});\n  return {form, updateTrack};\n}\n","import React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {PageStatus} from '@common/http/page-status';\nimport {Navigate, useLocation} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {useTrackPermissions} from '@app/web-player/tracks/hooks/use-track-permissions';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateTrackPage({wrapInContainer}: Props) {\n  const query = useTrack({loader: 'editTrackPage'});\n  if (query.data) {\n    return (\n      <PageContent track={query.data.track} wrapInContainer={wrapInContainer} />\n    );\n  }\n  return (\n    <PageStatus\n      query={query}\n      loaderClassName=\"absolute inset-0 m-auto\"\n      loaderIsScreen={false}\n    />\n  );\n}\n\ninterface PageContentProps {\n  track: Track;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({track, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useTrackPermissions([track]);\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const {form, updateTrack} = useUpdateTrackForm(track, {\n    onTrackUpdated: response => {\n      if (pathname.includes('admin')) {\n        navigate('/admin/tracks');\n      } else {\n        navigate(getTrackLink(response.track));\n      }\n    },\n  });\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateTrack.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ track\" values={{name: track.name}} />}\n      isLoading={updateTrack.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <FileUploadProvider>\n        <TrackForm showExternalIdFields />\n      </FileUploadProvider>\n    </CrupdateResourceLayout>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  CreateTrackPayload,\n  prepareTrackPayload,\n} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\nconst endpoint = 'albums';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport type CreateAlbumPayloadTrack = Omit<\n  CreateTrackPayload,\n  'album' | 'artists' | 'lyric'\n> & {\n  uploadId: string;\n};\n\nexport interface CreateAlbumPayload\n  extends Omit<Album, 'genres' | 'tags' | 'tracks' | 'artists'> {\n  artists: NormalizedModel[];\n  genres?: NormalizedModel[] | string[];\n  tags?: NormalizedModel[];\n  tracks: CreateAlbumPayloadTrack[];\n}\n\nexport function useCreateAlbum(form: UseFormReturn<CreateAlbumPayload>) {\n  const {trans} = useTrans();\n  return useMutation({\n    mutationFn: (payload: CreateAlbumPayload) => createAlbum(payload),\n    onSuccess: () => {\n      toast(trans(message('Album created')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey(endpoint),\n      });\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction createAlbum(payload: CreateAlbumPayload) {\n  return apiClient\n    .post<Response>(endpoint, prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n\nexport function prepareAlbumPayload(payload: CreateAlbumPayload) {\n  return {\n    ...payload,\n    artists: payload.artists?.map(artist => artist.id),\n    tracks: payload.tracks?.map(track => prepareTrackPayload(track)),\n  };\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {\n  CreateAlbumPayload,\n  prepareAlbumPayload,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {useLocation} from 'react-router-dom';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Response extends BackendResponse {\n  album: Album;\n}\n\nexport interface UpdateAlbumPayload extends CreateAlbumPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `albums/${id}`;\n\nexport function useUpdateAlbum(\n  form: UseFormReturn<UpdateAlbumPayload>,\n  albumId: number,\n) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateAlbumPayload) => updateAlbum(albumId, payload),\n    onSuccess: response => {\n      toast(trans(message('Album updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('albums'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/albums');\n      } else {\n        navigate(getAlbumLink(response.album));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum(\n  id: number,\n  payload: UpdateAlbumPayload,\n): Promise<Response> {\n  return apiClient\n    .put(Endpoint(id), prepareAlbumPayload(payload))\n    .then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {useUpdateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-update-track-form';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@common/ui/forms/form';\nimport {Button} from '@common/ui/buttons/button';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  track: UpdateTrackPayload | CreateTrackPayload;\n  hideAlbumField?: boolean;\n}\nexport function UpdateTrackDialog({track, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useUpdateTrackForm(track);\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Edit “:name“ track\" values={{name: track.name}} />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Update\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Form} from '@common/ui/forms/form';\nimport {Button} from '@common/ui/buttons/button';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {useCreateTrackForm} from '@app/admin/tracks-datatable-page/crupdate/use-create-track-form';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\n\ninterface Props {\n  defaultValues?: Partial<CreateTrackPayload>;\n  hideAlbumField?: boolean;\n}\nexport function CreateTrackDialog({defaultValues, hideAlbumField}: Props) {\n  const {formId, close} = useDialogContext();\n  const {form} = useCreateTrackForm({defaultValues});\n  return (\n    <Dialog size=\"fullscreen\">\n      <DialogHeader>\n        <Trans message=\"Add new track\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            close(values);\n          }}\n          onBeforeSubmit={() => {\n            form.clearErrors();\n          }}\n        >\n          <TrackForm showExternalIdFields showAlbumField={!hideAlbumField} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} variant=\"flat\" color=\"primary\" type=\"submit\">\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useFieldArray, useFormContext} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  CreateAlbumPayloadTrack,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport React, {useRef} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {DragHandleIcon} from '@common/icons/material/DragHandle';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {TrackUploadStatusText} from '@app/admin/tracks-datatable-page/track-form/track-upload-status-text';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {UpdateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/update-track-dialog';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {CreateTrackDialog} from '@app/admin/tracks-datatable-page/track-form/create-track-dialog';\nimport {DragPreviewRenderer} from '@common/ui/interactions/dnd/use-draggable';\nimport {DragPreview} from '@common/ui/interactions/dnd/drag-preview';\nimport {CreateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {UpdateTrackPayload} from '@app/admin/tracks-datatable-page/requests/use-update-track';\nimport {useSortable} from '@common/ui/interactions/dnd/sortable/use-sortable';\n\nexport function AlbumTracksForm() {\n  const form = useFormContext<CreateAlbumPayload>();\n  const {watch, setValue, getValues} = form;\n  const {fields, remove, prepend, move} = useFieldArray({\n    name: 'tracks',\n  });\n\n  const updateTrack = (\n    uploadId: string,\n    newValues: Partial<CreateTrackPayload>,\n  ) => {\n    const index = getValues('tracks')?.findIndex(f => f.uploadId === uploadId);\n    if (index != null) {\n      setValue(\n        `tracks.${index}`,\n        mergeTrackFormValues(newValues, getValues(`tracks.${index}`)),\n        {shouldDirty: true},\n      );\n    }\n  };\n\n  const {openFilePicker} = useTrackUploader({\n    onUploadStart: data =>\n      prepend(\n        // newly uploaded track should inherit album artists, genres and tags\n        mergeTrackFormValues(data, {\n          artists: form.getValues('artists'),\n          genres: form.getValues('genres'),\n          tags: form.getValues('tags'),\n        }),\n      ),\n    onMetadataChange: (file, newData) => {\n      hydrateAlbumForm(form, newData);\n      updateTrack(file.id, newData);\n    },\n  });\n\n  const tracks = watch('tracks') || [];\n\n  return (\n    <div>\n      <div className=\"flex items-center gap-12\">\n        <h2 className=\"my-24 text-xl font-semibold\">\n          <Trans message=\"Tracks\" />\n        </h2>\n        <Button\n          variant=\"outline\"\n          color=\"primary\"\n          size=\"xs\"\n          className=\"ml-auto\"\n          startIcon={<FileUploadIcon />}\n          onClick={() => openFilePicker()}\n        >\n          <Trans message=\"Upload tracks\" />\n        </Button>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={newTrack => {\n            if (newTrack) {\n              prepend(newTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Create track\" />}>\n            <IconButton variant=\"outline\" color=\"primary\" size=\"xs\">\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <CreateTrackDialog\n            hideAlbumField\n            defaultValues={{\n              artists: watch('artists'),\n              tags: watch('tags'),\n              genres: watch('genres'),\n            }}\n          />\n        </DialogTrigger>\n      </div>\n      {fields.map((field, index) => {\n        const track = tracks[index];\n        return (\n          <TrackItem\n            key={field.id}\n            track={track}\n            onRemove={() => remove(index)}\n            onSort={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n            tracks={tracks}\n            onUpdate={newValues => {\n              updateTrack(track.uploadId, newValues);\n            }}\n          />\n        );\n      })}\n\n      {!fields.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This album does not have any tracks yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface TrackItemProps {\n  track: CreateAlbumPayloadTrack;\n  tracks: CreateAlbumPayloadTrack[];\n  onRemove: () => void;\n  onUpdate: (updatedTrack: UpdateTrackPayload | CreateTrackPayload) => void;\n  onSort: (oldIndex: number, newIndex: number) => void;\n}\nfunction TrackItem({\n  track,\n  tracks,\n  onRemove,\n  onUpdate,\n  onSort,\n}: TrackItemProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const previewRef = useRef<DragPreviewRenderer>(null);\n\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const activeUpload = useFileUploadStore(s => {\n    return track.uploadId ? s.fileUploads.get(track.uploadId) : null;\n  });\n  const {isUploading, status} = useTrackUpload(track.uploadId);\n\n  const {sortableProps} = useSortable({\n    disabled: isUploading,\n    ref,\n    item: track,\n    items: tracks,\n    type: 'albumFormTrack',\n    preview: previewRef,\n    strategy: 'line',\n    onSortEnd: (oldIndex, newIndex) => {\n      onSort(oldIndex, newIndex);\n    },\n  });\n\n  return (\n    <div\n      className=\"border-b border-t border-t-transparent py-4\"\n      ref={ref}\n      {...sortableProps}\n    >\n      <div className=\"flex items-center text-sm\">\n        <IconButton className=\"mr-14 flex-shrink-0\" disabled={isUploading}>\n          <DragHandleIcon />\n        </IconButton>\n        <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap\">\n          {track.name}\n        </div>\n        {activeUpload && (\n          <div className=\"mr-10 flex items-center\">\n            <TrackUploadStatusText\n              fileUpload={activeUpload}\n              status={status}\n              className=\"mr-10\"\n            />\n            <ProgressCircle\n              isIndeterminate={status === 'processing'}\n              value={activeUpload.percentage}\n              size=\"sm\"\n            />\n          </div>\n        )}\n        <DialogTrigger\n          type=\"modal\"\n          onClose={updatedTrack => {\n            if (updatedTrack) {\n              onUpdate(updatedTrack);\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Edit track\" />}>\n            <IconButton\n              className=\"ml-auto flex-shrink-0 text-muted\"\n              disabled={isUploading}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <UpdateTrackDialog track={track} hideAlbumField={true} />\n        </DialogTrigger>\n        <DialogTrigger\n          type=\"modal\"\n          onClose={isConfirmed => {\n            if (isConfirmed) {\n              if (track.uploadId) {\n                abortUpload(track.uploadId);\n              }\n              onRemove();\n            }\n          }}\n        >\n          <Tooltip label={<Trans message=\"Remove track\" />}>\n            <IconButton className=\"flex-shrink-0 text-muted\">\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n          <ConfirmationDialog\n            isDanger\n            title={<Trans message=\"Remove track\" />}\n            body={\n              <Trans message=\"Are you sure you want to remove this track from the album?\" />\n            }\n            confirm={<Trans message=\"Remove\" />}\n          />\n        </DialogTrigger>\n      </div>\n      <RowDragPreview track={track} ref={previewRef} />\n    </div>\n  );\n}\n\ninterface DragPreviewProps {\n  track: CreateTrackPayload;\n}\nconst RowDragPreview = React.forwardRef<DragPreviewRenderer, DragPreviewProps>(\n  ({track}, ref) => {\n    let content = track.name;\n    if (track.artists?.length) {\n      content += `- ${track.artists?.[0].name}`;\n    }\n    return (\n      <DragPreview ref={ref}>\n        {() => (\n          <div className=\"rounded bg-chip p-8 text-sm shadow\">{content}</div>\n        )}\n      </DragPreview>\n    );\n  },\n);\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FormArtistPicker} from '@app/web-player/artists/artist-picker/form-artist-picker';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {TAG_MODEL} from '@common/tags/tag';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {AlbumTracksForm} from '@app/admin/albums-datatable-page/album-form/album-tracks-form';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\n\n// AlbumForm will be wrapped in FileUploadProvider by parent component\n\ninterface AlbumFormProps {\n  showExternalIdFields?: boolean;\n}\nexport function AlbumForm({showExternalIdFields}: AlbumFormProps) {\n  const {trans} = useTrans();\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <Fragment>\n      <div className=\"gap-24 md:flex\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image\"\n            diskPrefix=\"album_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize=\"md:w-full md:w-224 md:aspect-square\"\n            stretchPreview\n          />\n        </div>\n        <div className=\"mt-24 flex-auto md:mt-0\">\n          <FormTextField\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-24\"\n            required\n            autoFocus\n          />\n          <FormDatePicker\n            name=\"release_date\"\n            label={<Trans message=\"Release date\" />}\n            className=\"mb-24\"\n            granularity=\"day\"\n          />\n          <FormArtistPicker name=\"artists\" className=\"mb-24\" />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Genres\" />}\n            placeholder={trans(message('+Add genre'))}\n            model={GENRE_MODEL}\n            name=\"genres\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormNormalizedModelChipField\n            label={<Trans message=\"Tags\" />}\n            placeholder={trans(message('+Add tag'))}\n            model={TAG_MODEL}\n            name=\"tags\"\n            allowCustomValue\n            className=\"mb-24\"\n          />\n          <FormTextField\n            name=\"description\"\n            label={<Trans message=\"Description\" />}\n            inputElementType=\"textarea\"\n            rows={5}\n            className=\"mb-24\"\n          />\n          {showExternalIdFields && <SpotifyIdField />}\n        </div>\n      </div>\n      <AlbumTracksForm />\n    </Fragment>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {Album} from '@app/web-player/albums/album';\nimport {\n  UpdateAlbumPayload,\n  useUpdateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-update-album';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\nimport {Navigate} from 'react-router-dom';\nimport {useAlbumPermissions} from '@app/web-player/albums/use-album-permissions';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function UpdateAlbumPage({wrapInContainer}: Props) {\n  const query = useAlbum({loader: 'editAlbumPage'});\n\n  if (query.data) {\n    return (\n      <FileUploadProvider>\n        <PageContent\n          album={query.data.album}\n          wrapInContainer={wrapInContainer}\n        />\n      </FileUploadProvider>\n    );\n  }\n\n  return (\n    <PageStatus\n      query={query}\n      loaderIsScreen={false}\n      loaderClassName=\"absolute inset-0 m-auto\"\n    />\n  );\n}\n\ninterface PageContentProps {\n  album: Album;\n  wrapInContainer?: boolean;\n}\nfunction PageContent({album, wrapInContainer}: PageContentProps) {\n  const {canEdit} = useAlbumPermissions(album);\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const form = useForm<UpdateAlbumPayload>({\n    defaultValues: {\n      image: album.image,\n      name: album.name,\n      release_date: album.release_date,\n      artists: album.artists,\n      genres: album.genres,\n      tags: album.tags,\n      description: album.description,\n      spotify_id: album.spotify_id,\n      tracks: album.tracks,\n    },\n  });\n  const updateAlbum = useUpdateAlbum(form, album.id);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateAlbum.mutate(values);\n      }}\n      title={<Trans message=\"Edit “:name“ album\" values={{name: album.name}} />}\n      isLoading={updateAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n","import {forwardRef, useImperativeHandle, useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  hydrateAlbumForm,\n  mergeTrackFormValues,\n} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {Form} from '@common/ui/forms/form';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport type {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\n\nexport const AlbumUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const now = useCurrentDateTime();\n    const [isVisible, setIsVisible] = useState(false);\n    const form = useForm<CreateAlbumPayload>({\n      defaultValues: {\n        tracks: [],\n        artists: userArtist ? [userArtist] : [],\n        release_date: now.toAbsoluteString(),\n      },\n    });\n    const tracks = form.watch('tracks') || [];\n\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setIsVisible(true);\n        form.setValue('tracks', [...form.getValues('tracks'), data]);\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        hydrateAlbumForm(form, newData);\n        form.setValue(\n          'tracks',\n          form.getValues('tracks').map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          }),\n        );\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    const createAlbum = useCreateAlbum(form);\n    return isVisible ? (\n      <Form\n        className=\"rounded border p-14 md:p-24 mb-30 bg-paper\"\n        form={form}\n        onSubmit={newValues =>\n          createAlbum.mutate(newValues, {\n            onSuccess: response => {\n              setIsVisible(false);\n              form.reset();\n              onCreate(response.album);\n            },\n          })\n        }\n      >\n        <AlbumForm showExternalIdFields={false} />\n        <div className=\"mt-24\">\n          <Button\n            variant=\"text\"\n            onClick={() => {\n              tracks.forEach(track => {\n                abortUpload(track.uploadId);\n              });\n              form.reset();\n              setIsVisible(false);\n              onCancel();\n            }}\n            className=\"mr-10\"\n          >\n            <Trans message=\"Cancel\" />\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"flat\"\n            color=\"primary\"\n            disabled={uploadIsInProgress || createAlbum.isPending}\n          >\n            <Trans message=\"Save\" />\n          </Button>\n        </div>\n      </Form>\n    ) : null;\n  },\n);\n","import {\n  forwardRef,\n  memo,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {\n  TrackUploadPayload,\n  useTrackUploader,\n} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {mergeTrackFormValues} from '@app/admin/tracks-datatable-page/requests/use-extract-track-file-metadata';\nimport {\n  UploaderActions,\n  UploaderProps,\n} from '@app/web-player/backstage/upload-page/upload-page';\nimport {Track} from '@app/web-player/tracks/track';\nimport {useForm} from 'react-hook-form';\nimport {useCreateTrack} from '@app/admin/tracks-datatable-page/requests/use-create-track';\nimport {useTrackUpload} from '@app/web-player/backstage/upload-page/use-track-upload';\nimport {TrackUploadProgress} from '@app/admin/tracks-datatable-page/track-form/track-upload-progress';\nimport {Form} from '@common/ui/forms/form';\nimport {TrackForm} from '@app/admin/tracks-datatable-page/track-form/track-form';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {usePrimaryArtistForCurrentUser} from '@app/web-player/backstage/use-primary-artist-for-current-user';\n\nexport const TracksUploader = forwardRef<UploaderActions, UploaderProps>(\n  ({onUploadStart, onCancel, onCreate}, ref) => {\n    const userArtist = usePrimaryArtistForCurrentUser();\n    const abortUpload = useFileUploadStore(s => s.abortUpload);\n    const [tracks, setTracks] = useState<TrackUploadPayload[]>([]);\n\n    const {openFilePicker, uploadTracks, validateUploads} = useTrackUploader({\n      onUploadStart: data => {\n        setTracks(prev => {\n          if (userArtist) {\n            return [...prev, {...data, artists: [userArtist]}];\n          }\n          return [...prev, data];\n        });\n        onUploadStart();\n      },\n      onMetadataChange: (file, newData) => {\n        setTracks(allTracks => {\n          return allTracks.map(track => {\n            return track.uploadId === file.id\n              ? mergeTrackFormValues(newData, track)\n              : track;\n          });\n        });\n      },\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openFilePicker,\n        uploadTracks,\n        validateUploads,\n      }),\n      [openFilePicker, uploadTracks, validateUploads],\n    );\n\n    return (\n      <div className=\"w-full\">\n        {tracks.map(track => (\n          <TrackUploadItem\n            key={track.uploadId}\n            track={track}\n            onCreate={createdTrack => {\n              // hide upload form for this track\n              setTracks(prev =>\n                prev.filter(t => t.uploadId !== track.uploadId),\n              );\n              onCreate(createdTrack);\n            }}\n            onRemove={() => {\n              setTracks(prev => {\n                const newTracks = prev.filter(\n                  t => t.uploadId !== track.uploadId,\n                );\n                // only invoke \"onCancel\" if every uploaded track has been removed, so upload mode can be unlocked\n                if (!newTracks.length) {\n                  onCancel();\n                }\n                return newTracks;\n              });\n              abortUpload(track.uploadId);\n            }}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n\ninterface TrackUploadItemProps {\n  track: TrackUploadPayload;\n  onRemove: () => void;\n  onCreate: (track: Track) => void;\n}\nconst TrackUploadItem = memo(\n  ({track, onRemove, onCreate}: TrackUploadItemProps) => {\n    const form = useForm<TrackUploadPayload>({\n      defaultValues: track,\n    });\n    const createTrack = useCreateTrack(form);\n    const activeUpload = useFileUploadStore(s =>\n      s.fileUploads.get(track.uploadId),\n    );\n    const {isUploading, status} = useTrackUpload(track.uploadId);\n\n    useEffect(() => {\n      form.reset(track);\n    }, [track, form]);\n\n    const uploadProgress =\n      isUploading && activeUpload ? (\n        <TrackUploadProgress fileUpload={activeUpload} status={status} />\n      ) : null;\n\n    return (\n      <Form\n        form={form}\n        onSubmit={values => {\n          createTrack.mutate(values, {\n            onSuccess: response => onCreate(response.track),\n          });\n        }}\n        className=\"rounded border p-14 md:p-24 mb-30 bg-paper\"\n      >\n        <TrackForm uploadButton={uploadProgress} showExternalIdFields={false} />\n        <Button variant=\"text\" onClick={() => onRemove()} className=\"mr-10\">\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createTrack.isPending || !form.watch('src')}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </Form>\n    );\n  },\n);\n","export default \"__VITE_ASSET__19ef062e__\"","import {Track} from '@app/web-player/tracks/track';\nimport {Album, ALBUM_MODEL} from '@app/web-player/albums/album';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\nimport {Trans} from '@common/i18n/trans';\nimport {Link} from 'react-router-dom';\nimport {getTrackLink} from '@app/web-player/tracks/track-link';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport clsx from 'clsx';\nimport albumBorderImage from './album-border.png';\nimport {ShareMediaButtons} from '@app/web-player/sharing/share-media-buttons';\n\ninterface UploadedMediaPreviewProps {\n  media: Track | Album;\n}\nexport function UploadedMediaPreview({media}: UploadedMediaPreviewProps) {\n  const isAlbum = media.model_type === ALBUM_MODEL;\n  const absoluteLink = isAlbum\n    ? getAlbumLink(media, {absolute: true})\n    : getTrackLink(media, {absolute: true});\n\n  return (\n    <div className=\"flex items-center gap-28 border rounded bg-paper p-20 my-20 mx-auto w-780 max-w-full\">\n      <div className={clsx(isAlbum && 'relative isolate my-14 mx-18')}>\n        {isAlbum ? (\n          <AlbumImage\n            album={media}\n            className=\"rounded flex-shrink-0 z-20 relative\"\n            size=\"w-132 h-132\"\n          />\n        ) : (\n          <TrackImage\n            track={media}\n            className=\"rounded flex-shrink-0 z-20 relative\"\n            size=\"w-132 h-132\"\n          />\n        )}\n        {isAlbum && (\n          <img\n            className=\"absolute block w-160 h-160 max-w-160 -top-14 -left-14 z-10\"\n            src={albumBorderImage}\n            alt=\"\"\n          />\n        )}\n      </div>\n      <div className=\"flex-auto\">\n        <div className=\"text-base font-bold\">{media.name}</div>\n        <div className=\"text-muted text-sm mb-14\">\n          <ArtistLinks artists={media.artists} />\n        </div>\n        {media.genres?.length ? (\n          <ChipList selectable={false} size=\"sm\" className=\"mb-14\">\n            {media.genres?.map(genre => {\n              return (\n                <Chip key={genre.id}>{genre.display_name || genre.name}</Chip>\n              );\n            })}\n          </ChipList>\n        ) : null}\n        <div className=\"text-sm\">\n          <Trans\n            message=\"Upload complete. <a>Go to your track</a>\"\n            values={{\n              a: parts => (\n                <Link\n                  className={LinkStyle}\n                  to={isAlbum ? getAlbumLink(media) : getTrackLink(media)}\n                >\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"ml-auto flex-auto max-w-300\">\n        <div className=\"text-muted text-sm\">\n          <Trans message=\"Share your new track\" />\n          <ShareMediaButtons\n            name={media.name}\n            image={media.image}\n            link={absoluteLink}\n          />\n          <TextField\n            value={absoluteLink}\n            readOnly\n            className=\"mt-24 w-full\"\n            size=\"sm\"\n            onClick={e => {\n              (e.target as HTMLInputElement).select();\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\n      >\n        <Trans message=\"Drop your files anywhere on the page to upload\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useAuth} from '@common/auth/use-auth';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface Response extends BackendResponse {\n  minutesLeft: number | null;\n}\n\nexport function resetMinutesLimitQuery() {\n  const {user} = getBootstrapData();\n  if (user?.id) {\n    queryClient.resetQueries({queryKey: ['minutesLimit', user.id]});\n  }\n}\n\nexport function useUserMinutesLimit() {\n  const {user} = useAuth();\n  const userId = user?.id!;\n  return useQuery({\n    queryKey: ['minutesLimit', userId],\n    queryFn: () => fetchLimit(userId),\n    enabled: userId != null,\n  });\n}\n\nfunction fetchLimit(userId: number): Promise<Response> {\n  return apiClient\n    .get(`users/${userId}/minutes-left`)\n    .then(response => response.data);\n}\n","export default \"__VITE_ASSET__5b7b3136__\"","export default \"__VITE_ASSET__430d5aeb__\"","import {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport lightBgImage from './images/light-bg.svg';\nimport darkBgImage from './images/dark-bg.svg';\nimport {useIsDarkMode} from '@common/ui/themes/use-is-dark-mode';\nimport {ComponentPropsWithoutRef, ReactNode} from 'react';\n\ninterface Props extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nexport function BackstageLayout({children, ...domProps}: Props) {\n  const isDarkMode = useIsDarkMode();\n  return (\n    <div className=\"h-screen flex flex-col\" {...domProps}>\n      <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n      <div\n        className=\"overflow-y-auto flex-auto bg-cover relative\"\n        style={{\n          backgroundImage: `url(${isDarkMode ? darkBgImage : lightBgImage})`,\n        }}\n      >\n        <div className=\"container mx-auto p-14 md:p-24 min-h-full flex flex-col\">\n          <div className=\"flex-auto\">{children}</div>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {ComponentPropsWithoutRef, ReactNode, useRef, useState} from 'react';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {Link} from 'react-router-dom';\nimport {LinkStyle} from '@common/ui/buttons/external-link';\nimport {Track} from '@app/web-player/tracks/track';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumUploader} from '@app/web-player/backstage/upload-page/album-uploader';\nimport {TracksUploader} from '@app/web-player/backstage/upload-page/tracks-uploader';\nimport {UploadedMediaPreview} from '@app/web-player/backstage/upload-page/uploaded-media-preview';\nimport {\n  NativeFileDraggable,\n  useDroppable,\n} from '@common/ui/interactions/dnd/use-droppable';\nimport {DropTargetMask} from '@app/web-player/backstage/upload-page/drop-tarket-mask';\nimport {useTrackUploader} from '@app/web-player/backstage/upload-page/use-track-uploader';\nimport {\n  resetMinutesLimitQuery,\n  useUserMinutesLimit,\n} from '@app/web-player/backstage/upload-page/use-user-minutes-limit';\nimport {BackstageLayout} from '@app/web-player/backstage/backstage-layout';\n\ntype UploadMode = 'album' | 'tracks';\n\nexport interface UploaderProps {\n  onUploadStart: () => void;\n  onCancel: () => void;\n  onCreate: (item: Track | Album) => void;\n}\n\nexport type UploaderActions = ReturnType<typeof useTrackUploader>;\n\ninterface Props {\n  backstageLayout?: boolean;\n}\nexport function UploadPage({backstageLayout = true}: Props) {\n  return (\n    <FileUploadProvider>\n      <Content backstageLayout={backstageLayout} />\n    </FileUploadProvider>\n  );\n}\n\nfunction Content({backstageLayout}: Props) {\n  const [uploadMode, setUploadMode] = useState<UploadMode>('tracks');\n  const [modeIsLocked, setModeIsLocked] = useState(false);\n\n  const uploaderRef = useRef<UploaderActions>(null);\n  const Uploader = uploadMode === 'tracks' ? TracksUploader : AlbumUploader;\n\n  const [createdItems, setCreatedItems] = useState<(Album | Track)[]>([]);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {droppableProps} = useDroppable({\n    id: 'uploadPageRoot',\n    ref,\n    types: ['nativeFile'],\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop: async draggable => {\n      if (draggable.type === 'nativeFile') {\n        const files = await (draggable as NativeFileDraggable).getData();\n        const validFiles = uploaderRef.current?.validateUploads(files);\n        if (validFiles?.length) {\n          uploaderRef.current?.uploadTracks(validFiles);\n        }\n      }\n    },\n  });\n\n  const Wrapper = backstageLayout ? BackstageLayout : DefaultWrapper;\n\n  return (\n    <Wrapper {...droppableProps}>\n      {!modeIsLocked && (\n        <UploadPanel\n          onUpload={() => uploaderRef.current?.openFilePicker()}\n          uploadMode={uploadMode}\n          onUploadModeChange={setUploadMode}\n        />\n      )}\n      {createdItems.map(item => (\n        <UploadedMediaPreview key={item.id} media={item} />\n      ))}\n      <Uploader\n        ref={uploaderRef}\n        onUploadStart={() => setModeIsLocked(true)}\n        onCreate={item => {\n          setCreatedItems(prev => [...prev, item]);\n          resetMinutesLimitQuery();\n        }}\n        onCancel={() => {\n          setModeIsLocked(false);\n        }}\n      />\n      <DropTargetMask isVisible={isDragOver} />\n    </Wrapper>\n  );\n}\n\ninterface UploadPanelProps {\n  onUpload: () => void;\n  uploadMode: UploadMode;\n  onUploadModeChange: (newMode: UploadMode) => void;\n}\nfunction UploadPanel({\n  onUpload,\n  uploadMode,\n  onUploadModeChange,\n}: UploadPanelProps) {\n  const {data} = useUserMinutesLimit();\n  return (\n    <div className=\"pt-40\">\n      <div className=\"border rounded p-20 md:p-48 flex flex-col items-center max-w-580 mx-auto bg-paper\">\n        <h1 className=\"text-base md:text-[22px] md:font-light\">\n          <Trans message=\"Drag and drop your tracks, videos & albums here.\" />\n        </h1>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          className=\"mt-20 w-min\"\n          onClick={() => onUpload()}\n        >\n          <Trans message=\"Or choose files to upload\" />\n        </Button>\n        <div className=\"border-t pt-20 mt-20\">\n          <Switch\n            checked={uploadMode === 'album'}\n            onChange={e =>\n              onUploadModeChange(e.target.checked ? 'album' : 'tracks')\n            }\n          >\n            <Trans message=\"Make an album when multiple files are selected\" />\n          </Switch>\n        </div>\n      </div>\n      <div className=\"text-muted mt-20 text-sm text-center min-h-20\">\n        {data?.minutesLeft != null && (\n          <Trans\n            message=\"You have :count minutes left. Try <a>Pro accounts</a> to get more time and access to advanced features.\"\n            values={{\n              count: data.minutesLeft,\n              a: parts => (\n                <Link className={LinkStyle} to=\"/pricing\">\n                  {parts}\n                </Link>\n              ),\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface DefaultWrapperProps extends ComponentPropsWithoutRef<'div'> {\n  children: ReactNode;\n}\nfunction DefaultWrapper({children, ...domProps}: DefaultWrapperProps) {\n  return (\n    <div {...domProps} className=\"min-h-full relative\">\n      <div className=\"container mx-auto p-14 md:p-24\">{children}</div>\n    </div>\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport React, {useEffect} from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {AlbumForm} from '@app/admin/albums-datatable-page/album-form/album-form';\nimport {\n  CreateAlbumPayload,\n  useCreateAlbum,\n} from '@app/admin/albums-datatable-page/requests/use-create-album';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useLocation, useSearchParams} from 'react-router-dom';\nimport {useNormalizedModel} from '@common/users/queries/use-normalized-model';\nimport {useCurrentDateTime} from '@common/i18n/use-current-date-time';\nimport {getAlbumLink} from '@app/web-player/albums/album-link';\nimport {\n  FileUploadProvider,\n  useFileUploadStore,\n} from '@common/uploads/uploader/file-upload-provider';\n\ninterface Props {\n  wrapInContainer?: boolean;\n}\nexport function CreateAlbumPage({wrapInContainer}: Props) {\n  return (\n    <FileUploadProvider>\n      <PageContent wrapInContainer={wrapInContainer} />\n    </FileUploadProvider>\n  );\n}\n\nfunction PageContent({wrapInContainer}: Props) {\n  const uploadIsInProgress = !!useFileUploadStore(s => s.activeUploadsCount);\n  const now = useCurrentDateTime();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  const [searchParams] = useSearchParams();\n  const {data} = useNormalizedModel(\n    `normalized-models/artist/${searchParams.get('artistId')}`,\n    undefined,\n    {enabled: !!searchParams.get('artistId')},\n  );\n  const artist = data?.model;\n  const form = useForm<CreateAlbumPayload>({\n    defaultValues: {\n      release_date: now.toAbsoluteString(),\n    },\n  });\n  const createAlbum = useCreateAlbum(form);\n\n  useEffect(() => {\n    if (artist) {\n      form.reset({\n        artists: [artist],\n      });\n    }\n  }, [artist, form]);\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        createAlbum.mutate(values, {\n          onSuccess: response => {\n            if (pathname.includes('admin')) {\n              if (artist) {\n                navigate(`/admin/artists/${artist.id}/edit`);\n              } else {\n                navigate('/admin/albums');\n              }\n            } else {\n              navigate(getAlbumLink(response.album));\n            }\n          },\n        });\n      }}\n      title={<Trans message=\"Add new album\" />}\n      isLoading={createAlbum.isPending || uploadIsInProgress}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <AlbumForm showExternalIdFields />\n    </CrupdateResourceLayout>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router-dom';\nimport {BackstageRequest} from '@app/web-player/backstage/backstage-request';\n\ninterface Response extends BackendResponse {\n  request: BackstageRequest;\n}\n\nexport function useBackstageRequest() {\n  const {requestId} = useParams();\n  return useQuery({\n    queryKey: ['backstage-request', +requestId!],\n    queryFn: () => fetchBackstageRequest(requestId!),\n  });\n}\n\nfunction fetchBackstageRequest(trackId: number | string) {\n  return apiClient\n    .get<Response>(`backstage-request/${trackId}`)\n    .then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const DocumentScannerIcon = createSvgIcon(\n  <path d=\"M7 3H4v3H2V1h5v2zm15 3V1h-5v2h3v3h2zM7 21H4v-3H2v5h5v-2zm13-3v3h-3v2h5v-5h-2zM17 6H7v12h10V6zm2 12c0 1.1-.9 2-2 2H7c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v12zM15 8H9v2h6V8zm0 3H9v2h6v-2zm0 3H9v2h6v-2z\" />\n, 'DocumentScannerOutlined');\n","import {createSvgIcon} from '@common/icons/create-svg-icon';\n\nexport const InfoDialogTriggerIcon = createSvgIcon(\n  <path d=\"M9 8a1 1 0 0 0-1-1H5.5a1 1 0 1 0 0 2H7v4a1 1 0 0 0 2 0zM4 0h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4zm4 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />,\n  'InfoDialogTrigger'\n);\n","import {useFormContext} from 'react-hook-form';\nimport React from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {EditIcon} from '@common/icons/material/Edit';\nimport musicImage from '@app/admin/tracks-datatable-page/music.svg';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {Link} from 'react-router-dom';\nimport {ColumnConfig} from '@common/datatable/column-config';\nimport {Album} from '@app/web-player/albums/album';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {Table} from '@common/ui/tables/table';\nimport {useSortableTableData} from '@common/ui/tables/use-sortable-table-data';\nimport {UpdateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useDeleteAlbum} from '@app/web-player/albums/requests/use-delete-album';\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\n\nconst Columns: ColumnConfig<Album>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    visibleInMode: 'all',\n    width: 'flex-3',\n    body: album => (\n      <div className=\"flex items-center gap-12\">\n        <AlbumImage\n          album={album}\n          className=\"flex-shrink-0\"\n          size=\"w-34 h-34 rounded\"\n        />\n        <AlbumLink album={album} target=\"_blank\" />\n      </div>\n    ),\n  },\n  {\n    key: 'release_date',\n    allowsSorting: true,\n    header: () => <Trans message=\"Release date\" />,\n    body: album =>\n      album.release_date ? <FormattedDate date={album.release_date} /> : null,\n  },\n  {\n    key: 'track_count',\n    allowsSorting: false,\n    header: () => <Trans message=\"Track count\" />,\n    body: album =>\n      album.tracks_count ? (\n        <FormattedNumber value={album.tracks_count} />\n      ) : null,\n  },\n  {\n    key: 'plays',\n    allowsSorting: true,\n    header: () => <Trans message=\"Plays\" />,\n    body: album =>\n      album.plays ? <FormattedNumber value={album.plays} /> : null,\n  },\n  {\n    key: 'actions',\n    header: () => <Trans message=\"Actions\" />,\n    width: 'w-84 flex-shrink-0',\n    visibleInMode: 'all',\n    hideHeader: true,\n    align: 'end',\n    body: album => <RowActions album={album} />,\n  },\n];\n\ninterface Props {\n  albums?: Album[];\n}\nexport function ArtistAlbumsTable({albums = []}: Props) {\n  const {watch} = useFormContext<UpdateArtistPayload>();\n  const artistId = watch('id');\n  const {data, sortDescriptor, onSortChange} = useSortableTableData(albums);\n  return (\n    <div>\n      <div className=\"my-24\">\n        <div className=\"flex items-center gap-12\">\n          <h2 className=\"text-xl font-semibold\">\n            <Trans message=\"Albums\" />\n          </h2>\n          <Button\n            variant=\"outline\"\n            color=\"primary\"\n            size=\"xs\"\n            className=\"ml-auto\"\n            startIcon={<AddIcon />}\n            elementType={artistId ? Link : undefined}\n            to={`../../../albums/new?artistId=${artistId}`}\n            relative=\"path\"\n            disabled={!artistId}\n          >\n            <Trans message=\"Add album\" />\n          </Button>\n        </div>\n\n        {!artistId && (\n          <div className=\"flex items-center gap-6 text-sm\">\n            <InfoDialogTriggerIcon\n              viewBox=\"0 0 16 16\"\n              size=\"xs\"\n              className=\"text-muted\"\n            />\n            <Trans message=\"Save changes to enable album creation.\" />\n          </div>\n        )}\n      </div>\n\n      <Table\n        columns={Columns}\n        data={albums}\n        sortDescriptor={sortDescriptor}\n        onSortChange={onSortChange}\n        enableSelection={false}\n      />\n\n      {!data.length ? (\n        <IllustratedMessage\n          className=\"mt-40\"\n          image={<SvgImage src={musicImage} />}\n          title={<Trans message=\"This artist does not have any albums yet\" />}\n        />\n      ) : null}\n    </div>\n  );\n}\n\ninterface RowActionsProps {\n  album: Album;\n}\nfunction RowActions({album}: RowActionsProps) {\n  const deleteAlbum = useDeleteAlbum();\n  return (\n    <div className=\"text-muted\">\n      <Link to={`../../../albums/${album.id}/edit`} relative=\"path\">\n        <IconButton size=\"md\">\n          <EditIcon />\n        </IconButton>\n      </Link>\n      <DialogTrigger\n        type=\"modal\"\n        onClose={isConfirmed => {\n          if (isConfirmed) {\n            deleteAlbum.mutate({albumId: album.id});\n          }\n        }}\n      >\n        <IconButton size=\"md\" disabled={deleteAlbum.isPending}>\n          <CloseIcon />\n        </IconButton>\n        <ConfirmationDialog\n          isDanger\n          title={<Trans message=\"Delete album\" />}\n          body={<Trans message=\"Are you sure you want to delete this album?\" />}\n          confirm={<Trans message=\"Delete\" />}\n        />\n      </DialogTrigger>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormNormalizedModelChipField} from '@common/tags/form-normalized-model-chip-field';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {GENRE_MODEL} from '@app/web-player/genres/genre';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {ArtistAlbumsTable} from '@app/admin/artist-datatable-page/artist-form/artist-albums-table';\nimport {Album} from '@app/web-player/albums/album';\nimport {TabList} from '@common/ui/tabs/tab-list';\nimport {Tab} from '@common/ui/tabs/tab';\nimport {TabPanel, TabPanels} from '@common/ui/tabs/tab-panels';\nimport {Tabs} from '@common/ui/tabs/tabs';\nimport {useFieldArray} from 'react-hook-form';\nimport {Button} from '@common/ui/buttons/button';\nimport {AddIcon} from '@common/icons/material/Add';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {ProfileLinksForm} from '@app/admin/artist-datatable-page/artist-form/profile-links-form';\n\ninterface Props {\n  albums?: Album[];\n  showExternalFields?: boolean;\n}\nexport function CrupdateArtistForm({albums, showExternalFields}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <FileUploadProvider>\n      <div className=\"md:flex gap-24\">\n        <div className=\"flex-shrink-0\">\n          <FormImageSelector\n            name=\"image_small\"\n            diskPrefix=\"artist_images\"\n            label={isMobile ? <Trans message=\"Image\" /> : null}\n            variant={isMobile ? 'input' : 'square'}\n            previewSize={isMobile ? undefined : 'w-full md:w-224 aspect-square'}\n            stretchPreview\n          />\n          {showExternalFields && (\n            <FormSwitch name=\"verified\" className=\"mt-14\">\n              <Trans message=\"Verified\" />\n            </FormSwitch>\n          )}\n        </div>\n        <div className=\"flex-auto mt-24 md:mt-0\">\n          <Tabs isLazy>\n            <TabList>\n              <Tab>\n                <Trans message=\"Details\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Links\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Biography\" />\n              </Tab>\n              <Tab>\n                <Trans message=\"Images\" />\n              </Tab>\n            </TabList>\n            <TabPanels className=\"pt-20\">\n              <TabPanel>\n                <DetailsPanel showExternalFields={showExternalFields} />\n              </TabPanel>\n              <TabPanel>\n                <ProfileLinksForm />\n              </TabPanel>\n              <TabPanel>\n                <BiographyPanel />\n              </TabPanel>\n              <TabPanel>\n                <ImagesPanel />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n      <ArtistAlbumsTable albums={albums} />\n    </FileUploadProvider>\n  );\n}\n\ninterface DetailsPanelProps {\n  showExternalFields?: boolean;\n}\nfunction DetailsPanel({showExternalFields}: DetailsPanelProps) {\n  const {trans} = useTrans();\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"name\"\n        label={<Trans message=\"Name\" />}\n        className=\"mb-24\"\n        required\n        autoFocus\n        disabled={!showExternalFields}\n      />\n      <FormNormalizedModelChipField\n        label={<Trans message=\"Genres\" />}\n        placeholder={trans(message('+Add genre'))}\n        model={GENRE_MODEL}\n        name=\"genres\"\n        allowCustomValue\n        className=\"mb-24\"\n      />\n      {showExternalFields && <SpotifyIdField />}\n    </Fragment>\n  );\n}\n\nfunction BiographyPanel() {\n  return (\n    <Fragment>\n      <FormTextField\n        name=\"profile.country\"\n        label={<Trans message=\"Country\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        name=\"profile.city\"\n        label={<Trans message=\"City\" />}\n        className=\"mb-24\"\n      />\n      <FormTextField\n        inputElementType=\"textarea\"\n        rows={5}\n        name=\"profile.description\"\n        label={<Trans message=\"Description\" />}\n        className=\"mb-24\"\n      />\n    </Fragment>\n  );\n}\n\nfunction ImagesPanel() {\n  const {fields, append, remove} = useFieldArray<CreateArtistPayload>({\n    name: 'profile_images',\n  });\n\n  return (\n    <div>\n      <div className=\"flex gap-12 flex-wrap mb-24\">\n        {fields.map((field, index) => {\n          return (\n            <FormImageSelector\n              key={field.id}\n              name={`profile_images.${index}.url`}\n              diskPrefix=\"artist_images\"\n              variant=\"square\"\n              previewSize=\"w-160 h-160\"\n              stretchPreview\n              showRemoveButton\n              onChange={value => {\n                if (!value) {\n                  remove(index);\n                }\n              }}\n            />\n          );\n        })}\n      </div>\n      <Button\n        variant=\"outline\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        onClick={() => {\n          append({url: ''});\n        }}\n      >\n        <Trans message=\"Add another image\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction SpotifyIdField() {\n  const {spotify_is_setup} = useSettings();\n  if (!spotify_is_setup) {\n    return null;\n  }\n  return (\n    <FormTextField\n      name=\"spotify_id\"\n      label={<Trans message=\"Spotify ID\" />}\n      className=\"mb-24\"\n      minLength={22}\n      maxLength={22}\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {CreateArtistPayload} from '@app/admin/artist-datatable-page/requests/use-create-artist';\nimport {useLocation} from 'react-router-dom';\nimport {getArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Response extends BackendResponse {\n  artist: Artist;\n}\n\nexport interface UpdateArtistPayload extends CreateArtistPayload {\n  id: number;\n}\n\nconst Endpoint = (id: number) => `artists/${id}`;\n\nexport function useUpdateArtist(form: UseFormReturn<UpdateArtistPayload>) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const {pathname} = useLocation();\n  return useMutation({\n    mutationFn: (payload: UpdateArtistPayload) => updateAlbum(payload),\n    onSuccess: response => {\n      toast(trans(message('Artist updated')));\n      queryClient.invalidateQueries({\n        queryKey: DatatableDataQueryKey('artists'),\n      });\n      if (pathname.includes('admin')) {\n        navigate('/admin/artists');\n      } else {\n        navigate(getArtistLink(response.artist));\n      }\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction updateAlbum({id, ...payload}: UpdateArtistPayload): Promise<Response> {\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport React from 'react';\nimport {CrupdateResourceLayout} from '@common/admin/crupdate-resource-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {PageStatus} from '@common/http/page-status';\nimport {\n  useArtist,\n  UseArtistResponse,\n} from '@app/web-player/artists/requests/use-artist';\nimport {\n  UpdateArtistPayload,\n  useUpdateArtist,\n} from '@app/admin/artist-datatable-page/requests/use-update-artist';\nimport {CrupdateArtistForm} from '@app/admin/artist-datatable-page/artist-form/crupdate-artist-form';\nimport {useArtistPermissions} from '@app/web-player/artists/use-artist-permissions';\nimport {Navigate} from 'react-router-dom';\n\ninterface Props {\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nexport function UpdateArtistPage({wrapInContainer, showExternalFields}: Props) {\n  const query = useArtist({\n    loader: 'editArtistPage',\n  });\n\n  if (query.data) {\n    return (\n      <PageContent\n        response={query.data}\n        wrapInContainer={wrapInContainer}\n        showExternalFields={showExternalFields}\n      />\n    );\n  }\n\n  return <PageStatus query={query} loaderClassName=\"absolute inset-0 m-auto\" />;\n}\n\ninterface PageContentProps {\n  response: UseArtistResponse;\n  wrapInContainer?: boolean;\n  showExternalFields?: boolean;\n}\nfunction PageContent({\n  response,\n  wrapInContainer,\n  showExternalFields,\n}: PageContentProps) {\n  const {canEdit} = useArtistPermissions(response.artist);\n  const form = useForm<UpdateArtistPayload>({\n    defaultValues: {\n      id: response.artist.id,\n      name: response.artist.name,\n      verified: response.artist.verified,\n      spotify_id: response.artist.spotify_id,\n      genres: response.artist.genres,\n      image_small: response.artist.image_small,\n      links: response.artist.links,\n      profile: response.artist.profile,\n      profile_images: response.artist.profile_images,\n    },\n  });\n  const updateArtist = useUpdateArtist(form);\n\n  if (!canEdit) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <CrupdateResourceLayout\n      form={form}\n      onSubmit={values => {\n        updateArtist.mutate(values);\n      }}\n      title={\n        <Trans\n          message=\"Edit “:name“ artist\"\n          values={{name: response.artist.name}}\n        />\n      }\n      isLoading={updateArtist.isPending}\n      disableSaveWhenNotDirty\n      wrapInContainer={wrapInContainer}\n    >\n      <CrupdateArtistForm\n        albums={response.albums?.data}\n        showExternalFields={showExternalFields}\n      />\n    </CrupdateResourceLayout>\n  );\n}\n","import {useDateRangePickerState} from '@common/ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {Button} from '@common/ui/buttons/button';\nimport {DateRangeIcon} from '@common/icons/material/DateRange';\nimport {FormattedDateTimeRange} from '@common/i18n/formatted-date-time-range';\nimport {DateRangeDialog} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\nimport React from 'react';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {DateFormatPresets} from '@common/i18n/formatted-date';\nimport {DateRangeComparePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\nimport {Granularity} from '@common/ui/forms/input-field/date/date-picker/use-date-picker-state';\n\nconst monthDayFormat: Intl.DateTimeFormatOptions = {\n  month: 'short',\n  day: '2-digit',\n};\n\ninterface ReportDataSelectorProps {\n  value: DateRangeValue;\n  disabled?: boolean;\n  onChange: (value: DateRangeValue) => void;\n  compactOnMobile?: boolean;\n  enableCompare?: boolean;\n  granularity?: Granularity;\n}\nexport function ReportDateSelector({\n  value,\n  onChange,\n  disabled,\n  compactOnMobile = true,\n  enableCompare = false,\n  granularity = 'minute',\n}: ReportDataSelectorProps) {\n  const isMobile = useIsMobileMediaQuery();\n  return (\n    <DialogTrigger\n      type=\"popover\"\n      onClose={value => {\n        if (value) {\n          onChange(value);\n        }\n      }}\n    >\n      <Button\n        variant=\"outline\"\n        color=\"chip\"\n        endIcon={<DateRangeIcon />}\n        disabled={disabled}\n      >\n        <FormattedDateTimeRange\n          start={value.start}\n          end={value.end}\n          options={\n            isMobile && compactOnMobile\n              ? monthDayFormat\n              : DateFormatPresets.short\n          }\n        />\n      </Button>\n      <DateSelectorDialog\n        value={value}\n        enableCompare={enableCompare}\n        granularity={granularity}\n      />\n    </DialogTrigger>\n  );\n}\n\ninterface DateSelectorDialogProps {\n  value: DateRangeValue;\n  enableCompare: boolean;\n  granularity: Granularity;\n}\nfunction DateSelectorDialog({\n  value,\n  enableCompare,\n  granularity,\n}: DateSelectorDialogProps) {\n  const isMobile = useIsMobileMediaQuery();\n  const state = useDateRangePickerState({\n    granularity,\n    defaultValue: {\n      start: value.start,\n      end: value.end,\n      preset: value.preset,\n    },\n    closeDialogOnSelection: false,\n  });\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\n  const compareState = useDateRangePickerState({\n    granularity,\n    defaultValue: compareHasInitialValue\n      ? {\n          start: value.compareStart,\n          end: value.compareEnd,\n          preset: value.comparePreset,\n        }\n      : DateRangeComparePresets[0].getRangeValue(state.selectedValue),\n  });\n  return (\n    <DateRangeDialog\n      state={state}\n      compareState={enableCompare ? compareState : undefined}\n      compareVisibleDefault={compareHasInitialValue}\n      showInlineDatePickerField={!isMobile}\n    />\n  );\n}\n","import {ReactNode, Ref} from 'react';\nimport clsx from 'clsx';\n\nexport interface ChartLayoutProps {\n  title: ReactNode;\n  description?: ReactNode;\n  className?: string;\n  children: ReactNode;\n  contentIsFlex?: boolean;\n  contentClassName?: string;\n  minHeight?: string;\n  contentRef?: Ref<HTMLDivElement>;\n  isLoading?: boolean;\n}\nexport function ChartLayout(props: ChartLayoutProps) {\n  const {\n    title,\n    description,\n    children,\n    className,\n    contentIsFlex = true,\n    contentClassName,\n    contentRef,\n    minHeight = 'min-h-440',\n  } = props;\n\n  return (\n    <div\n      className={clsx(\n        'rounded-panel flex h-full flex-auto flex-col border bg',\n        minHeight,\n        className,\n      )}\n    >\n      <div className=\"flex flex-shrink-0 items-center justify-between p-14 text-xs\">\n        <div className=\"text-sm font-semibold\">{title}</div>\n        {description && <div className=\"text-muted\">{description}</div>}\n      </div>\n      <div\n        ref={contentRef}\n        className={clsx(\n          'relative p-14',\n          contentIsFlex && 'flex flex-auto items-center justify-center',\n          contentClassName,\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","import {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {Trans} from '@common/i18n/trans';\n\nexport function ChartLoadingIndicator() {\n  return (\n    <div className=\"flex items-center gap-10 text-sm absolute mx-auto\">\n      <ProgressCircle isIndeterminate size=\"sm\" />\n      <Trans message=\"Chart loading\" />\n    </div>\n  );\n}\n","import type {ChartData, ChartOptions, ChartType} from 'chart.js';\nimport {lazy, Suspense} from 'react';\nimport {ChartLayout, ChartLayoutProps} from './chart-layout';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\n\nconst LazyChart = lazy(() => import('./lazy-chart'));\n\nexport interface BaseChartProps<Type extends ChartType = ChartType>\n  extends Omit<ChartLayoutProps, 'children'> {\n  type: Type;\n  data: ChartData<Type, unknown>;\n  options?: ChartOptions<Type>;\n  hideLegend?: boolean;\n}\nexport function BaseChart<Type extends ChartType = ChartType>(\n  props: BaseChartProps<Type>\n) {\n  const {title, description, className, contentRef, isLoading} = props;\n\n  return (\n    <ChartLayout\n      title={title}\n      description={description}\n      className={className}\n      contentRef={contentRef}\n    >\n      <Suspense fallback={<ChartLoadingIndicator />}>\n        <LazyChart {...props} />\n        {isLoading && <ChartLoadingIndicator />}\n      </Suspense>\n    </ChartLayout>\n  );\n}\n","import {DateFormatter, parseAbsoluteToLocal} from '@internationalized/date';\nimport memoize from 'nano-memoize';\nimport {ChartType} from 'chart.js';\nimport {\n  FormattedDatasetItem,\n  FormattedReportData,\n} from './formatted-dataset-item';\nimport {\n  DatasetItem,\n  RangedDatasetGranularity,\n  ReportMetric,\n} from '../../admin/analytics/report-metric';\nimport {shallowEqual} from '../../utils/shallow-equal';\n\ninterface Options {\n  localeCode: string;\n  shareFirstDatasetLabels?: boolean;\n}\n\ntype FormattedDatasetLabels = Omit<FormattedDatasetItem, 'value'>;\n\nexport function formatReportData(\n  report: ReportMetric<DatasetItem> | undefined,\n  {localeCode = 'en', shareFirstDatasetLabels = true}: Options,\n): FormattedReportData {\n  if (!report) return {datasets: []};\n\n  const firstDatasetLabels: FormattedDatasetLabels[] = [];\n\n  return {\n    ...report,\n    datasets: report.datasets.map((dataset, datasetIndex) => {\n      const data = dataset.data.map((datasetItem, itemIndex) => {\n        let label: FormattedDatasetLabels;\n        // when there are multiple datasets, we'll need to use labels from the first dataset, so charts are\n        // overlapped over one another, otherwise they will be side by side, if labels in all datasets are not identical.\n        if (datasetIndex === 0 || !shareFirstDatasetLabels) {\n          label = generateDatasetLabels(\n            datasetItem,\n            report.granularity,\n            localeCode,\n          );\n          firstDatasetLabels[itemIndex] = label;\n        } else {\n          label = firstDatasetLabels[itemIndex];\n        }\n        return {\n          ...label,\n          value: datasetItem.value,\n        };\n      });\n\n      return {...dataset, data};\n    }),\n  };\n}\n\nfunction generateDatasetLabels<T extends ChartType = ChartType>(\n  datum: DatasetItem,\n  granularity: RangedDatasetGranularity | undefined,\n  locale: string,\n): FormattedDatasetLabels {\n  if (datum.label) {\n    return {label: datum.label};\n  }\n\n  if (!datum.date) {\n    return {label: ''};\n  }\n\n  return generateTimeLabels(datum, granularity, locale);\n}\n\nfunction generateTimeLabels(\n  {date: isoDate, endDate: isoEndDate}: DatasetItem,\n  granularity: RangedDatasetGranularity | undefined = 'day',\n  locale: string,\n): Omit<FormattedDatasetItem, 'value'> {\n  const date = parseAbsoluteToLocal(isoDate!).toDate();\n  const endDate = isoEndDate ? parseAbsoluteToLocal(isoEndDate).toDate() : null;\n\n  switch (granularity) {\n    case 'minute':\n      return {\n        label: getFormatter(locale, {\n          second: '2-digit',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric',\n          second: '2-digit',\n        }).format(date),\n      };\n    case 'hour':\n      return {\n        label: getFormatter(locale, {\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric',\n        }).format(date),\n      };\n    case 'day':\n      return {\n        label: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short',\n          month: 'short',\n        }).format(date),\n      };\n    case 'week':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          month: 'long',\n          year: 'numeric',\n        }).formatRange(date, endDate as Date),\n      };\n    case 'month':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          year: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'long',\n          year: 'numeric',\n        }).format(date),\n      };\n    case 'year':\n      return {\n        label: getFormatter(locale, {\n          year: 'numeric',\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          year: 'numeric',\n        }).format(date),\n      };\n  }\n}\n\nconst getFormatter = memoize(\n  (locale, options: Intl.DateTimeFormatOptions) => {\n    return new DateFormatter(locale, options);\n  },\n  {\n    equals: (a, b) => {\n      return shallowEqual(a, b);\n    },\n    callTimeout: undefined as any,\n  },\n);\n","import {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nconst primaryColor = getBootstrapData().themes.all[0].values['--be-primary'];\nexport const ChartColors = [\n  [\n    `rgb(${primaryColor.replaceAll(' ', ',')})`,\n    `rgba(${primaryColor.replaceAll(' ', ',')},0.2)`,\n  ],\n  ['rgb(255,112,67)', 'rgb(255,112,67,0.2)'],\n  ['rgb(255,167,38)', 'rgb(255,167,38,0.2)'],\n  ['rgb(141,110,99)', 'rgb(141,110,99,0.2)'],\n  ['rgb(102,187,106)', 'rgba(102,187,106,0.2)'],\n  ['rgb(92,107,192)', 'rgb(92,107,192,0.2)'],\n];\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\nimport {useMemo} from 'react';\nimport {formatReportData} from './data/format-report-data';\nimport {useSelectedLocale} from '../i18n/selected-locale';\nimport {ChartData, ChartOptions} from 'chart.js';\nimport {ChartColors} from './chart-colors';\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\nimport clsx from 'clsx';\n\nconst LineChartOptions: ChartOptions<'line'> = {\n  parsing: {\n    xAxisKey: 'label',\n    yAxisKey: 'value',\n  },\n  datasets: {\n    line: {\n      fill: 'origin',\n      tension: 0.1,\n      pointBorderWidth: 4,\n      pointHitRadius: 10,\n    },\n  },\n  plugins: {\n    tooltip: {\n      intersect: false,\n      mode: 'index',\n    },\n  },\n};\n\ninterface LineChartProps extends Omit<BaseChartProps<'line'>, 'type' | 'data'> {\n  data?: ReportMetric<DatasetItem>;\n}\nexport function LineChart({data, className, ...props}: LineChartProps) {\n  const {localeCode} = useSelectedLocale();\n  const formattedData: ChartData<'line', FormattedDatasetItem[]> =\n    useMemo(() => {\n      const formattedData = formatReportData(data, {localeCode});\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n        ...dataset,\n        backgroundColor: ChartColors[i][1],\n        borderColor: ChartColors[i][0],\n        pointBackgroundColor: ChartColors[i][0],\n      }));\n      return formattedData;\n    }, [data, localeCode]);\n\n  return (\n    <BaseChart\n      {...props}\n      className={clsx(className, 'min-w-500')}\n      data={formattedData}\n      type=\"line\"\n      options={LineChartOptions}\n    />\n  );\n}\n","import {BaseChart, BaseChartProps} from './base-chart';\nimport {ChartData, ChartOptions} from 'chart.js';\nimport {ChartColors} from './chart-colors';\nimport {useSelectedLocale} from '../i18n/selected-locale';\nimport {useMemo} from 'react';\nimport {formatReportData} from './data/format-report-data';\nimport {DatasetItem, ReportMetric} from '../admin/analytics/report-metric';\nimport {FormattedDatasetItem} from './data/formatted-dataset-item';\nimport clsx from 'clsx';\n\nconst PolarAreaChartOptions: ChartOptions<'polarArea'> = {\n  parsing: {\n    key: 'value',\n  },\n  plugins: {\n    tooltip: {\n      intersect: true,\n    },\n  },\n};\n\ninterface PolarAreaChartProps\n  extends Omit<BaseChartProps<'polarArea'>, 'type' | 'data'> {\n  data?: ReportMetric<DatasetItem>;\n}\nexport function PolarAreaChart({\n  data,\n  className,\n  ...props\n}: PolarAreaChartProps) {\n  const {localeCode} = useSelectedLocale();\n  const formattedData: ChartData<'polarArea', FormattedDatasetItem[]> =\n    useMemo(() => {\n      const formattedData = formatReportData(data, {localeCode});\n      formattedData.labels = formattedData.datasets[0]?.data.map(d => d.label);\n      formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n        ...dataset,\n        backgroundColor: ChartColors.map(c => c[1]),\n        borderColor: ChartColors.map(c => c[0]),\n        borderWidth: 2,\n      }));\n      return formattedData;\n    }, [data, localeCode]);\n\n  return (\n    <BaseChart\n      type=\"polarArea\"\n      data={formattedData}\n      options={PolarAreaChartOptions}\n      className={clsx(className, 'min-w-500')}\n      {...props}\n    />\n  );\n}\n","import lazyLoader from '../../../utils/http/lazy-loader';\nimport {useSettings} from '@common/core/settings/use-settings';\nimport {RefObject, useCallback, useEffect, useRef} from 'react';\nimport {useThemeSelector} from '@common/ui/themes/theme-selector-context';\nimport {themeValueToHex} from '@common/ui/themes/utils/theme-value-to-hex';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {LocationDatasetItem} from '@common/admin/analytics/report-metric';\n\nconst loaderUrl = 'https://www.gstatic.com/charts/loader.js';\n\ninterface UseGoogleGeoChartProps {\n  placeholderRef: RefObject<HTMLDivElement>;\n  data: LocationDatasetItem[];\n  onCountrySelected?: (countryCode: string) => void;\n  country?: string;\n}\nexport function useGoogleGeoChart({\n  placeholderRef,\n  data,\n  country,\n  onCountrySelected,\n}: UseGoogleGeoChartProps) {\n  const {trans} = useTrans();\n  const {analytics} = useSettings();\n  const apiKey = analytics?.gchart_api_key;\n  const {selectedTheme} = useThemeSelector();\n  const geoChartRef = useRef<google.visualization.GeoChart>();\n  // only allow selecting countries, not cities\n  const regionInteractivity = !!onCountrySelected && !country;\n  const drawGoogleChart = useCallback(() => {\n    if (typeof google === 'undefined') return;\n\n    const seedData = data.map(location => [location.label, location.value]);\n    seedData.unshift([\n      country ? trans(message('City')) : trans(message('Country')),\n      trans(message('Clicks')),\n    ]);\n\n    const backgroundColor = `${themeValueToHex(\n      selectedTheme.values['--be-paper'],\n    )}`;\n    const chartColor = `${themeValueToHex(\n      selectedTheme.values['--be-primary'],\n    )}`;\n\n    const options: google.visualization.GeoChartOptions = {\n      colorAxis: {colors: [chartColor]},\n      backgroundColor,\n      region: country ? country.toUpperCase() : undefined,\n      resolution: country ? 'provinces' : 'countries',\n      displayMode: country ? 'markers' : 'regions',\n      enableRegionInteractivity: regionInteractivity,\n    };\n\n    if (\n      !geoChartRef.current &&\n      placeholderRef.current &&\n      google?.visualization?.GeoChart\n    ) {\n      geoChartRef.current = new google.visualization.GeoChart(\n        placeholderRef.current,\n      );\n    }\n    geoChartRef.current?.draw(\n      google.visualization.arrayToDataTable(seedData),\n      options,\n    );\n  }, [\n    selectedTheme,\n    data,\n    placeholderRef,\n    trans,\n    country,\n    regionInteractivity,\n  ]);\n\n  const initGoogleGeoChart = useCallback(async () => {\n    if (lazyLoader.isLoadingOrLoaded(loaderUrl)) return;\n    await lazyLoader.loadAsset(loaderUrl, {type: 'js', id: 'google-charts-js'});\n    await google.charts.load('current', {\n      packages: ['geochart'],\n      mapsApiKey: apiKey,\n    });\n    drawGoogleChart();\n  }, [apiKey, drawGoogleChart]);\n\n  useEffect(() => {\n    if (geoChartRef.current && onCountrySelected) {\n      google.visualization.events.addListener(\n        geoChartRef.current,\n        'regionClick',\n        (a: {region: string}) => onCountrySelected?.(a.region),\n      );\n    }\n\n    return () => {\n      if (geoChartRef.current) {\n        google.visualization.events.removeAllListeners(geoChartRef.current);\n      }\n    };\n    // this will correctly run when geochart instance is set on ref\n  }, [onCountrySelected, geoChartRef.current]);\n\n  // on component load: load chart library then draw, otherwise just draw\n  useEffect(() => {\n    initGoogleGeoChart();\n  }, [initGoogleGeoChart]);\n\n  // redraw chart if data or theme changes\n  useEffect(() => {\n    drawGoogleChart();\n  }, [selectedTheme, drawGoogleChart, data]);\n\n  return {drawGoogleChart};\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ArrowBackIcon = createSvgIcon(\n  <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n, 'ArrowBackOutlined');\n","import {IconButton} from '@common/ui/buttons/icon-button';\nimport {InfoDialogTriggerIcon} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport {Dialog, DialogSize} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface InfoDialogTriggerProps {\n  title?: ReactNode;\n  body: ReactNode;\n  dialogSize?: DialogSize;\n  className?: string;\n}\nexport function InfoDialogTrigger({\n  title,\n  body,\n  dialogSize = 'sm',\n  className,\n}: InfoDialogTriggerProps) {\n  return (\n    <DialogTrigger type=\"popover\" triggerOnHover>\n      <IconButton\n        className={clsx('ml-4 text-muted opacity-70', className)}\n        iconSize=\"xs\"\n        size=\"2xs\"\n      >\n        <InfoDialogTriggerIcon viewBox=\"0 0 16 16\" />\n      </IconButton>\n      <Dialog size={dialogSize}>\n        {title && (\n          <DialogHeader padding=\"px-18 pt-12\" size=\"md\" hideDismissButton>\n            {title}\n          </DialogHeader>\n        )}\n        <DialogBody>{body}</DialogBody>\n      </Dialog>\n    </DialogTrigger>\n  );\n}\n","import {useSelectedLocale} from '@common/i18n/selected-locale';\nimport {Fragment, memo} from 'react';\n\ninterface Props {\n  code: string;\n}\nexport const FormattedCountryName = memo(({code: countryCode}: Props) => {\n  const {localeCode} = useSelectedLocale();\n  const regionNames = new Intl.DisplayNames([localeCode], {type: 'region'});\n  let formattedName: string | undefined;\n\n  try {\n    formattedName = regionNames.of(countryCode.toUpperCase());\n  } catch (e) {}\n\n  return <Fragment>{formattedName}</Fragment>;\n});\n","import {\n  LocationDatasetItem,\n  ReportMetric,\n} from '@common/admin/analytics/report-metric';\nimport React, {useMemo, useRef} from 'react';\nimport {useGoogleGeoChart} from './use-google-geo-chart';\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\nimport {Trans} from '@common/i18n/trans';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\nimport {Button} from '@common/ui/buttons/button';\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\nimport clsx from 'clsx';\nimport {InfoDialogTrigger} from '@common/ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport {FormattedCountryName} from '@common/i18n/formatted-country-name';\n\ninterface GeoChartData extends Partial<ChartLayoutProps> {\n  data?: ReportMetric<LocationDatasetItem>;\n  onCountrySelected?: (countryCode: string | undefined) => void;\n  country?: string;\n}\nexport function GeoChart({\n  data: metricData,\n  isLoading,\n  onCountrySelected,\n  country,\n  ...layoutProps\n}: GeoChartData) {\n  const placeholderRef = useRef<HTMLDivElement>(null);\n  const regionInteractivity = !!onCountrySelected;\n\n  // memo data to avoid redrawing chart on rerender\n  const initialData = metricData?.datasets[0].data;\n  const data = useMemo(() => {\n    return initialData || [];\n  }, [initialData]);\n  useGoogleGeoChart({placeholderRef, data, country, onCountrySelected});\n\n  return (\n    <ChartLayout\n      {...layoutProps}\n      className=\"min-w-500\"\n      title={\n        <div className=\"flex items-center\">\n          <Trans message=\"Top Locations\" />\n          {country ? (\n            <span className=\"pl-4\">\n              ({<FormattedCountryName code={country} />})\n            </span>\n          ) : null}\n          {regionInteractivity && <InfoTrigger />}\n        </div>\n      }\n      contentIsFlex={isLoading}\n    >\n      {isLoading && <ChartLoadingIndicator />}\n      <div className=\"flex gap-24\">\n        <div\n          ref={placeholderRef}\n          className=\"flex-auto w-[480px] min-h-[340px]\"\n        />\n        <div className=\"w-[170px]\">\n          <div className=\"text-sm max-h-[340px] w-full flex-initial overflow-y-auto\">\n            {data.map(location => (\n              <div\n                key={location.label}\n                className={clsx(\n                  'flex items-center gap-4 mb-4',\n                  regionInteractivity && 'cursor-pointer hover:underline'\n                )}\n                role={regionInteractivity ? 'button' : undefined}\n                onClick={() => {\n                  onCountrySelected?.(location.code);\n                }}\n              >\n                <div className=\"max-w-110 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n                  {location.label}\n                </div>\n                <div>({location.percentage})%</div>\n              </div>\n            ))}\n          </div>\n          {country && (\n            <Button\n              variant=\"outline\"\n              size=\"xs\"\n              className=\"mt-14\"\n              startIcon={<ArrowBackIcon />}\n              onClick={() => {\n                onCountrySelected?.(undefined);\n              }}\n            >\n              <Trans message=\"Back to countries\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </ChartLayout>\n  );\n}\n\nfunction InfoTrigger() {\n  return (\n    <InfoDialogTrigger\n      title={<Trans message=\"Zooming in\" />}\n      body={\n        <Trans message=\"Click on a country inside the map or country list to zoom in and see city data for that country.\" />\n      }\n    />\n  );\n}\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {apiClient} from '@common/http/query-client';\nimport {\n  DatasetItem,\n  LocationDatasetItem,\n  ReportMetric,\n} from '@common/admin/analytics/report-metric';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Track} from '@app/web-player/tracks/track';\nimport {User} from '@common/auth/user';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\n\nconst endpoint = 'reports/insights';\n\nexport interface TopModelDatasetItem extends DatasetItem {\n  model: Artist | Album | Track | User;\n}\n\nexport interface FetchInsightsReportResponse extends BackendResponse {\n  report: {\n    totalClicks: number;\n    plays: ReportMetric;\n    browsers: ReportMetric;\n    locations: ReportMetric<LocationDatasetItem>;\n    devices: ReportMetric;\n    platforms: ReportMetric;\n    tracks: ReportMetric<TopModelDatasetItem>;\n    artists: ReportMetric<TopModelDatasetItem>;\n    albums: ReportMetric<TopModelDatasetItem>;\n    users: ReportMetric<TopModelDatasetItem>;\n  };\n}\n\nexport type InsightsReportMetric =\n  | 'plays'\n  | 'devices'\n  | 'browsers'\n  | 'platforms'\n  | 'locations'\n  | 'tracks'\n  | 'artists'\n  | 'albums'\n  | 'users';\n\ninterface Payload {\n  dateRange: DateRangeValue;\n  model?: string;\n  metrics?: InsightsReportMetric[];\n}\n\ninterface Options {\n  isEnabled: boolean;\n}\n\nexport function useInsightsReport(payload: Payload, options: Options) {\n  return useQuery({\n    queryKey: [endpoint, payload],\n    queryFn: () => fetchReport(endpoint, payload),\n    placeholderData: options.isEnabled ? keepPreviousData : undefined,\n    enabled: options.isEnabled,\n  });\n}\n\nfunction fetchReport<\n  T extends FetchInsightsReportResponse = FetchInsightsReportResponse,\n>(endpoint: string, payload: Payload): Promise<T> {\n  const params: Record<string, any> = {\n    model: payload.model,\n    metrics: payload.metrics?.join(','),\n  };\n  params.startDate = payload.dateRange.start.toAbsoluteString();\n  params.endDate = payload.dateRange.end.toAbsoluteString();\n  params.timezone = payload.dateRange.start.timeZone;\n\n  return apiClient.get(endpoint, {params}).then(response => response.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const InfoIcon = createSvgIcon(\n  <path d=\"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n, 'InfoOutlined');\n","import {Trans} from '@common/i18n/trans';\nimport {ChartLayout, ChartLayoutProps} from '@common/charts/chart-layout';\nimport React, {Fragment, ReactElement} from 'react';\nimport {ReportMetric} from '@common/admin/analytics/report-metric';\nimport {ChartLoadingIndicator} from '@common/charts/chart-loading-indicator';\nimport {TopModelDatasetItem} from '@app/admin/reports/requests/use-insights-report';\nimport {PlayArrowFilledIcon} from '@app/web-player/tracks/play-arrow-filled';\nimport {InfoIcon} from '@common/icons/material/Info';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {Link, useLocation} from 'react-router-dom';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {UserProfileLink} from '@app/web-player/users/user-profile-link';\nimport {UserAvatar} from '@common/ui/images/user-avatar';\n\ninterface Props extends Partial<ChartLayoutProps> {\n  data?: ReportMetric<TopModelDatasetItem>;\n  title: ReactElement;\n}\nexport function TopModelsChartLayout({data, isLoading, ...layoutProps}: Props) {\n  const dataItems = data?.datasets[0].data || [];\n\n  return (\n    <ChartLayout\n      {...layoutProps}\n      className=\"min-w-500 md:min-w-0 w-1/2\"\n      contentIsFlex={isLoading}\n      contentClassName=\"max-h-[370px] overflow-y-auto compact-scrollbar\"\n    >\n      {isLoading && <ChartLoadingIndicator />}\n      {dataItems.map(item => (\n        <div\n          key={item.model.id}\n          className=\"mb-20 text-sm flex items-center justify-between gap-24\"\n        >\n          <div className=\"flex items-center gap-8\">\n            <Image\n              model={item.model}\n              size=\"w-42 h-42\"\n              className=\"rounded flex-shrink-0\"\n            />\n            <div>\n              <div className=\"text-sm\">\n                <Name model={item.model} />\n              </div>\n              <div className=\"text-xs text-muted\">\n                <Description model={item.model} />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-4 flex-shrink-0\">\n            <PlayArrowFilledIcon className=\"text-muted\" size=\"sm\" />\n            <Trans\n              message=\":count plays\"\n              values={{count: <FormattedNumber value={item.value} />}}\n            />\n          </div>\n        </div>\n      ))}\n      {!isLoading && !dataItems.length ? (\n        <div className=\"flex items-center gap-8 text-muted\">\n          <InfoIcon size=\"sm\" />\n          <Trans message=\"No plays in selected timeframe.\" />\n        </div>\n      ) : null}\n    </ChartLayout>\n  );\n}\n\ninterface ImageProps {\n  model: TopModelDatasetItem['model'];\n  size: string;\n  className: string;\n}\nfunction Image({model, size, className}: ImageProps) {\n  const {pathname} = useLocation();\n  const inAdmin = pathname.includes('/admin');\n  const link = inAdmin\n    ? `/admin/${model.model_type}s/${model.id}/insights`\n    : `/backstage/${model.model_type}s/${model.id}/insights`;\n\n  switch (model.model_type) {\n    case 'artist':\n      return (\n        <Link to={link}>\n          <SmallArtistImage artist={model} size={size} className={className} />\n        </Link>\n      );\n    case 'album':\n      return (\n        <Link to={link}>\n          <AlbumImage album={model} size={size} className={className} />\n        </Link>\n      );\n    case 'track':\n      return (\n        <Link to={link}>\n          <TrackImage track={model} size={size} className={className} />\n        </Link>\n      );\n    case 'user':\n      // there's no separate insights page for user\n      return <UserAvatar user={model} size={size} className={className} />;\n  }\n}\n\ninterface NameProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Name({model}: NameProps) {\n  switch (model.model_type) {\n    case 'artist':\n      return <ArtistLink artist={model} target=\"_blank\" />;\n    case 'album':\n      return <AlbumLink album={model} target=\"_blank\" />;\n    case 'track':\n      return <TrackLink track={model} target=\"_blank\" />;\n    case 'user':\n      return model.id ? (\n        <UserProfileLink user={model} target=\"_blank\" />\n      ) : (\n        <Fragment>{model.display_name}</Fragment>\n      );\n  }\n}\n\ninterface DescriptionProps {\n  model: TopModelDatasetItem['model'];\n}\nfunction Description({model}: DescriptionProps) {\n  switch (model.model_type) {\n    case 'artist':\n    case 'user':\n      return null;\n    case 'album':\n    case 'track':\n      return <ArtistLinks artists={model.artists} target=\"_blank\" />;\n  }\n}\n","import React, {\n  cloneElement,\n  Fragment,\n  ReactElement,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\nimport {LineChart} from '@common/charts/line-chart';\nimport {Trans} from '@common/i18n/trans';\nimport {FormattedNumber} from '@common/i18n/formatted-number';\nimport {PolarAreaChart} from '@common/charts/polar-area-chart';\nimport {GeoChart} from '@common/admin/analytics/geo-chart/geo-chart';\nimport {BaseChartProps} from '@common/charts/base-chart';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {UseQueryResult} from '@tanstack/react-query';\nimport {\n  FetchInsightsReportResponse,\n  InsightsReportMetric,\n  useInsightsReport,\n} from '@app/admin/reports/requests/use-insights-report';\nimport {TopModelsChartLayout} from '@app/admin/reports/top-models-chart-layout';\n\nexport interface InsightsReportChartsProps {\n  showTracks?: boolean;\n  showArtistsAndAlbums?: boolean;\n  dateRange?: DateRangeValue;\n  model?: string;\n}\nexport function InsightsReportCharts(props: InsightsReportChartsProps) {\n  const colGap = 'gap-12 md:gap-24 mb-12 md:mb-24';\n  const rowClassName = `flex flex-col lg:flex-row lg:items-center overflow-x-auto ${colGap}`;\n\n  // will be set via \"cloneElement\"\n  const model = props.model as string;\n  const dateRange = props.dateRange as DateRangeValue;\n\n  return (\n    <Fragment>\n      <div className={rowClassName}>\n        <AsyncChart metric=\"plays\" model={model} dateRange={dateRange}>\n          {({data}) => (\n            <LineChart\n              className=\"flex-auto\"\n              title={<Trans message=\"Plays\" />}\n              hideLegend\n              description={\n                <Trans\n                  message=\":count total plays\"\n                  values={{\n                    count: (\n                      <FormattedNumber value={data?.report.plays.total || 0} />\n                    ),\n                  }}\n                />\n              }\n            />\n          )}\n        </AsyncChart>\n        <AsyncChart metric=\"devices\" model={model} dateRange={dateRange}>\n          <PolarAreaChart title={<Trans message=\"Top devices\" />} />\n        </AsyncChart>\n      </div>\n      <div className={rowClassName}>\n        {props.showTracks && (\n          <AsyncChart metric=\"tracks\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played tracks\" />}\n            />\n          </AsyncChart>\n        )}\n        <AsyncChart metric=\"users\" model={model} dateRange={dateRange}>\n          <TopModelsChartLayout title={<Trans message=\"Top listeners\" />} />\n        </AsyncChart>\n      </div>\n      {props.showArtistsAndAlbums && (\n        <div className={rowClassName}>\n          <AsyncChart metric=\"artists\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played artists\" />}\n            />\n          </AsyncChart>\n          <AsyncChart metric=\"albums\" model={model} dateRange={dateRange}>\n            <TopModelsChartLayout\n              title={<Trans message=\"Most played albums\" />}\n            />\n          </AsyncChart>\n        </div>\n      )}\n      <div className={rowClassName}>\n        <AsyncChart metric=\"locations\" model={model} dateRange={dateRange}>\n          <GeoChart className=\"flex-auto w-1/2 lg:max-w-[740px]\" />\n        </AsyncChart>\n        <AsyncChart metric=\"platforms\" model={model} dateRange={dateRange}>\n          <PolarAreaChart\n            className=\"max-w-500\"\n            title={<Trans message=\"Top platforms\" />}\n          />\n        </AsyncChart>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface AsyncChartProps {\n  children:\n    | ReactElement<BaseChartProps>\n    | ((\n        query: UseQueryResult<FetchInsightsReportResponse>\n      ) => ReactElement<BaseChartProps>);\n  metric: InsightsReportMetric;\n  model: string;\n  dateRange: DateRangeValue;\n}\nfunction AsyncChart({children, metric, model, dateRange}: AsyncChartProps) {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const query = useInsightsReport(\n    {metrics: [metric], model, dateRange},\n    {isEnabled}\n  );\n  const chart = typeof children === 'function' ? children(query) : children;\n  const observerRef = useRef<IntersectionObserver>();\n\n  const contentRef = useCallback((el: HTMLDivElement | null) => {\n    if (el) {\n      const observer = new IntersectionObserver(\n        ([e]) => {\n          if (e.isIntersecting) {\n            setIsEnabled(true);\n            observerRef.current?.disconnect();\n            observerRef.current = undefined;\n          }\n        },\n        {threshold: 0.1} // if only header is visible, don't load\n      );\n      observerRef.current = observer;\n      observer.observe(el);\n    } else if (observerRef.current) {\n      observerRef.current?.disconnect();\n    }\n  }, []);\n\n  return cloneElement<BaseChartProps>(chart, {\n    data: query.data?.report?.[metric],\n    isLoading: query.isLoading,\n    contentRef,\n  });\n}\n","import {Trans} from '@common/i18n/trans';\nimport React, {cloneElement, Fragment, ReactElement, useState} from 'react';\nimport {DateRangeValue} from '@common/ui/forms/input-field/date/date-range-picker/date-range-value';\nimport {DateRangePresets} from '@common/ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport {ReportDateSelector} from '@common/admin/analytics/report-date-selector';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {InsightsReportChartsProps} from '@app/admin/reports/insights-report-charts';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {Footer} from '@common/ui/footer/footer';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\n\ninterface Props {\n  children: ReactElement<InsightsReportChartsProps>;\n  reportModel: string;\n  title?: ReactElement;\n  isNested?: boolean;\n}\nexport function BackstageInsightsLayout({\n  children,\n  reportModel,\n  title,\n  isNested,\n}: Props) {\n  const [dateRange, setDateRange] = useState<DateRangeValue>(() => {\n    // This week\n    return DateRangePresets[2].getRangeValue();\n  });\n  return (\n    <Fragment>\n      <StaticPageTitle>\n        <Trans message=\"Insights\" />\n      </StaticPageTitle>\n      <div className=\"h-full flex flex-col\">\n        {!isNested && (\n          <Navbar className=\"flex-shrink-0\" color=\"bg\" darkModeColor=\"bg\" />\n        )}\n        <div className=\"overflow-y-auto flex-auto bg-cover relative\">\n          <div className=\"min-h-full p-12 md:p-24 overflow-x-hidden max-w-[1600px] mx-auto flex flex-col\">\n            <div className=\"flex-auto\">\n              <div className=\"md:flex items-center justify-between gap-24 h-48 mt-14 mb-38\">\n                {title ? title : <Skeleton className=\"max-w-320\" />}\n                <div className=\"flex-shrink-0 flex items-center justify-between gap-10 md:gap-24\">\n                  <ReportDateSelector\n                    value={dateRange}\n                    onChange={setDateRange}\n                  />\n                </div>\n              </div>\n              {cloneElement(children, {dateRange, model: reportModel})}\n            </div>\n            {!isNested && <Footer />}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import {Trans} from '@common/i18n/trans';\nimport React, {cloneElement, ReactElement} from 'react';\n\ninterface Props {\n  image: ReactElement<{size: string; className: string}>;\n  name: ReactElement;\n  description?: ReactElement;\n}\nexport function BackstageInsightsTitle({image, name, description}: Props) {\n  return (\n    <div className=\"flex items-center gap-10\">\n      {cloneElement(image, {size: 'w-48 h-48', className: 'rounded'})}\n      <div>\n        <h1 className=\"text-base whitespace-nowrap overflow-hidden overflow-ellipsis\">\n          “{name}“ <Trans message=\"insights\" />\n        </h1>\n        {description && <div className=\"text-muted text-sm\">{description}</div>}\n      </div>\n    </div>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useArtist} from '@app/web-player/artists/requests/use-artist';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {SmallArtistImage} from '@app/web-player/artists/artist-image/small-artist-image';\nimport {ArtistLink} from '@app/web-player/artists/artist-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageArtistInsights({isNested}: Props) {\n  const {artistId} = useParams();\n  const {data} = useArtist({loader: 'artist'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`artist=${artistId}`}\n      title={\n        data?.artist && (\n          <BackstageInsightsTitle\n            image={<SmallArtistImage artist={data.artist} />}\n            name={<ArtistLink artist={data.artist} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useAlbum} from '@app/web-player/albums/requests/use-album';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\nimport {AlbumImage} from '@app/web-player/albums/album-image/album-image';\nimport {AlbumLink} from '@app/web-player/albums/album-link';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageAlbumInsights({isNested}: Props) {\n  const {albumId} = useParams();\n  const {data} = useAlbum({loader: 'album'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`album=${albumId}`}\n      title={\n        data?.album && (\n          <BackstageInsightsTitle\n            image={<AlbumImage album={data.album} />}\n            name={<AlbumLink album={data.album} />}\n            description={<ArtistLinks artists={data.album.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts showTracks />\n    </BackstageInsightsLayout>\n  );\n}\n","import {useParams} from 'react-router-dom';\nimport {BackstageInsightsLayout} from '@app/web-player/backstage/insights/backstage-insights-layout';\nimport {InsightsReportCharts} from '@app/admin/reports/insights-report-charts';\nimport React from 'react';\nimport {useTrack} from '@app/web-player/tracks/requests/use-track';\nimport {BackstageInsightsTitle} from '@app/web-player/backstage/insights/backstage-insights-title';\nimport {TrackImage} from '@app/web-player/tracks/track-image/track-image';\nimport {TrackLink} from '@app/web-player/tracks/track-link';\nimport {ArtistLinks} from '@app/web-player/artists/artist-links';\n\ninterface Props {\n  isNested?: boolean;\n}\nexport function BackstageTrackInsights({isNested}: Props) {\n  const {trackId} = useParams();\n  const {data} = useTrack({loader: 'track'});\n  return (\n    <BackstageInsightsLayout\n      reportModel={`track=${trackId}`}\n      title={\n        data?.track && (\n          <BackstageInsightsTitle\n            image={<TrackImage track={data.track} />}\n            name={<TrackLink track={data.track} />}\n            description={<ArtistLinks artists={data.track.artists} />}\n          />\n        )\n      }\n      isNested={isNested}\n    >\n      <InsightsReportCharts />\n    </BackstageInsightsLayout>\n  );\n}\n"],"names":["_a","_b","now","isSameMonth","endpoint","response","Select","value","message","uploadId","SpotifyIdField","createTrack","Endpoint","PageContent","updateAlbum","createAlbum","locale","formattedData"],"mappings":"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"}