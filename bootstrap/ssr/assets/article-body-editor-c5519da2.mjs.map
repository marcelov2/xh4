{"version":3,"file":"article-body-editor-c5519da2.mjs","sources":["../../../common/resources/client/text-editor/extensions/embed.ts","../../../common/resources/client/text-editor/highlight/lowlight.ts","../../../common/resources/client/text-editor/extensions/info-block.ts","../../../common/resources/client/article-editor/article-body-editor.tsx"],"sourcesContent":["import {mergeAttributes, Node} from '@tiptap/react';\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    embed: {\n      setEmbed: (options: {src: string}) => ReturnType;\n    };\n  }\n}\n\nexport const Embed = Node.create({\n  name: 'embed',\n  group: 'block',\n  atom: true,\n\n  addAttributes() {\n    return {\n      src: {\n        default: null,\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'iframe',\n      },\n    ];\n  },\n\n  renderHTML({HTMLAttributes}) {\n    return [\n      'iframe',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n    ];\n  },\n\n  addCommands() {\n    return {\n      setEmbed:\n        options =>\n        ({commands}) => {\n          return commands.insertContent({\n            type: this.name,\n            attrs: options,\n          });\n        },\n    };\n  },\n});\n","import {createLowlight} from 'lowlight';\n\n// load specific languages only\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport html from 'highlight.js/lib/languages/xml';\nimport css from 'highlight.js/lib/languages/css';\nimport php from 'highlight.js/lib/languages/php';\nimport shell from 'highlight.js/lib/languages/shell';\nimport bash from 'highlight.js/lib/languages/bash';\nimport ruby from 'highlight.js/lib/languages/ruby';\nimport python from 'highlight.js/lib/languages/python';\nimport java from 'highlight.js/lib/languages/java';\nimport c from 'highlight.js/lib/languages/c';\n\n// load css\nimport './highlight-material-palenight.css';\n\nconst lowlight = createLowlight();\nlowlight.register('javascript', javascript);\nlowlight.register('typescript', typescript);\nlowlight.register('html', html);\nlowlight.register('css', css);\nlowlight.register('php', php);\nlowlight.register('shell', shell);\nlowlight.register('bash', bash);\nlowlight.register('ruby', ruby);\nlowlight.register('python', python);\nlowlight.register('java', java);\nlowlight.register('c', c);\n\nexport {lowlight};\n","import {mergeAttributes, Node} from '@tiptap/react';\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    important: {\n      addInfo: (attributes: {\n        type: 'important' | 'warning' | 'success';\n      }) => ReturnType;\n    };\n  }\n}\n\nexport const InfoBlock = Node.create({\n  name: 'be-info-block',\n  group: 'block',\n  content: 'inline*',\n  defining: true,\n\n  addAttributes() {\n    return {\n      type: {\n        default: 'success',\n        renderHTML: attrs => {\n          return {class: attrs.type};\n        },\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'div',\n        getAttrs: node =>\n          (node as HTMLElement).classList.contains('info-block') && null,\n      },\n    ];\n  },\n\n  renderHTML({HTMLAttributes}) {\n    return [\n      'div',\n      mergeAttributes(HTMLAttributes, {\n        class: 'info-block',\n      }),\n      ['div', {class: 'title'}, 'Important:'],\n      ['p', 0],\n    ];\n  },\n\n  addCommands() {\n    return {\n      addInfo:\n        attributes =>\n        ({commands}) => {\n          return commands.setNode(this.name, attributes);\n        },\n    };\n  },\n});\n","import {Editor, EditorContent, FocusPosition, useEditor} from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport {Underline} from '@tiptap/extension-underline';\nimport {Link as LinkExtension} from '@tiptap/extension-link';\nimport Image from '@tiptap/extension-image';\nimport {ReactElement, useEffect, useRef} from 'react';\nimport {Superscript} from '@tiptap/extension-superscript';\nimport {Subscript} from '@tiptap/extension-subscript';\nimport {Color} from '@tiptap/extension-color';\nimport {TextStyle} from '@tiptap/extension-text-style';\nimport {TextAlign} from '@tiptap/extension-text-align';\nimport {CodeBlockLowlight} from '@tiptap/extension-code-block-lowlight';\nimport {BackgroundColor} from '@common/text-editor/extensions/background-color';\nimport {Indent} from '@common/text-editor/extensions/indent';\nimport {Embed} from '@common/text-editor/extensions/embed';\nimport {lowlight} from '@common/text-editor/highlight/lowlight';\nimport {InfoBlock} from '@common/text-editor/extensions/info-block';\nimport {useCallbackRef} from '@common/utils/hooks/use-callback-ref';\nimport {Extension} from '@tiptap/core';\n\ninterface Props {\n  initialContent?: string;\n  onLoad?: (editor: Editor) => void;\n  children: (content: ReactElement, editor: Editor) => ReactElement;\n  minHeight?: string;\n  onCtrlEnter?: () => void;\n  autoFocus?: FocusPosition;\n}\nexport default function ArticleBodyEditor({\n  initialContent = '',\n  children,\n  onLoad: _onLoad,\n  onCtrlEnter,\n  minHeight = 'min-h-320',\n  autoFocus,\n}: Props) {\n  const onLoad = useCallbackRef(_onLoad);\n  const calledOnLoad = useRef(false);\n\n  const extensions = [\n    StarterKit.configure({\n      codeBlock: false,\n    }),\n    Underline,\n    LinkExtension.extend({\n      inclusive: false,\n      validate: {\n        // only linkify links that start with a protocol\n        url: (value: string) => /^https?:\\/\\//.test(value),\n      },\n    }),\n    Image,\n    Superscript,\n    Subscript,\n    TextStyle,\n    Color,\n    BackgroundColor,\n    Indent,\n    CodeBlockLowlight.configure({\n      lowlight,\n    }),\n    TextAlign.configure({\n      types: ['heading', 'paragraph'],\n    }),\n    InfoBlock,\n    Embed,\n  ];\n\n  if (onCtrlEnter) {\n    extensions.push(\n      Extension.create({\n        addKeyboardShortcuts: () => ({\n          'Cmd-Enter'() {\n            onCtrlEnter();\n            return true;\n          },\n          'Ctrl-Enter'() {\n            onCtrlEnter();\n            return true;\n          },\n        }),\n      }),\n    );\n  }\n\n  const editor = useEditor({\n    extensions,\n    onFocus: () => {},\n    autofocus: autoFocus,\n    content: initialContent,\n  });\n\n  // destroy editor\n  useEffect(() => {\n    if (editor) {\n      return () => editor.destroy();\n    }\n  }, [editor]);\n\n  if (!editor) {\n    return null;\n  }\n\n  if (editor && onLoad && !calledOnLoad.current) {\n    onLoad(editor);\n    calledOnLoad.current = true;\n  }\n\n  return children(\n    <EditorContent className={minHeight} editor={editor} />,\n    editor,\n  );\n}\n"],"names":["LinkExtension"],"mappings":"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"}