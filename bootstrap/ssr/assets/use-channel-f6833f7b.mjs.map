{"version":3,"file":"use-channel-f6833f7b.mjs","sources":["../../../common/resources/client/ui/layout/dashboard-layout-context.ts","../../../common/resources/client/utils/hooks/use-block-body-overflow.ts","../../../common/resources/client/ui/layout/dashboard-layout.tsx","../../../common/resources/client/ui/layout/dashboard-content.tsx","../../../common/resources/client/ui/layout/dashboard-sidenav.tsx","../../../common/resources/client/datatable/filters/backend-filters-url-key.ts","../../../common/resources/client/datatable/filters/utils/decode-backend-filters.ts","../../../common/resources/client/datatable/filters/utils/encode-backend-filters.ts","../../../common/resources/client/datatable/filters/backend-filter-url-params.ts","../../../common/resources/client/http/backend-response/pagination-response.ts","../../../common/resources/client/uploads/utils/download-file-from-url.ts","../../../common/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/resources/client/utils/hooks/use-previous.ts","../../../common/resources/client/ui/forms/slider/base-slider.tsx","../../../common/resources/client/ui/forms/slider/use-slider.ts","../../../common/resources/client/ui/forms/slider/slider-thumb.tsx","../../../common/resources/client/ui/forms/slider/slider.tsx","../../../common/resources/client/auth/user.ts","../../../common/resources/client/icons/material/MoreVert.tsx","../../../resources/client/web-player/artists/artist-page-tabs.ts","../../../common/resources/client/ui/overlays/dialog/image-zoom-dialog.tsx","../../../common/resources/client/icons/material/Pause.tsx","../../../resources/client/web-player/artists/artist.ts","../../../resources/client/web-player/tracks/track.ts","../../../resources/client/web-player/genres/genre-link.tsx","../../../resources/client/web-player/playlists/playlist-link.tsx","../../../common/resources/client/icons/material/Image.tsx","../../../resources/client/web-player/playlists/crupdate-dialog/crupdate-playlist-fields.tsx","../../../resources/client/web-player/playlists/requests/use-update-playlist.ts","../../../resources/client/web-player/playlists/crupdate-dialog/update-playlist-dialog.tsx","../../../resources/client/web-player/playlists/requests/use-create-playlist.ts","../../../resources/client/web-player/playlists/crupdate-dialog/create-playlist-dialog.tsx","../../../resources/client/web-player/playlists/playlist.ts","../../../common/resources/client/comments/requests/use-delete-comments.ts","../../../common/resources/client/icons/material/TrendingUp.tsx","../../../common/resources/client/channels/channel.ts","../../../common/resources/client/icons/material/GridView.tsx","../../../common/resources/client/utils/hooks/is-touch-device.ts","../../../common/resources/client/channels/use-channel-query-params.ts","../../../common/resources/client/channels/requests/use-channel.ts"],"sourcesContent":["import {createContext} from 'react';\n\nexport type DashboardSidenavStatus = 'open' | 'closed' | 'compact';\n\nexport interface DashboardContextValue {\n  leftSidenavStatus: DashboardSidenavStatus;\n  setLeftSidenavStatus: (status: DashboardSidenavStatus) => void;\n  rightSidenavStatus: DashboardSidenavStatus;\n  setRightSidenavStatus: (status: DashboardSidenavStatus) => void;\n  isMobileMode: boolean | null;\n  leftSidenavCanBeCompact?: boolean;\n  name: string;\n}\n\nexport const DashboardLayoutContext = createContext<DashboardContextValue>(\n  null!\n);\n","import {useEffect} from 'react';\n\nexport function useBlockBodyOverflow(disable: boolean = false) {\n  useEffect(() => {\n    if (disable) {\n      document.documentElement.classList.remove('no-page-overflow');\n    } else {\n      document.documentElement.classList.add('no-page-overflow');\n    }\n    return () => {\n      document.documentElement.classList.remove('no-page-overflow');\n    };\n  }, [disable]);\n}\n","import {ComponentPropsWithoutRef, useCallback, useMemo} from 'react';\nimport {\n  DashboardLayoutContext,\n  DashboardSidenavStatus,\n} from './dashboard-layout-context';\nimport {Underlay} from '../overlays/underlay';\nimport {AnimatePresence} from 'framer-motion';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMediaQuery} from '../../utils/hooks/use-media-query';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '../../utils/hooks/local-storage';\nimport {useBlockBodyOverflow} from '../../utils/hooks/use-block-body-overflow';\nimport clsx from 'clsx';\n\ninterface DashboardLayoutProps extends ComponentPropsWithoutRef<'div'> {\n  name: string;\n  leftSidenavCanBeCompact?: boolean;\n  leftSidenavStatus?: DashboardSidenavStatus;\n  onLeftSidenavChange?: (status: DashboardSidenavStatus) => void;\n  rightSidenavStatus?: DashboardSidenavStatus;\n  initialRightSidenavStatus?: DashboardSidenavStatus;\n  onRightSidenavChange?: (status: DashboardSidenavStatus) => void;\n  height?: string;\n  gridClassName?: string;\n  blockBodyOverflow?: boolean;\n}\nexport function DashboardLayout({\n  children,\n  leftSidenavStatus: leftSidenav,\n  onLeftSidenavChange,\n  rightSidenavStatus: rightSidenav,\n  initialRightSidenavStatus,\n  onRightSidenavChange,\n  name,\n  leftSidenavCanBeCompact,\n  height = 'h-screen',\n  className,\n  gridClassName = 'dashboard-grid',\n  blockBodyOverflow = true,\n  ...domProps\n}: DashboardLayoutProps) {\n  useBlockBodyOverflow(!blockBodyOverflow);\n  const isMobile = useMediaQuery('(max-width: 1024px)');\n\n  const isCompactModeInitially = useMemo(() => {\n    return !name ? false : getFromLocalStorage(`${name}.sidenav.compact`);\n  }, [name]);\n  const defaultLeftSidenavStatus = isCompactModeInitially ? 'compact' : 'open';\n  const [leftSidenavStatus, setLeftSidenavStatus] = useControlledState(\n    leftSidenav,\n    isMobile ? 'closed' : defaultLeftSidenavStatus,\n    onLeftSidenavChange,\n  );\n\n  const rightSidenavStatusDefault = useMemo(() => {\n    if (isMobile) {\n      return 'closed';\n    }\n    if (initialRightSidenavStatus != null) {\n      return initialRightSidenavStatus;\n    }\n    const userSelected = getFromLocalStorage(\n      `${name}.sidenav.right.position`,\n      'open',\n    );\n    if (userSelected != null) {\n      return userSelected;\n    }\n    return initialRightSidenavStatus || 'closed';\n  }, [isMobile, name, initialRightSidenavStatus]);\n  const [rightSidenavStatus, _setRightSidenavStatus] = useControlledState(\n    rightSidenav,\n    rightSidenavStatusDefault,\n    onRightSidenavChange,\n  );\n  const setRightSidenavStatus = useCallback(\n    (status: DashboardSidenavStatus) => {\n      _setRightSidenavStatus(status);\n      setInLocalStorage(`${name}.sidenav.right.position`, status);\n    },\n    [_setRightSidenavStatus, name],\n  );\n\n  const shouldShowUnderlay =\n    isMobile && (leftSidenavStatus === 'open' || rightSidenavStatus === 'open');\n\n  return (\n    <DashboardLayoutContext.Provider\n      value={{\n        leftSidenavStatus,\n        setLeftSidenavStatus,\n        rightSidenavStatus,\n        setRightSidenavStatus,\n        leftSidenavCanBeCompact,\n        name,\n        isMobileMode: isMobile,\n      }}\n    >\n      <div\n        {...domProps}\n        className={clsx('relative isolate', gridClassName, className, height)}\n      >\n        {children}\n        <AnimatePresence>\n          {shouldShowUnderlay && (\n            <Underlay\n              position=\"fixed\"\n              key=\"dashboard-underlay\"\n              onClick={() => {\n                setLeftSidenavStatus('closed');\n                setRightSidenavStatus('closed');\n              }}\n            />\n          )}\n        </AnimatePresence>\n      </div>\n    </DashboardLayoutContext.Provider>\n  );\n}\n","import {cloneElement, ReactElement} from 'react';\nimport clsx from 'clsx';\n\ninterface DashboardContentProps {\n  children: ReactElement<{className: string}>;\n  isScrollable?: boolean;\n}\nexport function DashboardContent({\n  children,\n  isScrollable = true,\n}: DashboardContentProps) {\n  return cloneElement(children, {\n    className: clsx(\n      children.props.className,\n      isScrollable && 'overflow-y-auto stable-scrollbar',\n      'dashboard-grid-content'\n    ),\n  });\n}\n","import clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {cloneElement, ReactElement, useContext} from 'react';\nimport {DashboardLayoutContext} from './dashboard-layout-context';\n\nexport interface DashboardSidenavChildrenProps {\n  className?: string;\n  isCompactMode?: boolean;\n}\n\nexport interface SidenavProps {\n  className?: string;\n  children: ReactElement<DashboardSidenavChildrenProps>;\n  position?: 'left' | 'right';\n  size?: 'sm' | 'md' | 'lg' | string;\n  mode?: 'overlay';\n  // absolute will place sidenav between navbar/footer, fixed will overlay it over nav/footer.\n  overlayPosition?: 'absolute' | 'fixed';\n  display?: 'flex' | 'block';\n  overflow?: string;\n  forceClosed?: boolean;\n}\nexport function DashboardSidenav({\n  className,\n  position,\n  children,\n  size = 'md',\n  mode,\n  overlayPosition = 'fixed',\n  display = 'flex',\n  overflow = 'overflow-hidden',\n  forceClosed = false,\n}: SidenavProps) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    rightSidenavStatus,\n    setRightSidenavStatus,\n  } = useContext(DashboardLayoutContext);\n  const status = position === 'left' ? leftSidenavStatus : rightSidenavStatus;\n  const isOverlayMode = isMobileMode || mode === 'overlay';\n\n  const variants = {\n    open: {display, width: null as any},\n    compact: {\n      display,\n      width: null as any,\n    },\n    closed: {\n      width: 0,\n      transitionEnd: {\n        display: 'none',\n      },\n    },\n  };\n\n  const sizeClassName = getSize(status === 'compact' ? 'compact' : size);\n\n  return (\n    <m.div\n      variants={variants}\n      initial={false}\n      animate={forceClosed ? 'closed' : status}\n      transition={{type: 'tween', duration: 0.15}}\n      onClick={e => {\n        // close sidenav when user clicks a link or button on mobile\n        const target = e.target as HTMLElement;\n        if (isMobileMode && (target.closest('button') || target.closest('a'))) {\n          setLeftSidenavStatus('closed');\n          setRightSidenavStatus('closed');\n        }\n      }}\n      className={clsx(\n        className,\n        position === 'left'\n          ? 'dashboard-grid-sidenav-left'\n          : 'dashboard-grid-sidenav-right',\n        'will-change-[width]',\n        overflow,\n        sizeClassName,\n        isOverlayMode && `${overlayPosition} bottom-0 top-0 z-20 shadow-2xl`,\n        isOverlayMode && position === 'left' && 'left-0',\n        isOverlayMode && position === 'right' && 'right-0',\n      )}\n    >\n      {cloneElement<DashboardSidenavChildrenProps>(children, {\n        className: clsx(\n          children.props.className,\n          'w-full h-full',\n          status === 'compact' && 'compact-scrollbar',\n        ),\n        isCompactMode: status === 'compact',\n      })}\n    </m.div>\n  );\n}\n\nfunction getSize(size: SidenavProps['size'] | 'compact'): string {\n  switch (size) {\n    case 'compact':\n      return 'w-80';\n    case 'sm':\n      return 'w-224';\n    case 'md':\n      return 'w-240';\n    case 'lg':\n      return 'w-288';\n    default:\n      return size || '';\n  }\n}\n","export const BackendFiltersUrlKey = 'filters';\n","import {FilterListValue} from './encode-backend-filters';\n\nexport function decodeBackendFilters(\n  encodedFilters: string | null\n): FilterListValue[] {\n  if (!encodedFilters) return [];\n  let filtersFromQuery: FilterListValue[] = [];\n  try {\n    filtersFromQuery = JSON.parse(atob(decodeURIComponent(encodedFilters)));\n    filtersFromQuery.map(filterValue => {\n      // set value key as value so selects work properly\n      if (filterValue.valueKey != null) {\n        filterValue.value = filterValue.valueKey;\n      }\n      return filterValue;\n    });\n  } catch (e) {\n    //\n  }\n  return filtersFromQuery;\n}\n","import {BackendFilter} from '../backend-filter';\n\nexport interface FilterListValue {\n  key: string | number;\n  value: BackendFilter['control']['defaultValue'];\n  operator?: BackendFilter['defaultOperator'];\n  valueKey?: string | number;\n  isInactive?: boolean;\n  extraFilters?: {key: string; operator: string; value: any}[];\n}\n\nexport function encodeBackendFilters(\n  filterValues: FilterListValue[] | null,\n  filters?: BackendFilter[],\n): string {\n  if (!filterValues) return '';\n\n  // prepare values for backend\n  filterValues = !filters\n    ? filterValues\n    : filterValues\n        .filter(item => item.value !== '')\n        .map(item => transformValue(item, filters));\n\n  // remove all placeholder filters\n  filterValues = filterValues.filter(fm => !fm.isInactive);\n\n  if (!filterValues.length) {\n    return '';\n  }\n\n  return encodeURIComponent(btoa(JSON.stringify(filterValues)));\n}\n\nfunction transformValue(\n  filterValue: FilterListValue,\n  filters: BackendFilter[],\n) {\n  const filterConfig = filters.find(f => f.key === filterValue.key);\n  // select components will use a key always, because we can't use objects as\n  // value. Map over select options and replace key with actual value\n  if (filterConfig?.control.type === 'select') {\n    const option = (filterConfig.control.options || []).find(\n      o => o.key === filterValue.value,\n    );\n    // if it's language or country select, there might not be an option\n    if (option) {\n      return {...filterValue, value: option.value, valueKey: option.key};\n    }\n  }\n\n  if (filterConfig?.extraFilters?.length) {\n    filterValue['extraFilters'] = filterConfig.extraFilters;\n  }\n\n  return filterValue;\n}\n","import {useNavigate, useSearchParams} from 'react-router-dom';\nimport {Key, useCallback, useMemo} from 'react';\nimport {BackendFilter} from './backend-filter';\nimport {BackendFiltersUrlKey} from './backend-filters-url-key';\nimport {decodeBackendFilters} from './utils/decode-backend-filters';\nimport {\n  encodeBackendFilters,\n  FilterListValue,\n} from './utils/encode-backend-filters';\n\nexport function useBackendFilterUrlParams(\n  filters?: BackendFilter[],\n  pinnedFilters?: string[]\n) {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const encodedFilters = searchParams.get(BackendFiltersUrlKey);\n\n  const decodedFilters: FilterListValue[] = useMemo(() => {\n    if (!filters) return [];\n    const decoded = decodeBackendFilters(encodedFilters);\n\n    // if filter is pinned, and it is not applied yet, add a placeholder\n    (pinnedFilters || []).forEach(key => {\n      if (!decoded.find(f => f.key === key)) {\n        const config = filters.find(f => f.key === key)!;\n        decoded.push({\n          key,\n          value: config.control.defaultValue,\n          operator: config.defaultOperator,\n          isInactive: true,\n        });\n      }\n    });\n\n    // preserve original filter order from configuration\n    decoded.sort(\n      (a, b) =>\n        filters.findIndex(f => f.key === a.key) -\n        filters.findIndex(f => f.key === b.key)\n    );\n\n    return decoded;\n  }, [encodedFilters, pinnedFilters, filters]);\n\n  const getDecodedWithoutKeys = useCallback(\n    (values: (FilterListValue | Key)[]) => {\n      const newFilters = [...decodedFilters];\n      values.forEach(value => {\n        const key = typeof value === 'object' ? value.key : value;\n        const index = newFilters.findIndex(f => f.key === key);\n        if (index > -1) {\n          newFilters.splice(index, 1);\n        }\n      });\n      return newFilters;\n    },\n    [decodedFilters]\n  );\n\n  const replaceAll = useCallback(\n    (filterValues: FilterListValue[]) => {\n      const encodedFilters = encodeBackendFilters(filterValues, filters);\n      if (encodedFilters) {\n        searchParams.set(BackendFiltersUrlKey, encodedFilters);\n      } else {\n        searchParams.delete(BackendFiltersUrlKey);\n      }\n      navigate({search: `?${searchParams}`}, {replace: true});\n    },\n    [filters, navigate, searchParams]\n  );\n\n  const add = useCallback(\n    (filterValues: FilterListValue[]) => {\n      const existing = getDecodedWithoutKeys(filterValues);\n      const decodedFilters = [...existing, ...filterValues];\n      replaceAll(decodedFilters);\n    },\n    [getDecodedWithoutKeys, replaceAll]\n  );\n\n  const remove = useCallback(\n    (key: Key) => replaceAll(getDecodedWithoutKeys([key])),\n    [getDecodedWithoutKeys, replaceAll]\n  );\n\n  return {\n    add,\n    remove,\n    replaceAll,\n    decodedFilters,\n    encodedFilters,\n  };\n}\n","import {BackendResponse} from './backend-response';\n\nexport interface LengthAwarePaginationResponse<T> {\n  data: T[];\n  from: number;\n  to: number;\n  total: number;\n  per_page: number;\n  current_page: number;\n  last_page: number;\n  next_page: number;\n  prev_page: number;\n}\n\nexport interface SimplePaginationResponse<T> {\n  data: T[];\n  from: number;\n  to: number;\n  per_page: number;\n  current_page: number;\n}\n\ninterface CursorPaginationResponse<T> {\n  data: T[];\n  next_cursor: string | null;\n  per_page: number;\n  prev_cursor: string | null;\n}\n\nexport type PaginationResponse<T> =\n  | LengthAwarePaginationResponse<T>\n  | SimplePaginationResponse<T>\n  | CursorPaginationResponse<T>;\n\nexport const EMPTY_PAGINATION_RESPONSE = {\n  pagination: {data: [], from: 0, to: 0, per_page: 15, current_page: 1},\n};\n\nexport interface PaginatedBackendResponse<T> extends BackendResponse {\n  pagination: PaginationResponse<T>;\n}\n\nexport function hasNextPage(pagination: PaginationResponse<unknown>): boolean {\n  if ('next_cursor' in pagination) {\n    return pagination.next_cursor != null;\n  }\n\n  if ('last_page' in pagination) {\n    return pagination.current_page < pagination.last_page;\n  }\n\n  return (\n    pagination.data.length > 0 && pagination.data.length >= pagination.per_page\n  );\n}\n","export function downloadFileFromUrl(url: string, name?: string) {\n  const link = document.createElement('a');\n  link.href = url;\n  if (name) link.download = name;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","import React, {ReactNode} from 'react';\nimport {Avatar, AvatarProps} from '../../ui/images/avatar';\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\nimport clsx from 'clsx';\n\ninterface Props {\n  image?: string;\n  label: ReactNode;\n  description?: ReactNode;\n  labelClassName?: string;\n  avatarSize?: AvatarProps['size'];\n}\nexport function NameWithAvatar({\n  image,\n  label,\n  description,\n  labelClassName,\n  avatarSize = 'md',\n}: Props) {\n  return (\n    <div className=\"flex items-center gap-12\">\n      {image && (\n        <Avatar size={avatarSize} className=\"flex-shrink-0\" src={image} />\n      )}\n      <div className=\"min-w-0 overflow-hidden\">\n        <div\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\n        >\n          {label}\n        </div>\n        {description && (\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\n            {description}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function NameWithAvatarPlaceholder({\n  labelClassName,\n  showDescription,\n}: Partial<Props> & {\n  showDescription?: boolean;\n}) {\n  return (\n    <div className=\"flex w-full max-w-4/5 items-center gap-12\">\n      <Skeleton size=\"w-40 h-40 md:w-32 md:h-32\" variant=\"rect\" />\n      <div className=\"flex-auto\">\n        <div className={clsx(labelClassName, 'leading-3')}>\n          <Skeleton />\n        </div>\n        {showDescription && (\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import {useEffect, useRef} from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React, {ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\nimport {UseSliderProps, UseSliderReturn} from './use-slider';\n\nexport interface BaseSliderProps extends UseSliderProps {\n  slider: UseSliderReturn;\n  children: ReactNode;\n}\n\nexport function BaseSlider(props: BaseSliderProps) {\n  const {\n    size = 'md',\n    inline,\n    label,\n    showValueLabel = !!label,\n    className,\n    width = 'w-full',\n    slider,\n    children,\n    trackColor = 'primary',\n    fillColor = 'primary',\n  } = props;\n\n  const {\n    domProps,\n    trackRef,\n    getThumbPercent,\n    getThumbValueLabel,\n    labelId,\n    groupId,\n    thumbIds,\n    isDisabled,\n    numberFormatter,\n    minValue,\n    maxValue,\n    step,\n    values,\n    getValueLabel,\n  } = slider;\n\n  let outputValue = '';\n  let maxLabelLength = Math.max(\n    [...numberFormatter.format(minValue)].length,\n    [...numberFormatter.format(maxValue)].length,\n    [...numberFormatter.format(step)].length,\n  );\n\n  if (getValueLabel) {\n    outputValue = getValueLabel(values[0]);\n  } else if (values.length === 1) {\n    outputValue = getThumbValueLabel(0);\n  } else if (values.length === 2) {\n    // This should really use the NumberFormat#formatRange proposal...\n    // https://github.com/tc39/ecma402/issues/393\n    // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\n    outputValue = `${getThumbValueLabel(0)} – ${getThumbValueLabel(1)}`;\n    maxLabelLength =\n      3 +\n      2 *\n        Math.max(\n          maxLabelLength,\n          [...numberFormatter.format(minValue)].length,\n          [...numberFormatter.format(maxValue)].length,\n        );\n  }\n  const style = getInputFieldClassNames({\n    size,\n    disabled: isDisabled,\n    labelDisplay: 'flex',\n  });\n\n  const wrapperClassname = clsx('touch-none', className, width, {\n    'flex items-center': inline,\n  });\n\n  return (\n    <div className={wrapperClassname} role=\"group\" id={groupId}>\n      {(label || showValueLabel) && (\n        <div className={clsx(style.label, 'select-none')}>\n          {label && (\n            <label\n              onClick={() => {\n                // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n                // so do it manually. In addition, make sure we show the focus ring.\n                document.getElementById(thumbIds[0])?.focus();\n              }}\n              id={labelId}\n              htmlFor={groupId}\n            >\n              {label}\n            </label>\n          )}\n          {showValueLabel && (\n            <output\n              htmlFor={thumbIds[0]}\n              className=\"ml-auto text-right\"\n              aria-live=\"off\"\n              style={\n                !maxLabelLength\n                  ? undefined\n                  : {\n                      width: `${maxLabelLength}ch`,\n                      minWidth: `${maxLabelLength}ch`,\n                    }\n              }\n            >\n              {outputValue}\n            </output>\n          )}\n        </div>\n      )}\n      <div\n        ref={trackRef}\n        className={clsx('relative', getWrapperHeight(props))}\n        {...domProps}\n        role=\"presentation\"\n      >\n        <div\n          className={clsx(\n            'absolute inset-0 m-auto rounded',\n            getTrackColor(trackColor, isDisabled),\n            getTrackHeight(size),\n          )}\n        />\n        <div\n          className={clsx(\n            'absolute inset-0 my-auto rounded',\n            getFillColor(fillColor, isDisabled),\n            getTrackHeight(size),\n          )}\n          style={{width: `${Math.max(getThumbPercent(0) * 100, 0)}%`}}\n        />\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction getWrapperHeight({size, wrapperHeight}: UseSliderProps): string {\n  if (wrapperHeight) return wrapperHeight;\n  switch (size) {\n    case 'xs':\n      return 'h-14';\n    case 'sm':\n      return 'h-20';\n    default:\n      return 'h-30';\n  }\n}\n\nfunction getTrackHeight(size: UseSliderProps['size']): string {\n  switch (size) {\n    case 'xs':\n      return 'h-2';\n    case 'sm':\n      return 'h-3';\n    default:\n      return 'h-4';\n  }\n}\n\nfunction getTrackColor(color: string, isDisabled: boolean): string {\n  if (isDisabled) {\n    color = 'disabled';\n  }\n  switch (color) {\n    case 'disabled':\n      return 'bg-slider-disabled/60';\n    case 'primary':\n      return 'bg-primary-light';\n    case 'neutral':\n      return 'bg-divider';\n    default:\n      return color;\n  }\n}\n\nfunction getFillColor(color: string, isDisabled: boolean): string {\n  if (isDisabled) {\n    color = 'disabled';\n  }\n  switch (color) {\n    case 'disabled':\n      return 'bg-slider-disabled';\n    case 'primary':\n      return 'bg-primary';\n    default:\n      return color;\n  }\n}\n","import {\n  mergeProps,\n  snapValueToStep,\n  useGlobalListeners,\n} from '@react-aria/utils';\nimport {useControlledState} from '@react-stately/utils';\nimport React, {\n  HTMLAttributes,\n  ReactNode,\n  RefObject,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport {clamp} from '@common/utils/number/clamp';\nimport {usePointerEvents} from '../../interactions/use-pointer-events';\nimport {useNumberFormatter} from '@common/i18n/use-number-formatter';\nimport type {NumberFormatOptions} from '@internationalized/number';\n\nexport interface UseSliderProps<T = number[]> {\n  formatOptions?: NumberFormatOptions;\n  onPointerDown?: () => void;\n  onPointerMove?: (e: React.PointerEvent) => void;\n  onChange?: (value: T) => void;\n  onChangeEnd?: (value: T) => void;\n  value?: T;\n  defaultValue?: T;\n  getValueLabel?: (value: number) => string;\n  minValue?: number;\n  maxValue?: number;\n  step?: number;\n  isDisabled?: boolean;\n  size?: 'xs' | 'sm' | 'md';\n  label?: ReactNode;\n  inline?: boolean;\n  className?: string;\n  width?: string;\n  showValueLabel?: boolean;\n  fillColor?: 'primary' | string;\n  trackColor?: 'primary' | 'neutral' | string;\n  showThumbOnHoverOnly?: boolean;\n  thumbSize?: string;\n  wrapperHeight?: string;\n}\n\nexport interface UseSliderReturn {\n  domProps: HTMLAttributes<HTMLElement>;\n  trackRef: RefObject<HTMLDivElement>;\n  isPointerOver: boolean;\n  showThumbOnHoverOnly?: boolean;\n  thumbSize?: string;\n  step: number;\n  isDisabled: boolean;\n  values: number[];\n  minValue: number;\n  maxValue: number;\n  focusedThumb: number | undefined;\n  labelId: string | undefined;\n  groupId: string;\n  thumbIds: string[];\n  numberFormatter: Intl.NumberFormat;\n  getThumbPercent: (index: number) => number;\n  getThumbMinValue: (index: number) => number;\n  getThumbMaxValue: (index: number) => number;\n  getThumbValueLabel: (index: number) => string;\n  setThumbValue: (index: number, value: number) => void;\n  updateDraggedThumbs: (index: number, dragging: boolean) => void;\n  isThumbDragging: (index: number) => boolean;\n  setThumbEditable: (index: number, editable: boolean) => void;\n  setFocusedThumb: (index: number | undefined) => void;\n  getValueLabel?: (value: number) => string;\n}\n\nexport function useSlider({\n  minValue = 0,\n  maxValue = 100,\n  isDisabled = false,\n  step = 1,\n  formatOptions,\n  onChangeEnd,\n  onPointerDown,\n  label,\n  getValueLabel,\n  showThumbOnHoverOnly,\n  thumbSize,\n  onPointerMove,\n  ...props\n}: UseSliderProps): UseSliderReturn {\n  const [isPointerOver, setIsPointerOver] = useState(false);\n  const numberFormatter = useNumberFormatter(formatOptions);\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n  const trackRef = useRef<HTMLDivElement>(null);\n\n  // values will be stored in internal state as an array for both slider and range slider\n  const [values, setValues] = useControlledState<number[]>(\n    props.value ? props.value : undefined,\n    props.defaultValue ?? ([minValue] as any),\n    props.onChange as any,\n  );\n  // need to also store values in ref, because state value would\n  // lag behind by one between pointer down and move callbacks\n  const valuesRef = useRef<number[] | null>(null);\n  valuesRef.current = values;\n\n  // indices of thumbs that are being dragged currently (state and ref for same reasons as above)\n  const [draggedThumbs, setDraggedThumbs] = useState<boolean[]>(\n    new Array(values.length).fill(false),\n  );\n  const draggedThumbsRef = useRef<boolean[] | null>(null);\n  draggedThumbsRef.current = draggedThumbs;\n\n  // formatted value for <output> and thumb aria labels\n  function getFormattedValue(value: number) {\n    return numberFormatter.format(value);\n  }\n\n  const isThumbDragging = (index: number) => {\n    return draggedThumbsRef.current?.[index] || false;\n  };\n\n  const getThumbValueLabel = (index: number) =>\n    getFormattedValue(values[index]);\n\n  const getThumbMinValue = (index: number) =>\n    index === 0 ? minValue : values[index - 1];\n  const getThumbMaxValue = (index: number) =>\n    index === values.length - 1 ? maxValue : values[index + 1];\n\n  const setThumbValue = (index: number, value: number) => {\n    if (isDisabled || !isThumbEditable(index) || !valuesRef.current) {\n      return;\n    }\n    const thisMin = getThumbMinValue(index);\n    const thisMax = getThumbMaxValue(index);\n\n    // Round value to multiple of step, clamp value between min and max\n    value = snapValueToStep(value, thisMin, thisMax, step);\n    valuesRef.current = replaceIndex(valuesRef.current, index, value);\n    setValues(valuesRef.current);\n  };\n\n  // update \"dragging\" status of specified thumb\n  const updateDraggedThumbs = (index: number, dragging: boolean) => {\n    if (isDisabled || !isThumbEditable(index)) {\n      return;\n    }\n\n    const wasDragging = draggedThumbsRef.current?.[index];\n    draggedThumbsRef.current = replaceIndex(\n      draggedThumbsRef.current || [],\n      index,\n      dragging,\n    );\n    setDraggedThumbs(draggedThumbsRef.current);\n\n    // Call onChangeEnd if no handles are dragging.\n    if (onChangeEnd && wasDragging && !draggedThumbsRef.current.some(Boolean)) {\n      onChangeEnd(valuesRef.current || []);\n    }\n  };\n\n  const [focusedThumb, setFocusedThumb] = useState<number | undefined>(\n    undefined,\n  );\n\n  const getValuePercent = (value: number) => {\n    const x = Math.min(1, (value - minValue) / (maxValue - minValue));\n    if (isNaN(x)) {\n      return 0;\n    }\n    return x;\n  };\n\n  const getThumbPercent = (index: number) =>\n    getValuePercent(valuesRef.current![index]);\n\n  const setThumbPercent = (index: number, percent: number) => {\n    setThumbValue(index, getPercentValue(percent));\n  };\n\n  const getRoundedValue = (value: number) =>\n    Math.round((value - minValue) / step) * step + minValue;\n\n  const getPercentValue = (percent: number) => {\n    const val = percent * (maxValue - minValue) + minValue;\n    return clamp(getRoundedValue(val), minValue, maxValue);\n  };\n\n  // allows disabling individual thumbs in range slider, instead of disable the whole slider\n  const editableThumbsRef = useRef<boolean[]>(\n    new Array(values.length).fill(true),\n  );\n  const isThumbEditable = (index: number) => editableThumbsRef.current[index];\n  const setThumbEditable = (index: number, editable: boolean) => {\n    editableThumbsRef.current[index] = editable;\n  };\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb. Hence, we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const currentPointer = useRef<number | null | undefined>(undefined);\n  const handlePointerDown = (e: React.PointerEvent) => {\n    if (\n      e.pointerType === 'mouse' &&\n      (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\n    ) {\n      return;\n    }\n\n    onPointerDown?.();\n\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (\n      trackRef.current &&\n      !isDisabled &&\n      values.every((_, i) => !draggedThumbs[i])\n    ) {\n      const size = trackRef.current.offsetWidth;\n      // Find the closest thumb\n      const trackPosition = trackRef.current.getBoundingClientRect().left;\n      const offset = e.clientX - trackPosition;\n      const percent = offset / size;\n      const value = getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      const split = values.findIndex(v => value - v < 0);\n      if (split === 0) {\n        // If the index is zero then the closest thumb is the first one\n        closestThumb = split;\n      } else if (split === -1) {\n        // If no index is found they've clicked past all the thumbs\n        closestThumb = values.length - 1;\n      } else {\n        const lastLeft = values[split - 1];\n        const firstRight = values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && isThumbEditable(closestThumb)) {\n        // Don't un-focus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        setFocusedThumb(closestThumb);\n        currentPointer.current = e.pointerId;\n\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, true);\n        setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  const currentPosition = useRef<number | null>(null);\n  const {domProps: moveDomProps} = usePointerEvents({\n    onPointerDown: handlePointerDown,\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove(e, deltaX) {\n      const size = trackRef.current?.offsetWidth || 0;\n\n      if (currentPosition.current == null) {\n        currentPosition.current =\n          getThumbPercent(realTimeTrackDraggingIndex.current || 0) * size;\n      }\n\n      currentPosition.current += deltaX;\n\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n    },\n  });\n\n  const domProps = mergeProps(moveDomProps, {\n    onPointerEnter: () => {\n      setIsPointerOver(true);\n    },\n    onPointerLeave: () => {\n      setIsPointerOver(false);\n    },\n    onPointerMove: (e: React.PointerEvent) => {\n      onPointerMove?.(e);\n    },\n  });\n\n  const onUpTrack = (e: PointerEvent) => {\n    const id = e.pointerId;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  const id = useId();\n  const labelId = label ? `${id}-label` : undefined;\n  const groupId = `${id}-group`;\n  const thumbIds = [...Array(values.length)].map((v, i) => {\n    return `${id}-thumb-${i}`;\n  });\n\n  return {\n    domProps,\n    trackRef,\n    isDisabled,\n    step,\n    values,\n    minValue,\n    maxValue,\n    focusedThumb,\n    labelId,\n    groupId,\n    thumbIds,\n    numberFormatter,\n    getThumbPercent,\n    getThumbMinValue,\n    getThumbMaxValue,\n    getThumbValueLabel,\n    isThumbDragging,\n    setThumbValue,\n    updateDraggedThumbs,\n    setThumbEditable,\n    setFocusedThumb,\n    getValueLabel,\n    isPointerOver,\n    showThumbOnHoverOnly,\n    thumbSize,\n  };\n}\n\nfunction replaceIndex<T>(array: T[], index: number, value: T) {\n  if (array[index] === value) {\n    return array;\n  }\n\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\n}\n","import React, {Ref, useCallback, useEffect, useRef} from 'react';\nimport clsx from 'clsx';\nimport {UseSliderReturn} from './use-slider';\nimport {useGlobalListeners, useObjectRef} from '@react-aria/utils';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {BaseSliderProps} from '@common/ui/forms/slider/base-slider';\n\ninterface SliderThumb {\n  index: number;\n  slider: UseSliderReturn;\n  isDisabled?: boolean;\n  ariaLabel?: string;\n  inputRef?: Ref<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler;\n  fillColor?: BaseSliderProps['fillColor'];\n}\n\nexport function SliderThumb({\n  index,\n  slider,\n  isDisabled: isThumbDisabled,\n  ariaLabel,\n  inputRef,\n  onBlur,\n  fillColor = 'primary',\n}: SliderThumb) {\n  const inputObjRef = useObjectRef(inputRef);\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  const {\n    step,\n    values,\n    focusedThumb,\n    labelId,\n    thumbIds,\n    isDisabled: isSliderDisabled,\n    getThumbPercent,\n    getThumbMinValue,\n    getThumbMaxValue,\n    getThumbValueLabel,\n    setThumbValue,\n    updateDraggedThumbs,\n    isThumbDragging,\n    setThumbEditable,\n    setFocusedThumb,\n    isPointerOver,\n    showThumbOnHoverOnly,\n    thumbSize = 'w-18 h-18',\n  } = slider;\n\n  const isDragging = isThumbDragging(index);\n  const value = values[index];\n\n  // Immediately register editability with the state\n  setThumbEditable(index, !isThumbDisabled);\n  const isDisabled = isThumbDisabled || isSliderDisabled;\n\n  const focusInput = useCallback(() => {\n    if (inputObjRef.current) {\n      inputObjRef.current.focus({preventScroll: true});\n    }\n  }, [inputObjRef]);\n\n  // we will focus the native range input when slider is clicked or thumb is\n  // focused in some other way, and let browser handle keyboard interactions\n  const isFocused = focusedThumb === index;\n  useEffect(() => {\n    if (isFocused) {\n      focusInput();\n    }\n  }, [isFocused, focusInput]);\n\n  const currentPointer = useRef<number | undefined>(undefined);\n  const handlePointerUp = (e: PointerEvent) => {\n    if (e.pointerId === currentPointer.current) {\n      focusInput();\n      updateDraggedThumbs(index, false);\n      removeGlobalListener(window, 'pointerup', handlePointerUp, false);\n    }\n  };\n\n  const className = clsx(\n    'outline-none rounded-full top-1/2 -translate-y-1/2 -translate-x-1/2 absolute inset-0 transition-button duration-200',\n    thumbSize,\n    !isDisabled && 'shadow-md',\n    thumbColor({fillColor, isDisabled, isDragging: isDragging}),\n    // show thumb on hover and while dragging, otherwise \"blur\" event will fire on thumb and dragging will stop\n    !showThumbOnHoverOnly ||\n      (showThumbOnHoverOnly && isDragging) ||\n      isPointerOver\n      ? 'visible'\n      : 'invisible',\n  );\n\n  return (\n    <div\n      role=\"presentation\"\n      className={className}\n      style={{\n        left: `${Math.max(getThumbPercent(index) * 100, 0)}%`,\n      }}\n      onPointerDown={e => {\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n          return;\n        }\n        focusInput();\n        currentPointer.current = e.pointerId;\n        updateDraggedThumbs(index, true);\n\n        addGlobalListener(window, 'pointerup', handlePointerUp, false);\n      }}\n    >\n      <input\n        id={thumbIds[index]}\n        onKeyDown={createEventHandler(() => {\n          updateDraggedThumbs(index, true);\n        })}\n        onKeyUp={createEventHandler(() => {\n          // make sure \"onChangeEnd\" is fired on keyboard navigation\n          updateDraggedThumbs(index, false);\n        })}\n        ref={inputObjRef}\n        tabIndex={!isDisabled ? 0 : undefined}\n        min={getThumbMinValue(index)}\n        max={getThumbMaxValue(index)}\n        step={step}\n        value={value}\n        disabled={isDisabled}\n        aria-label={ariaLabel}\n        aria-labelledby={labelId}\n        aria-orientation=\"horizontal\"\n        aria-valuetext={getThumbValueLabel(index)}\n        onFocus={() => {\n          setFocusedThumb(index);\n        }}\n        onBlur={e => {\n          setFocusedThumb(undefined);\n          updateDraggedThumbs(index, false);\n          onBlur?.(e);\n        }}\n        onChange={e => {\n          setThumbValue(index, parseFloat(e.target.value));\n        }}\n        type=\"range\"\n        className=\"sr-only\"\n      />\n    </div>\n  );\n}\n\ninterface SliderThumbColorProps {\n  isDisabled?: boolean;\n  isDragging: boolean;\n  fillColor?: BaseSliderProps['fillColor'];\n}\n\nfunction thumbColor({\n  isDisabled,\n  isDragging,\n  fillColor,\n}: SliderThumbColorProps): string {\n  if (isDisabled) {\n    return 'bg-slider-disabled cursor-default';\n  }\n\n  if (fillColor && fillColor !== 'primary') {\n    return fillColor;\n  }\n\n  return clsx(\n    'hover:bg-primary-dark',\n    isDragging ? 'bg-primary-dark' : 'bg-primary',\n  );\n}\n","import {BaseSlider} from './base-slider';\nimport {useSlider, UseSliderProps} from './use-slider';\nimport React, {Ref} from 'react';\nimport {SliderThumb} from './slider-thumb';\nimport {useController} from 'react-hook-form';\nimport {mergeProps} from '@react-aria/utils';\n\ninterface SliderProps extends UseSliderProps<number> {\n  inputRef?: Ref<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler;\n}\nexport function Slider({inputRef, onBlur, ...props}: SliderProps) {\n  const {onChange, onChangeEnd, value, defaultValue, ...otherProps} = props;\n\n  const baseProps: UseSliderProps = {\n    ...otherProps,\n    // Normalize `value: number[]` to `value: number`\n    value: value != null ? [value] : undefined,\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\n    onChange: (v: number[]): void => {\n      onChange?.(v[0]);\n    },\n    onChangeEnd: (v: number[]): void => {\n      onChangeEnd?.(v[0]);\n    },\n  };\n\n  const slider = useSlider(baseProps);\n\n  return (\n    <BaseSlider {...baseProps} slider={slider}>\n      <SliderThumb\n        fillColor={props.fillColor}\n        index={0}\n        slider={slider}\n        inputRef={inputRef}\n        onBlur={onBlur}\n      />\n    </BaseSlider>\n  );\n}\n\nexport interface FormSliderProps extends SliderProps {\n  name: string;\n}\n\nexport function FormSlider({name, ...props}: FormSliderProps) {\n  const {\n    field: {onChange, onBlur, value = '', ref},\n  } = useController({\n    name,\n  });\n\n  const formProps: SliderProps = {\n    onChange,\n    onBlur,\n    value: value || '', // avoid issues with \"null\" value when setting form defaults from backend model\n  };\n\n  return <Slider inputRef={ref} {...mergeProps(formProps, props)} />;\n}\n","import {Permission} from './permission';\nimport {Subscription} from '../billing/subscription';\nimport {Role} from './role';\nimport {SocialProfile} from './social-profile';\nimport {AccessToken} from './access-token';\nimport type {ActiveSession} from '@common/auth/ui/account-settings/sessions-panel/requests/use-user-sessions';\n\nexport const USER_MODEL = 'user';\n\nexport interface User {\n  id: number;\n  display_name: string;\n  username?: string;\n  first_name?: string;\n  last_name?: string;\n  avatar?: string;\n  email_verified_at: string;\n  permissions?: Permission[];\n  email: string;\n  password: string;\n  language: string;\n  timezone: string;\n  country: string;\n  created_at: string;\n  updated_at: string;\n  subscriptions?: Omit<Subscription, 'user'>[];\n  roles: Role[];\n  social_profiles: SocialProfile[];\n  tokens?: AccessToken[];\n  has_password: boolean;\n  available_space: number | null;\n  unread_notifications_count?: number;\n  card_last_four?: number;\n  card_brand?: string;\n  card_expires?: string;\n  model_type: typeof USER_MODEL;\n  banned_at?: string;\n  followed_users?: Omit<User, 'followed_users' | 'followers'>[];\n  followers_count?: number;\n  followed_users_count?: number;\n  followers?: Omit<User, 'followed_users' | 'followers'>[];\n  last_login?: ActiveSession;\n  bans?: {\n    id: number;\n    comment: string;\n    expired_at?: string;\n  }[];\n  two_factor_confirmed_at?: string;\n  two_factor_recovery_codes?: string[];\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const MoreVertIcon = createSvgIcon(\n  <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n, 'MoreVertOutlined');\n","export const artistPageTabs = {\n  discography: 1,\n  similar: 2,\n  about: 3,\n  tracks: 4,\n  albums: 5,\n  followers: 6,\n} as const;\n","import React from 'react';\nimport {useDialogContext} from './dialog-context';\nimport {Dialog} from './dialog';\nimport {DialogBody} from './dialog-body';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\nimport {useControlledState} from '@react-stately/utils';\n\ninterface Props {\n  image?: string;\n  images?: string[];\n  activeIndex?: number;\n  onActiveIndexChange?: (index: number) => void;\n  defaultActiveIndex?: number;\n}\nexport function ImageZoomDialog(props: Props) {\n  const {close} = useDialogContext();\n  const {image, images} = props;\n  const [activeIndex, setActiveIndex] = useControlledState(\n    props.activeIndex,\n    props.defaultActiveIndex,\n    props.onActiveIndexChange,\n  );\n  const src = image || images?.[activeIndex];\n\n  return (\n    <Dialog size=\"fullscreenTakeover\" background=\"bg-black/80\">\n      <DialogBody padding=\"p-0\" className=\"h-full w-full\">\n        <IconButton\n          size=\"lg\"\n          color=\"paper\"\n          className=\"absolute right-0 top-0 z-20 text-white\"\n          onClick={() => {\n            close();\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <div className=\"relative flex h-full w-full items-center justify-center p-40\">\n          {images?.length ? (\n            <IconButton\n              size=\"lg\"\n              color=\"white\"\n              variant=\"flat\"\n              className=\"absolute bottom-0 left-20 top-0 my-auto\"\n              disabled={activeIndex < 1}\n              onClick={() => {\n                setActiveIndex(activeIndex - 1);\n              }}\n            >\n              <KeyboardArrowLeftIcon />\n            </IconButton>\n          ) : null}\n          <img\n            src={src}\n            alt=\"\"\n            className=\"max-h-full w-auto object-contain shadow\"\n          />\n          {images?.length ? (\n            <IconButton\n              size=\"lg\"\n              color=\"white\"\n              variant=\"flat\"\n              className=\"absolute bottom-0 right-20 top-0 my-auto\"\n              disabled={activeIndex + 1 === images?.length}\n              onClick={() => {\n                setActiveIndex(activeIndex + 1);\n              }}\n            >\n              <KeyboardArrowRightIcon />\n            </IconButton>\n          ) : null}\n        </div>\n      </DialogBody>\n    </Dialog>\n  );\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const PauseIcon = createSvgIcon(\n  <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n, 'PauseOutlined');\n","import {Genre} from '../genres/genre';\nimport {Track} from '../tracks/track';\nimport {UserProfile} from '../user-profile/user-profile';\nimport {UserLink} from '../user-profile/user-link';\nimport {User} from '@common/auth/user';\nimport {Album} from '@app/web-player/albums/album';\n\nexport const ARTIST_MODEL = 'artist';\n\nexport interface Artist {\n  id: number;\n  name: string;\n  model_type: 'artist';\n  verified?: boolean;\n  spotify_id?: string;\n  followers_count?: number;\n  followers?: User[];\n  spotify_popularity?: boolean;\n  likes_count?: number;\n  albums_count?: number;\n  image_small?: string;\n  updated_at?: string;\n  top_tracks?: Track[];\n  albums?: Album[];\n  similar?: Omit<Artist, 'similar' | 'top_tracks' | 'albums'>[];\n  genres?: Genre[];\n  views: number;\n  plays: number;\n  profile?: UserProfile;\n  profile_images?: {url: string}[];\n  links?: UserLink[];\n}\n","import {Lyric} from './lyrics/lyric';\nimport {Genre} from '../genres/genre';\nimport {Tag} from '@common/tags/tag';\nimport {Artist} from '@app/web-player/artists/artist';\nimport {Album} from '@app/web-player/albums/album';\n\nexport const TRACK_MODEL = 'track';\n\nexport interface Track {\n  id: number;\n  name: string;\n  duration?: number;\n  artists?: Artist[];\n  plays?: number;\n  popularity?: number;\n  src?: string;\n  image?: string;\n  lyric?: Omit<Lyric, 'track'>;\n  album?: Album;\n  owner_id?: number;\n  description?: string;\n  tags: Tag[];\n  genres?: Genre[];\n  likes_count?: number;\n  reposts_count?: number;\n  comments_count?: number;\n  updated_at?: string;\n  created_at?: string;\n  // available in library tracks page only\n  added_at?: string;\n  model_type: 'track';\n}\n","import {Link, LinkProps} from 'react-router-dom';\nimport clsx from 'clsx';\nimport React, {useMemo} from 'react';\nimport {slugifyString} from '@common/utils/string/slugify-string';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\nimport {Genre} from '@app/web-player/genres/genre';\n\ninterface GenreLinkProps extends Omit<LinkProps, 'to'> {\n  genre: Genre;\n  className?: string;\n}\nexport function GenreLink({genre, className, ...linkProps}: GenreLinkProps) {\n  const uri = useMemo(() => {\n    return getGenreLink(genre);\n  }, [genre]);\n\n  return (\n    <Link\n      {...linkProps}\n      className={clsx(\n        'block outline-none first-letter:capitalize hover:underline focus-visible:underline',\n        className,\n      )}\n      to={uri}\n    >\n      {genre.display_name || genre.name}\n    </Link>\n  );\n}\n\nexport function getGenreLink(\n  genre: Genre,\n  {absolute}: {absolute?: boolean} = {},\n) {\n  const genreName = slugifyString(genre.name);\n  let link = `/genre/${genreName}`;\n  if (absolute) {\n    link = `${getBootstrapData().settings.base_url}${link}`;\n  }\n  return link;\n}\n","import {Link} from 'react-router-dom';\nimport clsx from 'clsx';\nimport React, {useMemo} from 'react';\nimport {slugifyString} from '@common/utils/string/slugify-string';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface AlbumLinkProps {\n  playlist: Playlist;\n  className?: string;\n}\nexport function PlaylistLink({playlist, className}: AlbumLinkProps) {\n  const uri = useMemo(() => {\n    return getPlaylistLink(playlist);\n  }, [playlist.id]);\n\n  return (\n    <Link className={clsx('capitalize hover:underline', className)} to={uri}>\n      {playlist.name}\n    </Link>\n  );\n}\n\nexport function getPlaylistLink(\n  playlist: Playlist,\n  {absolute}: {absolute?: boolean} = {}\n) {\n  const playlistName = slugifyString(playlist.name);\n  let link = `/playlist/${playlist.id}/${playlistName}`;\n  if (absolute) {\n    link = `${getBootstrapData().settings.base_url}${link}`;\n  }\n  return link;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const ImageIcon = createSvgIcon(\n  <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z\" />\n, 'ImageOutlined');\n","import {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Trans} from '@common/i18n/trans';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {Fragment} from 'react';\nimport {FormImageSelector} from '@common/ui/images/image-selector';\nimport {ImageIcon} from '@common/icons/material/Image';\n\nexport function CrupdatePlaylistFields() {\n  const {trans} = useTrans();\n  return (\n    <Fragment>\n      <div className=\"md:flex gap-28\">\n        <FileUploadProvider>\n          <FormImageSelector\n            name=\"image\"\n            diskPrefix=\"playlist_media\"\n            variant=\"square\"\n            previewSize=\"w-160 h-160\"\n            className=\"mb-24 md:mb-0\"\n            placeholderIcon={<ImageIcon />}\n            showRemoveButton\n            stretchPreview\n          />\n        </FileUploadProvider>\n        <div className=\"flex-auto mb-34\">\n          <FormTextField\n            autoFocus\n            name=\"name\"\n            label={<Trans message=\"Name\" />}\n            className=\"mb-24\"\n          />\n          <FormSwitch\n            name=\"collaborative\"\n            description={<Trans message=\"Invite other users to add tracks.\" />}\n            className=\"mb-24\"\n          >\n            <Trans message=\"Collaborative\" />\n          </FormSwitch>\n          <FormSwitch\n            name=\"public\"\n            description={<Trans message=\"Everyone can see public playlists.\" />}\n          >\n            <Trans message=\"Public\" />\n          </FormSwitch>\n        </div>\n      </div>\n      <FormTextField\n        name=\"description\"\n        label={<Trans message=\"Description\" />}\n        inputElementType=\"textarea\"\n        rows={4}\n        placeholder={trans(message('Give your playlist a catchy description.'))}\n      />\n    </Fragment>\n  );\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {UseFormReturn} from 'react-hook-form';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {CreatePlaylistPayload} from '@app/web-player/playlists/requests/use-create-playlist';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useParams} from 'react-router-dom';\n\ninterface Response extends BackendResponse {\n  playlist: Playlist;\n}\n\ninterface UseUpdatePlaylistProps {\n  form?: UseFormReturn<CreatePlaylistPayload>;\n  playlistId?: number | string;\n}\nexport function useUpdatePlaylist({\n  form,\n  playlistId,\n}: UseUpdatePlaylistProps = {}) {\n  const params = useParams();\n  if (params.playlistId && !playlistId) {\n    playlistId = params.playlistId;\n  }\n  return useMutation({\n    mutationFn: (props: Partial<CreatePlaylistPayload>) =>\n      updatePlaylist(playlistId!, props),\n    onSuccess: () => {\n      toast(message('Playlist updated'));\n      queryClient.invalidateQueries({queryKey: ['playlists']});\n    },\n    onError: r => (form ? onFormQueryError(r, form) : showHttpErrorToast(r)),\n  });\n}\n\nfunction updatePlaylist(\n  playlistId: number | string,\n  payload: Partial<CreatePlaylistPayload>,\n): Promise<Response> {\n  return apiClient.put(`playlists/${playlistId}`, payload).then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {CrupdatePlaylistFields} from '@app/web-player/playlists/crupdate-dialog/crupdate-playlist-fields';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {CreatePlaylistPayload} from '@app/web-player/playlists/requests/use-create-playlist';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@common/ui/forms/form';\nimport {useUpdatePlaylist} from '@app/web-player/playlists/requests/use-update-playlist';\nimport {Playlist} from '@app/web-player/playlists/playlist';\n\ninterface UpdatePlaylistDialogProps {\n  playlist: Playlist;\n}\nexport function UpdatePlaylistDialog({playlist}: UpdatePlaylistDialogProps) {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreatePlaylistPayload>({\n    defaultValues: {\n      name: playlist.name,\n      public: playlist.public,\n      collaborative: playlist.collaborative,\n      image: playlist.image,\n      description: playlist.description,\n    },\n  });\n  const updatePlaylist = useUpdatePlaylist({form, playlistId: playlist.id});\n\n  return (\n    <Dialog size=\"xl\">\n      <DialogHeader>\n        <Trans message=\"Update playlist\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            updatePlaylist.mutate(values, {\n              onSuccess: response => {\n                close(response.playlist);\n              },\n            });\n          }}\n        >\n          <CrupdatePlaylistFields />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updatePlaylist.isPending}\n        >\n          <Trans message=\"Update\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {Playlist} from '@app/web-player/playlists/playlist';\nimport {UseFormReturn} from 'react-hook-form';\nimport {useMutation} from '@tanstack/react-query';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  playlist: Playlist;\n}\n\nexport interface CreatePlaylistPayload {\n  name: string;\n  public: boolean;\n  collaborative: boolean;\n  image: string;\n  description: string;\n}\n\nexport function useCreatePlaylist(form: UseFormReturn<CreatePlaylistPayload>) {\n  return useMutation({\n    mutationFn: (props: CreatePlaylistPayload) => createPlaylist(props),\n    onSuccess: () => {\n      toast(message('Playlist created'));\n      queryClient.invalidateQueries({queryKey: ['playlists']});\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createPlaylist(payload: CreatePlaylistPayload): Promise<Response> {\n  return apiClient.post('playlists', payload).then(r => r.data);\n}\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {CrupdatePlaylistFields} from '@app/web-player/playlists/crupdate-dialog/crupdate-playlist-fields';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {Button} from '@common/ui/buttons/button';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {\n  CreatePlaylistPayload,\n  useCreatePlaylist,\n} from '@app/web-player/playlists/requests/use-create-playlist';\nimport {useForm} from 'react-hook-form';\nimport {Form} from '@common/ui/forms/form';\n\nexport function CreatePlaylistDialog() {\n  const {close, formId} = useDialogContext();\n  const form = useForm<CreatePlaylistPayload>();\n  const createPlaylist = useCreatePlaylist(form);\n\n  return (\n    <Dialog size=\"xl\">\n      <DialogHeader>\n        <Trans message=\"New playlist\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          id={formId}\n          form={form}\n          onSubmit={values => {\n            createPlaylist.mutate(values, {\n              onSuccess: response => {\n                close(response.playlist);\n              },\n            });\n          }}\n        >\n          <CrupdatePlaylistFields />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createPlaylist.isPending}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {User} from '@common/auth/user';\nimport {Track} from '@app/web-player/tracks/track';\n\nexport const PLAYLIST_MODEL = 'playlist';\n\nexport interface Playlist {\n  id: number;\n  name: string;\n  public: boolean;\n  collaborative: boolean;\n  image: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  owner_id: number;\n  owner?: User;\n  editors?: User[];\n  tracks_count?: number;\n  tracks?: Track[];\n  model_type: typeof PLAYLIST_MODEL;\n  views: number;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  commentIds: number[];\n}\n\nexport function useDeleteComments() {\n  return useMutation({\n    mutationFn: (payload: Payload) => deleteComments(payload),\n    onSuccess: (response, payload) => {\n      toast(\n        message('[one Comment deleted|other Deleted :count comments]', {\n          values: {count: payload.commentIds.length},\n        }),\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n\nfunction deleteComments({commentIds}: Payload): Promise<Response> {\n  return apiClient.delete(`comment/${commentIds.join(',')}`).then(r => r.data);\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const TrendingUpIcon = createSvgIcon(\n  <path d=\"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6h-6z\" />\n, 'TrendingUpOutlined');\n","import {PaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {User} from '@common/auth/user';\n\nexport const CHANNEL_MODEL = 'channel';\n\nexport type ChannelContentItem<T = unknown> = T & {\n  channelable_id?: number;\n  channelable_order?: number;\n};\n\nexport interface ChannelConfig {\n  autoUpdateMethod?: string;\n  autoUpdateProvider?: string;\n  disablePagination?: boolean;\n  disablePlayback?: boolean;\n  restriction?: string;\n  restrictionModelId?: 'urlParam' | number;\n  contentModel: string;\n  contentType: 'listAll' | 'manual' | 'autoUpdate';\n  contentOrder: string;\n  // layout user selected manually, it's stored in a cookie and set as this\n  // prop in channel controller so there are no mismatches during SSR\n  selectedLayout?: string;\n  layout: string;\n  nestedLayout: string;\n  hideTitle?: boolean;\n  lockSlug?: boolean;\n  preventDeletion?: boolean;\n  actions?: {tooltip: string; icon: string; route: string}[];\n}\n\nexport interface Channel<T = ChannelContentItem> {\n  id: number;\n  name: string;\n  internal: boolean;\n  public: boolean;\n  description?: string;\n  type: string;\n  slug: string;\n  config: ChannelConfig;\n  items?: T[];\n  model_type: 'channel';\n  items_count?: number;\n  user?: User;\n  updated_at?: string;\n  restriction?: {id: number; name: string; model_type: string};\n  content?: PaginationResponse<T>;\n}\n","import {createSvgIcon} from '../create-svg-icon';\n\nexport const GridViewIcon = createSvgIcon(\n  <path d=\"M3 3v8h8V3H3zm6 6H5V5h4v4zm-6 4v8h8v-8H3zm6 6H5v-4h4v4zm4-16v8h8V3h-8zm6 6h-4V5h4v4zm-6 4v8h8v-8h-8zm6 6h-4v-4h4v4z\" />\n, 'GridViewOutlined');\n","import {useMediaQuery} from './use-media-query';\n\nexport function useIsTouchDevice() {\n  return useMediaQuery('((pointer: coarse))');\n}\n","import {Channel} from '@common/channels/channel';\nimport {useParams, useSearchParams} from 'react-router-dom';\nimport {useBackendFilterUrlParams} from '@common/datatable/filters/backend-filter-url-params';\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\n\nexport function useChannelQueryParams(\n  channel?: Channel,\n  userParams?: Record<string, string | null>\n) {\n  const params = useParams();\n  const [searchParams] = useSearchParams();\n  const {encodedFilters} = useBackendFilterUrlParams();\n\n  const queryParams = {\n    ...userParams,\n    restriction: params.restriction || '',\n    order: searchParams.get('order'),\n    [BackendFiltersUrlKey]: encodedFilters,\n    paginate: 'simple',\n  };\n\n  // always set default channel order to keep query key stable\n  if (!queryParams.order && channel) {\n    queryParams.order = channel.config.contentOrder || 'popularity:desc';\n  }\n\n  return queryParams;\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useParams} from 'react-router-dom';\nimport {Channel} from '@common/channels/channel';\nimport {useChannelQueryParams} from '@common/channels/use-channel-query-params';\nimport {isSsr} from '@common/utils/dom/is-ssr';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nexport interface GetChannelResponse extends BackendResponse {\n  channel: Channel;\n}\n\nexport function useChannel(\n  slugOrId: string | number | undefined,\n  loader: 'channelPage' | 'editChannelPage' | 'editUserListPage',\n  userParams?: Record<string, string | null>,\n) {\n  const params = useParams();\n  const channelId = slugOrId || params.slugOrId!;\n  const queryParams = useChannelQueryParams(undefined, userParams);\n  return useQuery({\n    // only refetch when channel ID or restriction changes and not query params.\n    // content will be re-fetched in channel content components\n    // on SSR use query params as well, to avoid caching wrong data when query params change\n    queryKey: isSsr()\n      ? channelQueryKey(channelId, queryParams)\n      : channelQueryKey(channelId, {restriction: queryParams.restriction}),\n\n    queryFn: () => fetchChannel(channelId, {...queryParams, loader}),\n    initialData: () => {\n      // @ts-ignore\n      const data = getBootstrapData().loaders?.[loader];\n      const isSameChannel =\n        data?.channel.id == channelId || data?.channel.slug == channelId;\n      const isSameRestriction =\n        !queryParams.restriction ||\n        data?.channel.restriction?.name === queryParams.restriction;\n      if (isSameChannel && isSameRestriction) {\n        return data;\n      }\n    },\n  });\n}\n\nexport function channelQueryKey(\n  slugOrId: number | string,\n  params?: Record<string, string | null>,\n) {\n  return ['channel', `${slugOrId}`, params];\n}\n\nexport function channelEndpoint(slugOrId: number | string) {\n  return `channel/${slugOrId}`;\n}\n\nfunction fetchChannel(\n  slugOrId: number | string,\n  params: Record<string, string | number | undefined | null> = {},\n): Promise<GetChannelResponse> {\n  return apiClient\n    .get(channelEndpoint(slugOrId), {params})\n    .then(response => response.data);\n}\n"],"names":["encodedFilters","decodedFilters","id","updatePlaylist","createPlaylist"],"mappings":"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"}